
  // MrubyBridgeSignaturePlugin: MBP601
  cell nMruby::tsKernel_Initializer VM_tsKernel_Initializer{ };
  cell nMruby::tsMotor_Initializer VM_tsMotor_Initializer{ };
  cell nMruby::tsLCD_Initializer VM_tsLCD_Initializer{ };
  cell nMruby::tsLED_Initializer VM_tsLED_Initializer{ };
  cell nMruby::tsButton_Initializer VM_tsButton_Initializer{ };
  cell nMruby::tsBattery_Initializer VM_tsBattery_Initializer{ };
  cell nMruby::tsSpeaker_Initializer VM_tsSpeaker_Initializer{ };
  cell nMruby::tsUltrasonicSensor_Initializer VM_tsUltrasonicSensor_Initializer{ };
  cell nMruby::tsGyroSensor_Initializer VM_tsGyroSensor_Initializer{ };
  cell nMruby::tsColorSensor_Initializer VM_tsColorSensor_Initializer{ };
  cell nMruby::tsTouchSensor_Initializer VM_tsTouchSensor_Initializer{ };
  cell nMruby::tsBalancer_Initializer VM_tsBalancer_Initializer{ };
  cell nMruby::tsSharedMemory_Initializer VM_tsSharedMemory_Initializer{ };
  // MBP602
  cell nMruby::tIntPointer CtIntPointer { };
  cell nMruby::tULongPointer CtULongPointer { };
  cell nMruby::tInt32Pointer CtInt32Pointer { };
  cell nMruby::tCharPointer CtCharPointer { };
  cell nMruby::tUInt16Pointer CtUInt16Pointer { };
  cell nMruby::tInt8Pointer CtInt8Pointer { };
  // MBP603
  /* === VM name is 'VM' === (MBP610) */
  cell nMruby::tTECSInitializer VM_TECSInitializer {
    cInitialize[] = VM_tsKernel_Initializer.eInitialize;
    cInitialize[] = VM_tsMotor_Initializer.eInitialize;
    cInitialize[] = VM_tsLCD_Initializer.eInitialize;
    cInitialize[] = VM_tsLED_Initializer.eInitialize;
    cInitialize[] = VM_tsButton_Initializer.eInitialize;
    cInitialize[] = VM_tsBattery_Initializer.eInitialize;
    cInitialize[] = VM_tsSpeaker_Initializer.eInitialize;
    cInitialize[] = VM_tsUltrasonicSensor_Initializer.eInitialize;
    cInitialize[] = VM_tsGyroSensor_Initializer.eInitialize;
    cInitialize[] = VM_tsColorSensor_Initializer.eInitialize;
    cInitialize[] = VM_tsTouchSensor_Initializer.eInitialize;
    cInitialize[] = VM_tsBalancer_Initializer.eInitialize;
    cInitialize[] = VM_tsSharedMemory_Initializer.eInitialize;
    cInitialize[] = CtIntPointer.eInitialize;
    cInitialize[] = CtULongPointer.eInitialize;
    cInitialize[] = CtInt32Pointer.eInitialize;
    cInitialize[] = CtCharPointer.eInitialize;
    cInitialize[] = CtUInt16Pointer.eInitialize;
    cInitialize[] = CtInt8Pointer.eInitialize;
  };/*------------ TECSInfoPlugin post code ------------*/
region rDomainEV3{
    region rTECSInfo {

        /*** :: namespace information cell ***/
        cell nTECSInfo::tNamespaceInfo _RootNamespaceInfo{
            name = "::";

            /* SIGNATURE info */
            cSignatureInfo[] = sTaskBodySignatureInfo.eSignatureInfo;
            cSignatureInfo[] = sTaskExceptionBodySignatureInfo.eSignatureInfo;
            cSignatureInfo[] = sTaskSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = siTaskSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = sInitializeRoutineBodySignatureInfo.eSignatureInfo;
            cSignatureInfo[] = sTerminateRoutineBodySignatureInfo.eSignatureInfo;
            cSignatureInfo[] = siHandlerBodySignatureInfo.eSignatureInfo;
            cSignatureInfo[] = sConfigInterruptSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = sCyclicSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = sAlarmSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = siAlarmSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = sSemaphoreSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = siSemaphoreSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = sEventflagSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = siEventflagSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = sDataqueueSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = siDataqueueSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = sPriorityDataqueueSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = siPriorityDataqueueSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = sFixedSizeMemoryPoolSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = sKernelSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = siKernelSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = sMessageBufferSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = sMallocSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = sUltrasonicSensorSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = sColorSensorSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = sTouchSensorSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = sGyroSensorSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = sMotorSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = sButtonSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = sLCDSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = sLEDSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = sBatterySignatureInfo.eSignatureInfo;
            cSignatureInfo[] = sSpeakerSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = sRiteVMSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = sBalancerSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = sSharedMemorySignatureInfo.eSignatureInfo;

            /* CELLTYPE info */
            cCelltypeInfo[] = tTaskCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = tKernelCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = tUltrasonicSensorCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = tColorSensorCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = tTouchSensorCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = tGyroSensorCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = tMotorCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = tButtonCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = tLCDCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = tLEDCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = tBatteryCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = tSpeakerCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = tEV3PlatformCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = tBalancerCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = tSharedMemoryCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = tTaskMainCelltypeInfo.eCelltypeInfo;

            /* NAMESPACE info */
            cNamespaceInfo[] = nMrubyNamespaceInfo.eNamespaceInfo;
            cNamespaceInfo[] = nPosixNamespaceInfo.eNamespaceInfo;
            cNamespaceInfo[] = nTECSInfoNamespaceInfo.eNamespaceInfo;
        };   /* cell nTECSInfo::tNamespaceInfo _RootNamespaceInfo */

        /*** sTaskBody signature information ****/
        cell nTECSInfo::tSignatureInfo sTaskBodySignatureInfo {
            name            = "sTaskBody";
            cFunctionInfo[] = sTaskBody_mainFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo sTaskBody_mainFunctionInfo {
            name            = "sTaskBody_";
            bOneway         = false;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };

        /*** sTaskExceptionBody signature information ****/
        cell nTECSInfo::tSignatureInfo sTaskExceptionBodySignatureInfo {
            name            = "sTaskExceptionBody";
            cFunctionInfo[] = sTaskExceptionBody_mainFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo sTaskExceptionBody_mainFunctionInfo {
            name            = "sTaskExceptionBody_";
            bOneway         = false;
            cParamInfo[]    = sTaskExceptionBody_main_patternParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sTaskExceptionBody_main_patternParamInfo {
            name            = "pattern";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = TEXPTNTypeInfo.eTypeInfo;
        };

        /*** sTask signature information ****/
        cell nTECSInfo::tSignatureInfo sTaskSignatureInfo {
            name            = "sTask";
            cFunctionInfo[] = sTask_activateFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sTask_cancelActivateFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sTask_terminateFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sTask_changePriorityFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sTask_getPriorityFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sTask_referFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sTask_wakeupFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sTask_cancelWakeupFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sTask_releaseWaitFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sTask_suspendFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sTask_resumeFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sTask_raiseExceptionFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sTask_referExceptionFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sTask_startOverRunHandlerFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sTask_stopOverRunHandlerFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sTask_referOverRunHandlerFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo sTask_activateFunctionInfo {
            name            = "sTask_";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sTask_cancelActivateFunctionInfo {
            name            = "sTask_";
            bOneway         = false;
            cReturnTypeInfo = ER_UINTTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sTask_terminateFunctionInfo {
            name            = "sTask_";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sTask_changePriorityFunctionInfo {
            name            = "sTask_";
            bOneway         = false;
            cParamInfo[]    = sTask_changePriority_priorityParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sTask_changePriority_priorityParamInfo {
            name            = "priority";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = PRITypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sTask_getPriorityFunctionInfo {
            name            = "sTask_";
            bOneway         = false;
            cParamInfo[]    = sTask_getPriority_p_priorityParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sTask_getPriority_p_priorityParamInfo {
            name            = "p_priority";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = PRI_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sTask_referFunctionInfo {
            name            = "sTask_";
            bOneway         = false;
            cParamInfo[]    = sTask_refer_pk_taskStatusParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sTask_refer_pk_taskStatusParamInfo {
            name            = "pk_taskStatus";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = T_RTSK_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sTask_wakeupFunctionInfo {
            name            = "sTask_";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sTask_cancelWakeupFunctionInfo {
            name            = "sTask_";
            bOneway         = false;
            cReturnTypeInfo = ER_UINTTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sTask_releaseWaitFunctionInfo {
            name            = "sTask_";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sTask_suspendFunctionInfo {
            name            = "sTask_";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sTask_resumeFunctionInfo {
            name            = "sTask_";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sTask_raiseExceptionFunctionInfo {
            name            = "sTask_";
            bOneway         = false;
            cParamInfo[]    = sTask_raiseException_patternParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sTask_raiseException_patternParamInfo {
            name            = "pattern";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = TEXPTNTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sTask_referExceptionFunctionInfo {
            name            = "sTask_";
            bOneway         = false;
            cParamInfo[]    = sTask_referException_pk_rtexParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sTask_referException_pk_rtexParamInfo {
            name            = "pk_rtex";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = T_RTEX_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sTask_startOverRunHandlerFunctionInfo {
            name            = "sTask_";
            bOneway         = false;
            cParamInfo[]    = sTask_startOverRunHandler_ovrtimParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sTask_startOverRunHandler_ovrtimParamInfo {
            name            = "ovrtim";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = OVRTIMTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sTask_stopOverRunHandlerFunctionInfo {
            name            = "sTask_";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sTask_referOverRunHandlerFunctionInfo {
            name            = "sTask_";
            bOneway         = false;
            cParamInfo[]    = sTask_referOverRunHandler_pk_rovrParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sTask_referOverRunHandler_pk_rovrParamInfo {
            name            = "pk_rovr";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = T_ROVR_Ptr_TypeInfo.eTypeInfo;
        };

        /*** siTask signature information ****/
        cell nTECSInfo::tSignatureInfo siTaskSignatureInfo {
            name            = "siTask";
            cFunctionInfo[] = siTask_activateFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = siTask_wakeupFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = siTask_releaseWaitFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = siTask_raiseExceptionFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = siTask_disableWaitFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = siTask_enableWaitFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = siTask_startOverRunHandlerFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = siTask_stopOverRunHandlerFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo siTask_activateFunctionInfo {
            name            = "siTask_";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo siTask_wakeupFunctionInfo {
            name            = "siTask_";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo siTask_releaseWaitFunctionInfo {
            name            = "siTask_";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo siTask_raiseExceptionFunctionInfo {
            name            = "siTask_";
            bOneway         = false;
            cParamInfo[]    = siTask_raiseException_patternParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo siTask_raiseException_patternParamInfo {
            name            = "pattern";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = TEXPTNTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo siTask_disableWaitFunctionInfo {
            name            = "siTask_";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo siTask_enableWaitFunctionInfo {
            name            = "siTask_";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo siTask_startOverRunHandlerFunctionInfo {
            name            = "siTask_";
            bOneway         = false;
            cParamInfo[]    = siTask_startOverRunHandler_ovrtimParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo siTask_startOverRunHandler_ovrtimParamInfo {
            name            = "ovrtim";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = OVRTIMTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo siTask_stopOverRunHandlerFunctionInfo {
            name            = "siTask_";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };

        /*** sInitializeRoutineBody signature information ****/
        cell nTECSInfo::tSignatureInfo sInitializeRoutineBodySignatureInfo {
            name            = "sInitializeRoutineBody";
            cFunctionInfo[] = sInitializeRoutineBody_mainFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo sInitializeRoutineBody_mainFunctionInfo {
            name            = "sInitializeRoutineBody_";
            bOneway         = false;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };

        /*** sTerminateRoutineBody signature information ****/
        cell nTECSInfo::tSignatureInfo sTerminateRoutineBodySignatureInfo {
            name            = "sTerminateRoutineBody";
            cFunctionInfo[] = sTerminateRoutineBody_mainFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo sTerminateRoutineBody_mainFunctionInfo {
            name            = "sTerminateRoutineBody_";
            bOneway         = false;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };

        /*** siHandlerBody signature information ****/
        cell nTECSInfo::tSignatureInfo siHandlerBodySignatureInfo {
            name            = "siHandlerBody";
            cFunctionInfo[] = siHandlerBody_mainFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo siHandlerBody_mainFunctionInfo {
            name            = "siHandlerBody_";
            bOneway         = false;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };

        /*** sConfigInterrupt signature information ****/
        cell nTECSInfo::tSignatureInfo sConfigInterruptSignatureInfo {
            name            = "sConfigInterrupt";
            cFunctionInfo[] = sConfigInterrupt_disableFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sConfigInterrupt_enableFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo sConfigInterrupt_disableFunctionInfo {
            name            = "sConfigInterrupt_";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sConfigInterrupt_enableFunctionInfo {
            name            = "sConfigInterrupt_";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };

        /*** sCyclic signature information ****/
        cell nTECSInfo::tSignatureInfo sCyclicSignatureInfo {
            name            = "sCyclic";
            cFunctionInfo[] = sCyclic_startFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sCyclic_stopFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sCyclic_referFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo sCyclic_startFunctionInfo {
            name            = "sCyclic_";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sCyclic_stopFunctionInfo {
            name            = "sCyclic_";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sCyclic_referFunctionInfo {
            name            = "sCyclic_";
            bOneway         = false;
            cParamInfo[]    = sCyclic_refer_pk_cyclicHandlerStatusParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sCyclic_refer_pk_cyclicHandlerStatusParamInfo {
            name            = "pk_cyclicHandlerStatus";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = T_RCYC_Ptr_TypeInfo.eTypeInfo;
        };

        /*** sAlarm signature information ****/
        cell nTECSInfo::tSignatureInfo sAlarmSignatureInfo {
            name            = "sAlarm";
            cFunctionInfo[] = sAlarm_startFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sAlarm_stopFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sAlarm_referFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo sAlarm_startFunctionInfo {
            name            = "sAlarm_";
            bOneway         = false;
            cParamInfo[]    = sAlarm_start_alarmTimeParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sAlarm_start_alarmTimeParamInfo {
            name            = "alarmTime";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = RELTIMTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sAlarm_stopFunctionInfo {
            name            = "sAlarm_";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sAlarm_referFunctionInfo {
            name            = "sAlarm_";
            bOneway         = false;
            cParamInfo[]    = sAlarm_refer_pk_alarmStatusParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sAlarm_refer_pk_alarmStatusParamInfo {
            name            = "pk_alarmStatus";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = T_RALM_Ptr_TypeInfo.eTypeInfo;
        };

        /*** siAlarm signature information ****/
        cell nTECSInfo::tSignatureInfo siAlarmSignatureInfo {
            name            = "siAlarm";
            cFunctionInfo[] = siAlarm_startFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = siAlarm_stopFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo siAlarm_startFunctionInfo {
            name            = "siAlarm_";
            bOneway         = false;
            cParamInfo[]    = siAlarm_start_alarmTimeParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo siAlarm_start_alarmTimeParamInfo {
            name            = "alarmTime";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = RELTIMTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo siAlarm_stopFunctionInfo {
            name            = "siAlarm_";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };

        /*** sSemaphore signature information ****/
        cell nTECSInfo::tSignatureInfo sSemaphoreSignatureInfo {
            name            = "sSemaphore";
            cFunctionInfo[] = sSemaphore_signalFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sSemaphore_waitFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sSemaphore_waitPollingFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sSemaphore_waitTimeoutFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sSemaphore_initializeFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sSemaphore_referFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo sSemaphore_signalFunctionInfo {
            name            = "sSemaphore_";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sSemaphore_waitFunctionInfo {
            name            = "sSemaphore_";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sSemaphore_waitPollingFunctionInfo {
            name            = "sSemaphore_";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sSemaphore_waitTimeoutFunctionInfo {
            name            = "sSemaphore_";
            bOneway         = false;
            cParamInfo[]    = sSemaphore_waitTimeout_timeoutParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sSemaphore_waitTimeout_timeoutParamInfo {
            name            = "timeout";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = TMOTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sSemaphore_initializeFunctionInfo {
            name            = "sSemaphore_";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sSemaphore_referFunctionInfo {
            name            = "sSemaphore_";
            bOneway         = false;
            cParamInfo[]    = sSemaphore_refer_pk_semaphoreStatusParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sSemaphore_refer_pk_semaphoreStatusParamInfo {
            name            = "pk_semaphoreStatus";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = T_RSEM_Ptr_TypeInfo.eTypeInfo;
        };

        /*** siSemaphore signature information ****/
        cell nTECSInfo::tSignatureInfo siSemaphoreSignatureInfo {
            name            = "siSemaphore";
            cFunctionInfo[] = siSemaphore_signalFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo siSemaphore_signalFunctionInfo {
            name            = "siSemaphore_";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };

        /*** sEventflag signature information ****/
        cell nTECSInfo::tSignatureInfo sEventflagSignatureInfo {
            name            = "sEventflag";
            cFunctionInfo[] = sEventflag_setFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sEventflag_clearFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sEventflag_waitFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sEventflag_waitPollingFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sEventflag_waitTimeoutFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sEventflag_initializeFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sEventflag_referFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo sEventflag_setFunctionInfo {
            name            = "sEventflag_";
            bOneway         = false;
            cParamInfo[]    = sEventflag_set_setPatternParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sEventflag_set_setPatternParamInfo {
            name            = "setPattern";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = FLGPTNTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sEventflag_clearFunctionInfo {
            name            = "sEventflag_";
            bOneway         = false;
            cParamInfo[]    = sEventflag_clear_clearPatternParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sEventflag_clear_clearPatternParamInfo {
            name            = "clearPattern";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = FLGPTNTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sEventflag_waitFunctionInfo {
            name            = "sEventflag_";
            bOneway         = false;
            cParamInfo[]    = sEventflag_wait_waitPatternParamInfo.eParamInfo;
            cParamInfo[]    = sEventflag_wait_waitFlagModeParamInfo.eParamInfo;
            cParamInfo[]    = sEventflag_wait_p_flagPatternParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sEventflag_wait_waitPatternParamInfo {
            name            = "waitPattern";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = FLGPTNTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sEventflag_wait_waitFlagModeParamInfo {
            name            = "waitFlagMode";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = MODETypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sEventflag_wait_p_flagPatternParamInfo {
            name            = "p_flagPattern";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = FLGPTN_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sEventflag_waitPollingFunctionInfo {
            name            = "sEventflag_";
            bOneway         = false;
            cParamInfo[]    = sEventflag_waitPolling_waitPatternParamInfo.eParamInfo;
            cParamInfo[]    = sEventflag_waitPolling_waitFlagModeParamInfo.eParamInfo;
            cParamInfo[]    = sEventflag_waitPolling_p_flagPatternParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sEventflag_waitPolling_waitPatternParamInfo {
            name            = "waitPattern";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = FLGPTNTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sEventflag_waitPolling_waitFlagModeParamInfo {
            name            = "waitFlagMode";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = MODETypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sEventflag_waitPolling_p_flagPatternParamInfo {
            name            = "p_flagPattern";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = FLGPTN_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sEventflag_waitTimeoutFunctionInfo {
            name            = "sEventflag_";
            bOneway         = false;
            cParamInfo[]    = sEventflag_waitTimeout_waitPatternParamInfo.eParamInfo;
            cParamInfo[]    = sEventflag_waitTimeout_waitFlagModeParamInfo.eParamInfo;
            cParamInfo[]    = sEventflag_waitTimeout_p_flagPatternParamInfo.eParamInfo;
            cParamInfo[]    = sEventflag_waitTimeout_timeoutParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sEventflag_waitTimeout_waitPatternParamInfo {
            name            = "waitPattern";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = FLGPTNTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sEventflag_waitTimeout_waitFlagModeParamInfo {
            name            = "waitFlagMode";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = MODETypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sEventflag_waitTimeout_p_flagPatternParamInfo {
            name            = "p_flagPattern";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = FLGPTN_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sEventflag_waitTimeout_timeoutParamInfo {
            name            = "timeout";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = TMOTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sEventflag_initializeFunctionInfo {
            name            = "sEventflag_";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sEventflag_referFunctionInfo {
            name            = "sEventflag_";
            bOneway         = false;
            cParamInfo[]    = sEventflag_refer_pk_eventflagStatusParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sEventflag_refer_pk_eventflagStatusParamInfo {
            name            = "pk_eventflagStatus";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = T_RFLG_Ptr_TypeInfo.eTypeInfo;
        };

        /*** siEventflag signature information ****/
        cell nTECSInfo::tSignatureInfo siEventflagSignatureInfo {
            name            = "siEventflag";
            cFunctionInfo[] = siEventflag_setFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo siEventflag_setFunctionInfo {
            name            = "siEventflag_";
            bOneway         = false;
            cParamInfo[]    = siEventflag_set_setPatternParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo siEventflag_set_setPatternParamInfo {
            name            = "setPattern";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = FLGPTNTypeInfo.eTypeInfo;
        };

        /*** sDataqueue signature information ****/
        cell nTECSInfo::tSignatureInfo sDataqueueSignatureInfo {
            name            = "sDataqueue";
            cFunctionInfo[] = sDataqueue_sendFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sDataqueue_sendPollingFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sDataqueue_sendTimeoutFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sDataqueue_sendForceFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sDataqueue_receiveFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sDataqueue_receivePollingFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sDataqueue_receiveTimeoutFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sDataqueue_initializeFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sDataqueue_referFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo sDataqueue_sendFunctionInfo {
            name            = "sDataqueue_";
            bOneway         = false;
            cParamInfo[]    = sDataqueue_send_dataParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sDataqueue_send_dataParamInfo {
            name            = "data";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = intptr_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sDataqueue_sendPollingFunctionInfo {
            name            = "sDataqueue_";
            bOneway         = false;
            cParamInfo[]    = sDataqueue_sendPolling_dataParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sDataqueue_sendPolling_dataParamInfo {
            name            = "data";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = intptr_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sDataqueue_sendTimeoutFunctionInfo {
            name            = "sDataqueue_";
            bOneway         = false;
            cParamInfo[]    = sDataqueue_sendTimeout_dataParamInfo.eParamInfo;
            cParamInfo[]    = sDataqueue_sendTimeout_timeoutParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sDataqueue_sendTimeout_dataParamInfo {
            name            = "data";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = intptr_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sDataqueue_sendTimeout_timeoutParamInfo {
            name            = "timeout";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = TMOTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sDataqueue_sendForceFunctionInfo {
            name            = "sDataqueue_";
            bOneway         = false;
            cParamInfo[]    = sDataqueue_sendForce_dataParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sDataqueue_sendForce_dataParamInfo {
            name            = "data";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = intptr_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sDataqueue_receiveFunctionInfo {
            name            = "sDataqueue_";
            bOneway         = false;
            cParamInfo[]    = sDataqueue_receive_p_dataParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sDataqueue_receive_p_dataParamInfo {
            name            = "p_data";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = intptr_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sDataqueue_receivePollingFunctionInfo {
            name            = "sDataqueue_";
            bOneway         = false;
            cParamInfo[]    = sDataqueue_receivePolling_p_dataParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sDataqueue_receivePolling_p_dataParamInfo {
            name            = "p_data";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = intptr_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sDataqueue_receiveTimeoutFunctionInfo {
            name            = "sDataqueue_";
            bOneway         = false;
            cParamInfo[]    = sDataqueue_receiveTimeout_p_dataParamInfo.eParamInfo;
            cParamInfo[]    = sDataqueue_receiveTimeout_timeoutParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sDataqueue_receiveTimeout_p_dataParamInfo {
            name            = "p_data";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = intptr_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sDataqueue_receiveTimeout_timeoutParamInfo {
            name            = "timeout";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = TMOTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sDataqueue_initializeFunctionInfo {
            name            = "sDataqueue_";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sDataqueue_referFunctionInfo {
            name            = "sDataqueue_";
            bOneway         = false;
            cParamInfo[]    = sDataqueue_refer_pk_dataqueueStatusParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sDataqueue_refer_pk_dataqueueStatusParamInfo {
            name            = "pk_dataqueueStatus";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = T_RDTQ_Ptr_TypeInfo.eTypeInfo;
        };

        /*** siDataqueue signature information ****/
        cell nTECSInfo::tSignatureInfo siDataqueueSignatureInfo {
            name            = "siDataqueue";
            cFunctionInfo[] = siDataqueue_sendPollingFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = siDataqueue_sendForceFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo siDataqueue_sendPollingFunctionInfo {
            name            = "siDataqueue_";
            bOneway         = false;
            cParamInfo[]    = siDataqueue_sendPolling_dataParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo siDataqueue_sendPolling_dataParamInfo {
            name            = "data";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = intptr_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo siDataqueue_sendForceFunctionInfo {
            name            = "siDataqueue_";
            bOneway         = false;
            cParamInfo[]    = siDataqueue_sendForce_dataParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo siDataqueue_sendForce_dataParamInfo {
            name            = "data";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = intptr_tTypeInfo.eTypeInfo;
        };

        /*** sPriorityDataqueue signature information ****/
        cell nTECSInfo::tSignatureInfo sPriorityDataqueueSignatureInfo {
            name            = "sPriorityDataqueue";
            cFunctionInfo[] = sPriorityDataqueue_sendFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sPriorityDataqueue_sendPollingFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sPriorityDataqueue_sendTimeoutFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sPriorityDataqueue_receiveFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sPriorityDataqueue_receivePollingFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sPriorityDataqueue_receiveTimeoutFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sPriorityDataqueue_initializeFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sPriorityDataqueue_referFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo sPriorityDataqueue_sendFunctionInfo {
            name            = "sPriorityDataqueue_";
            bOneway         = false;
            cParamInfo[]    = sPriorityDataqueue_send_dataParamInfo.eParamInfo;
            cParamInfo[]    = sPriorityDataqueue_send_dataPriorityParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sPriorityDataqueue_send_dataParamInfo {
            name            = "data";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = intptr_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sPriorityDataqueue_send_dataPriorityParamInfo {
            name            = "dataPriority";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = PRITypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sPriorityDataqueue_sendPollingFunctionInfo {
            name            = "sPriorityDataqueue_";
            bOneway         = false;
            cParamInfo[]    = sPriorityDataqueue_sendPolling_dataParamInfo.eParamInfo;
            cParamInfo[]    = sPriorityDataqueue_sendPolling_dataPriorityParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sPriorityDataqueue_sendPolling_dataParamInfo {
            name            = "data";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = intptr_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sPriorityDataqueue_sendPolling_dataPriorityParamInfo {
            name            = "dataPriority";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = PRITypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sPriorityDataqueue_sendTimeoutFunctionInfo {
            name            = "sPriorityDataqueue_";
            bOneway         = false;
            cParamInfo[]    = sPriorityDataqueue_sendTimeout_dataParamInfo.eParamInfo;
            cParamInfo[]    = sPriorityDataqueue_sendTimeout_dataPriorityParamInfo.eParamInfo;
            cParamInfo[]    = sPriorityDataqueue_sendTimeout_timeoutParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sPriorityDataqueue_sendTimeout_dataParamInfo {
            name            = "data";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = intptr_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sPriorityDataqueue_sendTimeout_dataPriorityParamInfo {
            name            = "dataPriority";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = PRITypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sPriorityDataqueue_sendTimeout_timeoutParamInfo {
            name            = "timeout";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = TMOTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sPriorityDataqueue_receiveFunctionInfo {
            name            = "sPriorityDataqueue_";
            bOneway         = false;
            cParamInfo[]    = sPriorityDataqueue_receive_p_dataParamInfo.eParamInfo;
            cParamInfo[]    = sPriorityDataqueue_receive_p_dataPriorityParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sPriorityDataqueue_receive_p_dataParamInfo {
            name            = "p_data";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = intptr_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sPriorityDataqueue_receive_p_dataPriorityParamInfo {
            name            = "p_dataPriority";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = PRI_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sPriorityDataqueue_receivePollingFunctionInfo {
            name            = "sPriorityDataqueue_";
            bOneway         = false;
            cParamInfo[]    = sPriorityDataqueue_receivePolling_p_dataParamInfo.eParamInfo;
            cParamInfo[]    = sPriorityDataqueue_receivePolling_p_dataPriorityParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sPriorityDataqueue_receivePolling_p_dataParamInfo {
            name            = "p_data";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = intptr_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sPriorityDataqueue_receivePolling_p_dataPriorityParamInfo {
            name            = "p_dataPriority";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = PRI_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sPriorityDataqueue_receiveTimeoutFunctionInfo {
            name            = "sPriorityDataqueue_";
            bOneway         = false;
            cParamInfo[]    = sPriorityDataqueue_receiveTimeout_p_dataParamInfo.eParamInfo;
            cParamInfo[]    = sPriorityDataqueue_receiveTimeout_p_dataPriorityParamInfo.eParamInfo;
            cParamInfo[]    = sPriorityDataqueue_receiveTimeout_timeoutParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sPriorityDataqueue_receiveTimeout_p_dataParamInfo {
            name            = "p_data";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = intptr_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sPriorityDataqueue_receiveTimeout_p_dataPriorityParamInfo {
            name            = "p_dataPriority";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = PRI_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sPriorityDataqueue_receiveTimeout_timeoutParamInfo {
            name            = "timeout";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = TMOTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sPriorityDataqueue_initializeFunctionInfo {
            name            = "sPriorityDataqueue_";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sPriorityDataqueue_referFunctionInfo {
            name            = "sPriorityDataqueue_";
            bOneway         = false;
            cParamInfo[]    = sPriorityDataqueue_refer_pk_priorityDataqueueStatusParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sPriorityDataqueue_refer_pk_priorityDataqueueStatusParamInfo {
            name            = "pk_priorityDataqueueStatus";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = T_RPDQ_Ptr_TypeInfo.eTypeInfo;
        };

        /*** siPriorityDataqueue signature information ****/
        cell nTECSInfo::tSignatureInfo siPriorityDataqueueSignatureInfo {
            name            = "siPriorityDataqueue";
            cFunctionInfo[] = siPriorityDataqueue_sendPollingFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo siPriorityDataqueue_sendPollingFunctionInfo {
            name            = "siPriorityDataqueue_";
            bOneway         = false;
            cParamInfo[]    = siPriorityDataqueue_sendPolling_dataParamInfo.eParamInfo;
            cParamInfo[]    = siPriorityDataqueue_sendPolling_dataPriorityParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo siPriorityDataqueue_sendPolling_dataParamInfo {
            name            = "data";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = intptr_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo siPriorityDataqueue_sendPolling_dataPriorityParamInfo {
            name            = "dataPriority";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = PRITypeInfo.eTypeInfo;
        };

        /*** sFixedSizeMemoryPool signature information ****/
        cell nTECSInfo::tSignatureInfo sFixedSizeMemoryPoolSignatureInfo {
            name            = "sFixedSizeMemoryPool";
            cFunctionInfo[] = sFixedSizeMemoryPool_getFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sFixedSizeMemoryPool_getPollingFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sFixedSizeMemoryPool_getTimeoutFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sFixedSizeMemoryPool_releaseFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sFixedSizeMemoryPool_initializeFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sFixedSizeMemoryPool_referFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo sFixedSizeMemoryPool_getFunctionInfo {
            name            = "sFixedSizeMemoryPool_";
            bOneway         = false;
            cParamInfo[]    = sFixedSizeMemoryPool_get_p_blockParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sFixedSizeMemoryPool_get_p_blockParamInfo {
            name            = "p_block";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = void_Ptr__Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sFixedSizeMemoryPool_getPollingFunctionInfo {
            name            = "sFixedSizeMemoryPool_";
            bOneway         = false;
            cParamInfo[]    = sFixedSizeMemoryPool_getPolling_p_blockParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sFixedSizeMemoryPool_getPolling_p_blockParamInfo {
            name            = "p_block";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = void_Ptr__Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sFixedSizeMemoryPool_getTimeoutFunctionInfo {
            name            = "sFixedSizeMemoryPool_";
            bOneway         = false;
            cParamInfo[]    = sFixedSizeMemoryPool_getTimeout_p_blockParamInfo.eParamInfo;
            cParamInfo[]    = sFixedSizeMemoryPool_getTimeout_timeoutParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sFixedSizeMemoryPool_getTimeout_p_blockParamInfo {
            name            = "p_block";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = void_Ptr__Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sFixedSizeMemoryPool_getTimeout_timeoutParamInfo {
            name            = "timeout";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = TMOTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sFixedSizeMemoryPool_releaseFunctionInfo {
            name            = "sFixedSizeMemoryPool_";
            bOneway         = false;
            cParamInfo[]    = sFixedSizeMemoryPool_release_blockParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sFixedSizeMemoryPool_release_blockParamInfo {
            name            = "block";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = const__void_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sFixedSizeMemoryPool_initializeFunctionInfo {
            name            = "sFixedSizeMemoryPool_";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sFixedSizeMemoryPool_referFunctionInfo {
            name            = "sFixedSizeMemoryPool_";
            bOneway         = false;
            cParamInfo[]    = sFixedSizeMemoryPool_refer_pk_memoryPoolFixedSizeStatusParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sFixedSizeMemoryPool_refer_pk_memoryPoolFixedSizeStatusParamInfo {
            name            = "pk_memoryPoolFixedSizeStatus";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = T_RMPF_Ptr_TypeInfo.eTypeInfo;
        };

        /*** sKernel signature information ****/
        cell nTECSInfo::tSignatureInfo sKernelSignatureInfo {
            name            = "sKernel";
            cFunctionInfo[] = sKernel_sleepFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sKernel_sleepTimeoutFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sKernel_delayFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sKernel_exitTaskFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sKernel_getTaskIdFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sKernel_rotateReadyQueueFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sKernel_getTimeFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sKernel_getMicroTimeFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sKernel_lockCpuFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sKernel_unlockCpuFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sKernel_disableDispatchFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sKernel_enableDispatchFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sKernel_disableTaskExceptionFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sKernel_enableTaskExceptionFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sKernel_changeInterruptPriorityMaskFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sKernel_getInterruptPriorityMaskFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sKernel_exitKernelFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sKernel_senseContextFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sKernel_senseLockFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sKernel_senseDispatchFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sKernel_senseDispatchPendingStateFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sKernel_senseKernelFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo sKernel_sleepFunctionInfo {
            name            = "sKernel_";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sKernel_sleepTimeoutFunctionInfo {
            name            = "sKernel_";
            bOneway         = false;
            cParamInfo[]    = sKernel_sleepTimeout_timeoutParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sKernel_sleepTimeout_timeoutParamInfo {
            name            = "timeout";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = TMOTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sKernel_delayFunctionInfo {
            name            = "sKernel_";
            bOneway         = false;
            cParamInfo[]    = sKernel_delay_delayTimeParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sKernel_delay_delayTimeParamInfo {
            name            = "delayTime";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = RELTIMTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sKernel_exitTaskFunctionInfo {
            name            = "sKernel_";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sKernel_getTaskIdFunctionInfo {
            name            = "sKernel_";
            bOneway         = false;
            cParamInfo[]    = sKernel_getTaskId_p_taskIdParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sKernel_getTaskId_p_taskIdParamInfo {
            name            = "p_taskId";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = ID_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sKernel_rotateReadyQueueFunctionInfo {
            name            = "sKernel_";
            bOneway         = false;
            cParamInfo[]    = sKernel_rotateReadyQueue_taskPriorityParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sKernel_rotateReadyQueue_taskPriorityParamInfo {
            name            = "taskPriority";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = PRITypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sKernel_getTimeFunctionInfo {
            name            = "sKernel_";
            bOneway         = false;
            cParamInfo[]    = sKernel_getTime_p_systemTimeParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sKernel_getTime_p_systemTimeParamInfo {
            name            = "p_systemTime";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = SYSTIM_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sKernel_getMicroTimeFunctionInfo {
            name            = "sKernel_";
            bOneway         = false;
            cParamInfo[]    = sKernel_getMicroTime_p_systemMicroTimeParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sKernel_getMicroTime_p_systemMicroTimeParamInfo {
            name            = "p_systemMicroTime";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = SYSUTM_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sKernel_lockCpuFunctionInfo {
            name            = "sKernel_";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sKernel_unlockCpuFunctionInfo {
            name            = "sKernel_";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sKernel_disableDispatchFunctionInfo {
            name            = "sKernel_";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sKernel_enableDispatchFunctionInfo {
            name            = "sKernel_";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sKernel_disableTaskExceptionFunctionInfo {
            name            = "sKernel_";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sKernel_enableTaskExceptionFunctionInfo {
            name            = "sKernel_";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sKernel_changeInterruptPriorityMaskFunctionInfo {
            name            = "sKernel_";
            bOneway         = false;
            cParamInfo[]    = sKernel_changeInterruptPriorityMask_interruptPriorityParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sKernel_changeInterruptPriorityMask_interruptPriorityParamInfo {
            name            = "interruptPriority";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = PRITypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sKernel_getInterruptPriorityMaskFunctionInfo {
            name            = "sKernel_";
            bOneway         = false;
            cParamInfo[]    = sKernel_getInterruptPriorityMask_p_interruptPriorityParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sKernel_getInterruptPriorityMask_p_interruptPriorityParamInfo {
            name            = "p_interruptPriority";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = PRI_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sKernel_exitKernelFunctionInfo {
            name            = "sKernel_";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sKernel_senseContextFunctionInfo {
            name            = "sKernel_";
            bOneway         = false;
            cReturnTypeInfo = bool_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sKernel_senseLockFunctionInfo {
            name            = "sKernel_";
            bOneway         = false;
            cReturnTypeInfo = bool_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sKernel_senseDispatchFunctionInfo {
            name            = "sKernel_";
            bOneway         = false;
            cReturnTypeInfo = bool_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sKernel_senseDispatchPendingStateFunctionInfo {
            name            = "sKernel_";
            bOneway         = false;
            cReturnTypeInfo = bool_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sKernel_senseKernelFunctionInfo {
            name            = "sKernel_";
            bOneway         = false;
            cReturnTypeInfo = bool_tTypeInfo.eTypeInfo;
        };

        /*** siKernel signature information ****/
        cell nTECSInfo::tSignatureInfo siKernelSignatureInfo {
            name            = "siKernel";
            cFunctionInfo[] = siKernel_getTaskIdFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = siKernel_rotateReadyQueueFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = siKernel_getMicroTimeFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = siKernel_lockCpuFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = siKernel_unlockCpuFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = siKernel_exitKernelFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = siKernel_senseContextFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = siKernel_senseLockFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = siKernel_senseDispatchFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = siKernel_senseDispatchPendingStateFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = siKernel_senseKernelFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = siKernel_senseDispatchPendingStateCPUFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = siKernel_senseTaskExceptionPendingStateCPUFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo siKernel_getTaskIdFunctionInfo {
            name            = "siKernel_";
            bOneway         = false;
            cParamInfo[]    = siKernel_getTaskId_p_taskIdParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo siKernel_getTaskId_p_taskIdParamInfo {
            name            = "p_taskId";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = ID_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo siKernel_rotateReadyQueueFunctionInfo {
            name            = "siKernel_";
            bOneway         = false;
            cParamInfo[]    = siKernel_rotateReadyQueue_taskPriorityParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo siKernel_rotateReadyQueue_taskPriorityParamInfo {
            name            = "taskPriority";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = PRITypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo siKernel_getMicroTimeFunctionInfo {
            name            = "siKernel_";
            bOneway         = false;
            cParamInfo[]    = siKernel_getMicroTime_p_systemMicroTimeParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo siKernel_getMicroTime_p_systemMicroTimeParamInfo {
            name            = "p_systemMicroTime";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = SYSUTM_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo siKernel_lockCpuFunctionInfo {
            name            = "siKernel_";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo siKernel_unlockCpuFunctionInfo {
            name            = "siKernel_";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo siKernel_exitKernelFunctionInfo {
            name            = "siKernel_";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo siKernel_senseContextFunctionInfo {
            name            = "siKernel_";
            bOneway         = false;
            cReturnTypeInfo = bool_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo siKernel_senseLockFunctionInfo {
            name            = "siKernel_";
            bOneway         = false;
            cReturnTypeInfo = bool_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo siKernel_senseDispatchFunctionInfo {
            name            = "siKernel_";
            bOneway         = false;
            cReturnTypeInfo = bool_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo siKernel_senseDispatchPendingStateFunctionInfo {
            name            = "siKernel_";
            bOneway         = false;
            cReturnTypeInfo = bool_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo siKernel_senseKernelFunctionInfo {
            name            = "siKernel_";
            bOneway         = false;
            cReturnTypeInfo = bool_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo siKernel_senseDispatchPendingStateCPUFunctionInfo {
            name            = "siKernel_";
            bOneway         = false;
            cParamInfo[]    = siKernel_senseDispatchPendingStateCPU_p_exceptionInfomationParamInfo.eParamInfo;
            cReturnTypeInfo = bool_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo siKernel_senseDispatchPendingStateCPU_p_exceptionInfomationParamInfo {
            name            = "p_exceptionInfomation";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = const__void_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo siKernel_senseTaskExceptionPendingStateCPUFunctionInfo {
            name            = "siKernel_";
            bOneway         = false;
            cParamInfo[]    = siKernel_senseTaskExceptionPendingStateCPU_p_exceptionInfomationParamInfo.eParamInfo;
            cReturnTypeInfo = bool_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo siKernel_senseTaskExceptionPendingStateCPU_p_exceptionInfomationParamInfo {
            name            = "p_exceptionInfomation";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = const__void_Ptr_TypeInfo.eTypeInfo;
        };

        /*** sMessageBuffer signature information ****/
        cell nTECSInfo::tSignatureInfo sMessageBufferSignatureInfo {
            name            = "sMessageBuffer";
            cFunctionInfo[] = sMessageBuffer_sendFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sMessageBuffer_sendPollingFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sMessageBuffer_sendTimeoutFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sMessageBuffer_receiveFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sMessageBuffer_receivePollingFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sMessageBuffer_receiveTimeoutFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sMessageBuffer_initializeFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sMessageBuffer_referFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo sMessageBuffer_sendFunctionInfo {
            name            = "sMessageBuffer_";
            bOneway         = false;
            cParamInfo[]    = sMessageBuffer_send_messageParamInfo.eParamInfo;
            cParamInfo[]    = sMessageBuffer_send_sizeParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sMessageBuffer_send_messageParamInfo {
            name            = "message";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = " $1";
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = const__uint8_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sMessageBuffer_send_sizeParamInfo {
            name            = "size";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = uint32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sMessageBuffer_sendPollingFunctionInfo {
            name            = "sMessageBuffer_";
            bOneway         = false;
            cParamInfo[]    = sMessageBuffer_sendPolling_messageParamInfo.eParamInfo;
            cParamInfo[]    = sMessageBuffer_sendPolling_sizeParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sMessageBuffer_sendPolling_messageParamInfo {
            name            = "message";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = " $1";
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = const__uint8_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sMessageBuffer_sendPolling_sizeParamInfo {
            name            = "size";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = uint32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sMessageBuffer_sendTimeoutFunctionInfo {
            name            = "sMessageBuffer_";
            bOneway         = false;
            cParamInfo[]    = sMessageBuffer_sendTimeout_messageParamInfo.eParamInfo;
            cParamInfo[]    = sMessageBuffer_sendTimeout_sizeParamInfo.eParamInfo;
            cParamInfo[]    = sMessageBuffer_sendTimeout_timeoutParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sMessageBuffer_sendTimeout_messageParamInfo {
            name            = "message";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = " $1";
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = const__uint8_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sMessageBuffer_sendTimeout_sizeParamInfo {
            name            = "size";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = uint32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sMessageBuffer_sendTimeout_timeoutParamInfo {
            name            = "timeout";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = TMOTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sMessageBuffer_receiveFunctionInfo {
            name            = "sMessageBuffer_";
            bOneway         = false;
            cParamInfo[]    = sMessageBuffer_receive_messageParamInfo.eParamInfo;
            cReturnTypeInfo = ER_UINTTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sMessageBuffer_receive_messageParamInfo {
            name            = "message";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = uint8_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sMessageBuffer_receivePollingFunctionInfo {
            name            = "sMessageBuffer_";
            bOneway         = false;
            cParamInfo[]    = sMessageBuffer_receivePolling_messageParamInfo.eParamInfo;
            cReturnTypeInfo = ER_UINTTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sMessageBuffer_receivePolling_messageParamInfo {
            name            = "message";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = uint8_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sMessageBuffer_receiveTimeoutFunctionInfo {
            name            = "sMessageBuffer_";
            bOneway         = false;
            cParamInfo[]    = sMessageBuffer_receiveTimeout_messageParamInfo.eParamInfo;
            cParamInfo[]    = sMessageBuffer_receiveTimeout_timeoutParamInfo.eParamInfo;
            cReturnTypeInfo = ER_UINTTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sMessageBuffer_receiveTimeout_messageParamInfo {
            name            = "message";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = uint8_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sMessageBuffer_receiveTimeout_timeoutParamInfo {
            name            = "timeout";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = TMOTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sMessageBuffer_initializeFunctionInfo {
            name            = "sMessageBuffer_";
            bOneway         = false;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sMessageBuffer_referFunctionInfo {
            name            = "sMessageBuffer_";
            bOneway         = false;
            cParamInfo[]    = sMessageBuffer_refer_packetParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sMessageBuffer_refer_packetParamInfo {
            name            = "packet";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = T_RMBF_Ptr_TypeInfo.eTypeInfo;
        };

        /*** sMalloc signature information ****/
        cell nTECSInfo::tSignatureInfo sMallocSignatureInfo {
            name            = "sMalloc";
            cFunctionInfo[] = sMalloc_initializeMemoryPoolFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sMalloc_callocFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sMalloc_mallocFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sMalloc_reallocFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sMalloc_freeFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo sMalloc_initializeMemoryPoolFunctionInfo {
            name            = "sMalloc_";
            bOneway         = false;
            cReturnTypeInfo = intTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sMalloc_callocFunctionInfo {
            name            = "sMalloc_";
            bOneway         = false;
            cParamInfo[]    = sMalloc_calloc_nelemParamInfo.eParamInfo;
            cParamInfo[]    = sMalloc_calloc_elem_sizeParamInfo.eParamInfo;
            cReturnTypeInfo = void_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sMalloc_calloc_nelemParamInfo {
            name            = "nelem";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = size_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sMalloc_calloc_elem_sizeParamInfo {
            name            = "elem_size";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = size_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sMalloc_mallocFunctionInfo {
            name            = "sMalloc_";
            bOneway         = false;
            cParamInfo[]    = sMalloc_malloc_sizeParamInfo.eParamInfo;
            cReturnTypeInfo = void_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sMalloc_malloc_sizeParamInfo {
            name            = "size";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = size_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sMalloc_reallocFunctionInfo {
            name            = "sMalloc_";
            bOneway         = false;
            cParamInfo[]    = sMalloc_realloc_ptrParamInfo.eParamInfo;
            cParamInfo[]    = sMalloc_realloc_new_sizeParamInfo.eParamInfo;
            cReturnTypeInfo = void_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sMalloc_realloc_ptrParamInfo {
            name            = "ptr";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = const__void_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sMalloc_realloc_new_sizeParamInfo {
            name            = "new_size";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = size_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sMalloc_freeFunctionInfo {
            name            = "sMalloc_";
            bOneway         = false;
            cParamInfo[]    = sMalloc_free_ptrParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sMalloc_free_ptrParamInfo {
            name            = "ptr";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = const__void_Ptr_TypeInfo.eTypeInfo;
        };

        /*** sUltrasonicSensor signature information ****/
        cell nTECSInfo::tSignatureInfo sUltrasonicSensorSignatureInfo {
            name            = "sUltrasonicSensor";
            cFunctionInfo[] = sUltrasonicSensor_getDistanceFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sUltrasonicSensor_listenFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sUltrasonicSensor_initializePortFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo sUltrasonicSensor_getDistanceFunctionInfo {
            name            = "sUltrasonicSensor_";
            bOneway         = false;
            cReturnTypeInfo = int16_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sUltrasonicSensor_listenFunctionInfo {
            name            = "sUltrasonicSensor_";
            bOneway         = false;
            cReturnTypeInfo = bool_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sUltrasonicSensor_initializePortFunctionInfo {
            name            = "sUltrasonicSensor_";
            bOneway         = false;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };

        /*** sColorSensor signature information ****/
        cell nTECSInfo::tSignatureInfo sColorSensorSignatureInfo {
            name            = "sColorSensor";
            cFunctionInfo[] = sColorSensor_getColorFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sColorSensor_getReflectFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sColorSensor_getAmbientFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sColorSensor_initializePortFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sColorSensor_getRGBRawFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo sColorSensor_getColorFunctionInfo {
            name            = "sColorSensor_";
            bOneway         = false;
            cReturnTypeInfo = colorid_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sColorSensor_getReflectFunctionInfo {
            name            = "sColorSensor_";
            bOneway         = false;
            cReturnTypeInfo = uint8_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sColorSensor_getAmbientFunctionInfo {
            name            = "sColorSensor_";
            bOneway         = false;
            cReturnTypeInfo = uint8_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sColorSensor_initializePortFunctionInfo {
            name            = "sColorSensor_";
            bOneway         = false;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sColorSensor_getRGBRawFunctionInfo {
            name            = "sColorSensor_";
            bOneway         = false;
            cParamInfo[]    = sColorSensor_getRGBRaw_rParamInfo.eParamInfo;
            cParamInfo[]    = sColorSensor_getRGBRaw_gParamInfo.eParamInfo;
            cParamInfo[]    = sColorSensor_getRGBRaw_bParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sColorSensor_getRGBRaw_rParamInfo {
            name            = "r";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = uint16_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sColorSensor_getRGBRaw_gParamInfo {
            name            = "g";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = uint16_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sColorSensor_getRGBRaw_bParamInfo {
            name            = "b";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = uint16_t_Ptr_TypeInfo.eTypeInfo;
        };

        /*** sTouchSensor signature information ****/
        cell nTECSInfo::tSignatureInfo sTouchSensorSignatureInfo {
            name            = "sTouchSensor";
            cFunctionInfo[] = sTouchSensor_isPressedFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sTouchSensor_initializePortFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo sTouchSensor_isPressedFunctionInfo {
            name            = "sTouchSensor_";
            bOneway         = false;
            cReturnTypeInfo = bool_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sTouchSensor_initializePortFunctionInfo {
            name            = "sTouchSensor_";
            bOneway         = false;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };

        /*** sGyroSensor signature information ****/
        cell nTECSInfo::tSignatureInfo sGyroSensorSignatureInfo {
            name            = "sGyroSensor";
            cFunctionInfo[] = sGyroSensor_getAngleFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sGyroSensor_getRateFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sGyroSensor_resetFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sGyroSensor_calibrateFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sGyroSensor_initializePortFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo sGyroSensor_getAngleFunctionInfo {
            name            = "sGyroSensor_";
            bOneway         = false;
            cReturnTypeInfo = int16_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sGyroSensor_getRateFunctionInfo {
            name            = "sGyroSensor_";
            bOneway         = false;
            cReturnTypeInfo = int16_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sGyroSensor_resetFunctionInfo {
            name            = "sGyroSensor_";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sGyroSensor_calibrateFunctionInfo {
            name            = "sGyroSensor_";
            bOneway         = false;
            cParamInfo[]    = sGyroSensor_calibrate_timesParamInfo.eParamInfo;
            cReturnTypeInfo = float32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sGyroSensor_calibrate_timesParamInfo {
            name            = "times";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sGyroSensor_initializePortFunctionInfo {
            name            = "sGyroSensor_";
            bOneway         = false;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };

        /*** sMotor signature information ****/
        cell nTECSInfo::tSignatureInfo sMotorSignatureInfo {
            name            = "sMotor";
            cFunctionInfo[] = sMotor_getTypeFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sMotor_getCountsFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sMotor_getPowerFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sMotor_resetCountsFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sMotor_setPowerFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sMotor_stopFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sMotor_rotateFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sMotor_initializePortFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo sMotor_getTypeFunctionInfo {
            name            = "sMotor_";
            bOneway         = false;
            cReturnTypeInfo = ER_UINTTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sMotor_getCountsFunctionInfo {
            name            = "sMotor_";
            bOneway         = false;
            cReturnTypeInfo = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sMotor_getPowerFunctionInfo {
            name            = "sMotor_";
            bOneway         = false;
            cReturnTypeInfo = intTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sMotor_resetCountsFunctionInfo {
            name            = "sMotor_";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sMotor_setPowerFunctionInfo {
            name            = "sMotor_";
            bOneway         = false;
            cParamInfo[]    = sMotor_setPower_powerParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sMotor_setPower_powerParamInfo {
            name            = "power";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = intTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sMotor_stopFunctionInfo {
            name            = "sMotor_";
            bOneway         = false;
            cParamInfo[]    = sMotor_stop_brakeParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sMotor_stop_brakeParamInfo {
            name            = "brake";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = bool_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sMotor_rotateFunctionInfo {
            name            = "sMotor_";
            bOneway         = false;
            cParamInfo[]    = sMotor_rotate_degreesParamInfo.eParamInfo;
            cParamInfo[]    = sMotor_rotate_speed_absParamInfo.eParamInfo;
            cParamInfo[]    = sMotor_rotate_blockingParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sMotor_rotate_degreesParamInfo {
            name            = "degrees";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = intTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sMotor_rotate_speed_absParamInfo {
            name            = "speed_abs";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = uint32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sMotor_rotate_blockingParamInfo {
            name            = "blocking";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = bool_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sMotor_initializePortFunctionInfo {
            name            = "sMotor_";
            bOneway         = false;
            cParamInfo[]    = sMotor_initializePort_typeParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sMotor_initializePort_typeParamInfo {
            name            = "type";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int32_tTypeInfo.eTypeInfo;
        };

        /*** sButton signature information ****/
        cell nTECSInfo::tSignatureInfo sButtonSignatureInfo {
            name            = "sButton";
            cFunctionInfo[] = sButton_isPressedFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo sButton_isPressedFunctionInfo {
            name            = "sButton_";
            bOneway         = false;
            cParamInfo[]    = sButton_isPressed_buttonParamInfo.eParamInfo;
            cReturnTypeInfo = bool_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sButton_isPressed_buttonParamInfo {
            name            = "button";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = button_tTypeInfo.eTypeInfo;
        };

        /*** sLCD signature information ****/
        cell nTECSInfo::tSignatureInfo sLCDSignatureInfo {
            name            = "sLCD";
            cFunctionInfo[] = sLCD_setFontFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sLCD_getFontSizeFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sLCD_drawStringFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sLCD_fillRectFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sLCD_drawLineFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sLCD_printFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sLCD_putsFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sLCD_clearFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sLCD_showMessageBoxFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo sLCD_setFontFunctionInfo {
            name            = "sLCD_";
            bOneway         = false;
            cParamInfo[]    = sLCD_setFont_fontParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sLCD_setFont_fontParamInfo {
            name            = "font";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = lcdfont_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sLCD_getFontSizeFunctionInfo {
            name            = "sLCD_";
            bOneway         = false;
            cParamInfo[]    = sLCD_getFontSize_fontParamInfo.eParamInfo;
            cParamInfo[]    = sLCD_getFontSize_p_widthParamInfo.eParamInfo;
            cParamInfo[]    = sLCD_getFontSize_p_heightParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sLCD_getFontSize_fontParamInfo {
            name            = "font";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = lcdfont_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sLCD_getFontSize_p_widthParamInfo {
            name            = "p_width";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int32_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sLCD_getFontSize_p_heightParamInfo {
            name            = "p_height";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int32_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sLCD_drawStringFunctionInfo {
            name            = "sLCD_";
            bOneway         = false;
            cParamInfo[]    = sLCD_drawString_strParamInfo.eParamInfo;
            cParamInfo[]    = sLCD_drawString_xParamInfo.eParamInfo;
            cParamInfo[]    = sLCD_drawString_yParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sLCD_drawString_strParamInfo {
            name            = "str";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = const__char_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sLCD_drawString_xParamInfo {
            name            = "x";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sLCD_drawString_yParamInfo {
            name            = "y";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sLCD_fillRectFunctionInfo {
            name            = "sLCD_";
            bOneway         = false;
            cParamInfo[]    = sLCD_fillRect_xParamInfo.eParamInfo;
            cParamInfo[]    = sLCD_fillRect_yParamInfo.eParamInfo;
            cParamInfo[]    = sLCD_fillRect_wParamInfo.eParamInfo;
            cParamInfo[]    = sLCD_fillRect_hParamInfo.eParamInfo;
            cParamInfo[]    = sLCD_fillRect_colorParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sLCD_fillRect_xParamInfo {
            name            = "x";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sLCD_fillRect_yParamInfo {
            name            = "y";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sLCD_fillRect_wParamInfo {
            name            = "w";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sLCD_fillRect_hParamInfo {
            name            = "h";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sLCD_fillRect_colorParamInfo {
            name            = "color";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = lcdcolor_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sLCD_drawLineFunctionInfo {
            name            = "sLCD_";
            bOneway         = false;
            cParamInfo[]    = sLCD_drawLine_x0ParamInfo.eParamInfo;
            cParamInfo[]    = sLCD_drawLine_y0ParamInfo.eParamInfo;
            cParamInfo[]    = sLCD_drawLine_x1ParamInfo.eParamInfo;
            cParamInfo[]    = sLCD_drawLine_y1ParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sLCD_drawLine_x0ParamInfo {
            name            = "x0";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sLCD_drawLine_y0ParamInfo {
            name            = "y0";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sLCD_drawLine_x1ParamInfo {
            name            = "x1";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sLCD_drawLine_y1ParamInfo {
            name            = "y1";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sLCD_printFunctionInfo {
            name            = "sLCD_";
            bOneway         = false;
            cParamInfo[]    = sLCD_print_strParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sLCD_print_strParamInfo {
            name            = "str";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = const__char_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sLCD_putsFunctionInfo {
            name            = "sLCD_";
            bOneway         = false;
            cParamInfo[]    = sLCD_puts_strParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sLCD_puts_strParamInfo {
            name            = "str";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = const__char_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sLCD_clearFunctionInfo {
            name            = "sLCD_";
            bOneway         = false;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sLCD_showMessageBoxFunctionInfo {
            name            = "sLCD_";
            bOneway         = false;
            cParamInfo[]    = sLCD_showMessageBox_titleParamInfo.eParamInfo;
            cParamInfo[]    = sLCD_showMessageBox_msgParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sLCD_showMessageBox_titleParamInfo {
            name            = "title";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = const__char_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sLCD_showMessageBox_msgParamInfo {
            name            = "msg";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = const__char_Ptr_TypeInfo.eTypeInfo;
        };

        /*** sLED signature information ****/
        cell nTECSInfo::tSignatureInfo sLEDSignatureInfo {
            name            = "sLED";
            cFunctionInfo[] = sLED_setColorFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sLED_offFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo sLED_setColorFunctionInfo {
            name            = "sLED_";
            bOneway         = false;
            cParamInfo[]    = sLED_setColor_colorParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sLED_setColor_colorParamInfo {
            name            = "color";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = ledcolor_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sLED_offFunctionInfo {
            name            = "sLED_";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };

        /*** sBattery signature information ****/
        cell nTECSInfo::tSignatureInfo sBatterySignatureInfo {
            name            = "sBattery";
            cFunctionInfo[] = sBattery_current_mAFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sBattery_voltage_mVFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo sBattery_current_mAFunctionInfo {
            name            = "sBattery_";
            bOneway         = false;
            cReturnTypeInfo = intTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sBattery_voltage_mVFunctionInfo {
            name            = "sBattery_";
            bOneway         = false;
            cReturnTypeInfo = intTypeInfo.eTypeInfo;
        };

        /*** sSpeaker signature information ****/
        cell nTECSInfo::tSignatureInfo sSpeakerSignatureInfo {
            name            = "sSpeaker";
            cFunctionInfo[] = sSpeaker_setVolumeFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sSpeaker_playToneFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sSpeaker_stopFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo sSpeaker_setVolumeFunctionInfo {
            name            = "sSpeaker_";
            bOneway         = false;
            cParamInfo[]    = sSpeaker_setVolume_volumeParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sSpeaker_setVolume_volumeParamInfo {
            name            = "volume";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = uint8_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sSpeaker_playToneFunctionInfo {
            name            = "sSpeaker_";
            bOneway         = false;
            cParamInfo[]    = sSpeaker_playTone_frequencyParamInfo.eParamInfo;
            cParamInfo[]    = sSpeaker_playTone_durationParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sSpeaker_playTone_frequencyParamInfo {
            name            = "frequency";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = uint16_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sSpeaker_playTone_durationParamInfo {
            name            = "duration";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sSpeaker_stopFunctionInfo {
            name            = "sSpeaker_";
            bOneway         = false;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };

        /*** sRiteVM signature information ****/
        cell nTECSInfo::tSignatureInfo sRiteVMSignatureInfo {
            name            = "sRiteVM";
            cFunctionInfo[] = sRiteVM_resetFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo sRiteVM_resetFunctionInfo {
            name            = "sRiteVM_";
            bOneway         = false;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };

        /*** sBalancer signature information ****/
        cell nTECSInfo::tSignatureInfo sBalancerSignatureInfo {
            name            = "sBalancer";
            cFunctionInfo[] = sBalancer_controlFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sBalancer_initFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo sBalancer_controlFunctionInfo {
            name            = "sBalancer_";
            bOneway         = false;
            cParamInfo[]    = sBalancer_control_forwardParamInfo.eParamInfo;
            cParamInfo[]    = sBalancer_control_turnParamInfo.eParamInfo;
            cParamInfo[]    = sBalancer_control_gyroParamInfo.eParamInfo;
            cParamInfo[]    = sBalancer_control_gyroOffsetParamInfo.eParamInfo;
            cParamInfo[]    = sBalancer_control_leftRevolutionParamInfo.eParamInfo;
            cParamInfo[]    = sBalancer_control_rightRevolutionParamInfo.eParamInfo;
            cParamInfo[]    = sBalancer_control_batteryParamInfo.eParamInfo;
            cParamInfo[]    = sBalancer_control_pwm_lParamInfo.eParamInfo;
            cParamInfo[]    = sBalancer_control_pwm_rParamInfo.eParamInfo;
            cParamInfo[]    = sBalancer_control_backlashhalfParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sBalancer_control_forwardParamInfo {
            name            = "forward";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int16_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sBalancer_control_turnParamInfo {
            name            = "turn";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int16_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sBalancer_control_gyroParamInfo {
            name            = "gyro";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int16_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sBalancer_control_gyroOffsetParamInfo {
            name            = "gyroOffset";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int16_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sBalancer_control_leftRevolutionParamInfo {
            name            = "leftRevolution";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sBalancer_control_rightRevolutionParamInfo {
            name            = "rightRevolution";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sBalancer_control_batteryParamInfo {
            name            = "battery";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int16_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sBalancer_control_pwm_lParamInfo {
            name            = "pwm_l";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int8_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sBalancer_control_pwm_rParamInfo {
            name            = "pwm_r";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int8_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sBalancer_control_backlashhalfParamInfo {
            name            = "backlashhalf";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sBalancer_initFunctionInfo {
            name            = "sBalancer_";
            bOneway         = false;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };

        /*** sSharedMemory signature information ****/
        cell nTECSInfo::tSignatureInfo sSharedMemorySignatureInfo {
            name            = "sSharedMemory";
            cFunctionInfo[] = sSharedMemory_putValFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sSharedMemory_getValFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = sSharedMemory_getSizeFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo sSharedMemory_putValFunctionInfo {
            name            = "sSharedMemory_";
            bOneway         = false;
            cParamInfo[]    = sSharedMemory_putVal_indexParamInfo.eParamInfo;
            cParamInfo[]    = sSharedMemory_putVal_valParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sSharedMemory_putVal_indexParamInfo {
            name            = "index";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sSharedMemory_putVal_valParamInfo {
            name            = "val";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sSharedMemory_getValFunctionInfo {
            name            = "sSharedMemory_";
            bOneway         = false;
            cParamInfo[]    = sSharedMemory_getVal_indexParamInfo.eParamInfo;
            cReturnTypeInfo = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo sSharedMemory_getVal_indexParamInfo {
            name            = "index";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo sSharedMemory_getSizeFunctionInfo {
            name            = "sSharedMemory_";
            bOneway         = false;
            cReturnTypeInfo = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tCelltypeInfo tTaskCelltypeInfo {
            name            = "tTask";
            b_singleton     = false;
            b_IDX_is_ID_act = C_EXP( "tTask__IDX_is_ID_act" );
            b_hasCB         = C_EXP( "tTask__hasCB" );
            b_hasINIB       = C_EXP( "tTask__hasINIB" );
            n_cellInLinUnit = C_EXP( "tTask__NCELLINLINKUNIT" );
            n_cellInSystem  = 2;
            cEntryInfo[]    = tTask_eTaskEntryInfo.eEntryInfo;
            cEntryInfo[]    = tTask_eiTaskEntryInfo.eEntryInfo;
            cCallInfo[]     = tTask_cBodyCallInfo.eCallInfo;
            cCallInfo[]     = tTask_cExceptionBodyCallInfo.eCallInfo;
            cAttrInfo[]     = tTask_idVarDeclInfo.eVarDeclInfo;
            cAttrInfo[]     = tTask_taskAttributeVarDeclInfo.eVarDeclInfo;
            cAttrInfo[]     = tTask_exceptionAttributeVarDeclInfo.eVarDeclInfo;
            cAttrInfo[]     = tTask_priorityVarDeclInfo.eVarDeclInfo;
            cAttrInfo[]     = tTask_stackSizeVarDeclInfo.eVarDeclInfo;
            cAttrInfo[]     = tTask_systemStackSizeVarDeclInfo.eVarDeclInfo;
            cAttrInfo[]     = tTask_userStackSizeVarDeclInfo.eVarDeclInfo;
            cAttrInfo[]     = tTask_accessPatternVarDeclInfo.eVarDeclInfo;
        };
        cell nTECSInfo::tEntryInfo tTask_eTaskEntryInfo{
            name            = "eTask";
            cSignatureInfo  = sTaskSignatureInfo.eSignatureInfo;
            b_inline        = true;
        };
        cell nTECSInfo::tEntryInfo tTask_eiTaskEntryInfo{
            name            = "eiTask";
            cSignatureInfo  = siTaskSignatureInfo.eSignatureInfo;
            b_inline        = true;
        };
        cell nTECSInfo::tCallInfo tTask_cBodyCallInfo{
            name            = "cBody";
            cSignatureInfo  = sTaskBodySignatureInfo.eSignatureInfo;
            offset            = C_EXP( "tTask_cBody__offset" );
            b_optional        = false;
            b_omit            = false;
            b_dynamic         = false;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "tTask_cBody__place" );
            b_VMT_useless     = C_EXP( "tTask_cBody__b_VMT_useless" );
            b_skelton_useless = C_EXP( "tTask_cBody__b_skelton_useless" );
            b_cell_unique     = C_EXP( "tTask_cBody__b_cell_unique" );

        };
        cell nTECSInfo::tCallInfo tTask_cExceptionBodyCallInfo{
            name            = "cExceptionBody";
            cSignatureInfo  = sTaskExceptionBodySignatureInfo.eSignatureInfo;
            offset            = C_EXP( "tTask_cExceptionBody__offset" );
            b_optional        = true;
            b_omit            = false;
            b_dynamic         = false;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "tTask_cExceptionBody__place" );
            b_VMT_useless     = C_EXP( "tTask_cExceptionBody__b_VMT_useless" );
            b_skelton_useless = C_EXP( "tTask_cExceptionBody__b_skelton_useless" );
            b_cell_unique     = C_EXP( "tTask_cExceptionBody__b_cell_unique" );

        };
        cell nTECSInfo::tVarDeclInfo tTask_idVarDeclInfo {
            name            = "id";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_tTask_id" );
            cTypeInfo       = IDTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo tTask_taskAttributeVarDeclInfo {
            name            = "taskAttribute";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_tTask_taskAttribute" );
            cTypeInfo       = ATRTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo tTask_exceptionAttributeVarDeclInfo {
            name            = "exceptionAttribute";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_tTask_exceptionAttribute" );
            cTypeInfo       = ATRTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo tTask_priorityVarDeclInfo {
            name            = "priority";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_tTask_priority" );
            cTypeInfo       = PRITypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo tTask_stackSizeVarDeclInfo {
            name            = "stackSize";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_tTask_stackSize" );
            cTypeInfo       = SIZETypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo tTask_systemStackSizeVarDeclInfo {
            name            = "systemStackSize";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_tTask_systemStackSize" );
            cTypeInfo       = SIZETypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo tTask_userStackSizeVarDeclInfo {
            name            = "userStackSize";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_tTask_userStackSize" );
            cTypeInfo       = SIZETypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo tTask_accessPatternVarDeclInfo {
            name            = "accessPattern";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_tTask_accessPattern" );
            cTypeInfo       = ACPTN_Array4_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tCelltypeInfo tKernelCelltypeInfo {
            name            = "tKernel";
            b_singleton     = true;
            b_IDX_is_ID_act = C_EXP( "tKernel__IDX_is_ID_act" );
            b_hasCB         = C_EXP( "tKernel__hasCB" );
            b_hasINIB       = C_EXP( "tKernel__hasINIB" );
            n_cellInLinUnit = C_EXP( "tKernel__NCELLINLINKUNIT" );
            n_cellInSystem  = 1;
            cEntryInfo[]    = tKernel_eKernelEntryInfo.eEntryInfo;
            cEntryInfo[]    = tKernel_eiKernelEntryInfo.eEntryInfo;
            cAttrInfo[]     = tKernel_accessPatternVarDeclInfo.eVarDeclInfo;
        };
        cell nTECSInfo::tEntryInfo tKernel_eKernelEntryInfo{
            name            = "eKernel";
            cSignatureInfo  = sKernelSignatureInfo.eSignatureInfo;
            b_inline        = true;
        };
        cell nTECSInfo::tEntryInfo tKernel_eiKernelEntryInfo{
            name            = "eiKernel";
            cSignatureInfo  = siKernelSignatureInfo.eSignatureInfo;
            b_inline        = true;
        };
        cell nTECSInfo::tVarDeclInfo tKernel_accessPatternVarDeclInfo {
            name            = "accessPattern";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_tKernel_accessPattern" );
            cTypeInfo       = ACPTN_Array4_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tCelltypeInfo tUltrasonicSensorCelltypeInfo {
            name            = "tUltrasonicSensor";
            b_singleton     = false;
            b_IDX_is_ID_act = C_EXP( "tUltrasonicSensor__IDX_is_ID_act" );
            b_hasCB         = C_EXP( "tUltrasonicSensor__hasCB" );
            b_hasINIB       = C_EXP( "tUltrasonicSensor__hasINIB" );
            n_cellInLinUnit = C_EXP( "tUltrasonicSensor__NCELLINLINKUNIT" );
            n_cellInSystem  = 4;
            cEntryInfo[]    = tUltrasonicSensor_eUltrasonicSensorEntryInfo.eEntryInfo;
            cAttrInfo[]     = tUltrasonicSensor_portVarDeclInfo.eVarDeclInfo;
        };
        cell nTECSInfo::tEntryInfo tUltrasonicSensor_eUltrasonicSensorEntryInfo{
            name            = "eUltrasonicSensor";
            cSignatureInfo  = sUltrasonicSensorSignatureInfo.eSignatureInfo;
            b_inline        = false;
        };
        cell nTECSInfo::tVarDeclInfo tUltrasonicSensor_portVarDeclInfo {
            name            = "port";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_tUltrasonicSensor_port" );
            cTypeInfo       = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tCelltypeInfo tColorSensorCelltypeInfo {
            name            = "tColorSensor";
            b_singleton     = false;
            b_IDX_is_ID_act = C_EXP( "tColorSensor__IDX_is_ID_act" );
            b_hasCB         = C_EXP( "tColorSensor__hasCB" );
            b_hasINIB       = C_EXP( "tColorSensor__hasINIB" );
            n_cellInLinUnit = C_EXP( "tColorSensor__NCELLINLINKUNIT" );
            n_cellInSystem  = 4;
            cEntryInfo[]    = tColorSensor_eColorSensorEntryInfo.eEntryInfo;
            cAttrInfo[]     = tColorSensor_portVarDeclInfo.eVarDeclInfo;
        };
        cell nTECSInfo::tEntryInfo tColorSensor_eColorSensorEntryInfo{
            name            = "eColorSensor";
            cSignatureInfo  = sColorSensorSignatureInfo.eSignatureInfo;
            b_inline        = false;
        };
        cell nTECSInfo::tVarDeclInfo tColorSensor_portVarDeclInfo {
            name            = "port";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_tColorSensor_port" );
            cTypeInfo       = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tCelltypeInfo tTouchSensorCelltypeInfo {
            name            = "tTouchSensor";
            b_singleton     = false;
            b_IDX_is_ID_act = C_EXP( "tTouchSensor__IDX_is_ID_act" );
            b_hasCB         = C_EXP( "tTouchSensor__hasCB" );
            b_hasINIB       = C_EXP( "tTouchSensor__hasINIB" );
            n_cellInLinUnit = C_EXP( "tTouchSensor__NCELLINLINKUNIT" );
            n_cellInSystem  = 4;
            cEntryInfo[]    = tTouchSensor_eTouchSensorEntryInfo.eEntryInfo;
            cAttrInfo[]     = tTouchSensor_portVarDeclInfo.eVarDeclInfo;
        };
        cell nTECSInfo::tEntryInfo tTouchSensor_eTouchSensorEntryInfo{
            name            = "eTouchSensor";
            cSignatureInfo  = sTouchSensorSignatureInfo.eSignatureInfo;
            b_inline        = false;
        };
        cell nTECSInfo::tVarDeclInfo tTouchSensor_portVarDeclInfo {
            name            = "port";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_tTouchSensor_port" );
            cTypeInfo       = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tCelltypeInfo tGyroSensorCelltypeInfo {
            name            = "tGyroSensor";
            b_singleton     = false;
            b_IDX_is_ID_act = C_EXP( "tGyroSensor__IDX_is_ID_act" );
            b_hasCB         = C_EXP( "tGyroSensor__hasCB" );
            b_hasINIB       = C_EXP( "tGyroSensor__hasINIB" );
            n_cellInLinUnit = C_EXP( "tGyroSensor__NCELLINLINKUNIT" );
            n_cellInSystem  = 4;
            cEntryInfo[]    = tGyroSensor_eGyroSensorEntryInfo.eEntryInfo;
            cAttrInfo[]     = tGyroSensor_portVarDeclInfo.eVarDeclInfo;
        };
        cell nTECSInfo::tEntryInfo tGyroSensor_eGyroSensorEntryInfo{
            name            = "eGyroSensor";
            cSignatureInfo  = sGyroSensorSignatureInfo.eSignatureInfo;
            b_inline        = false;
        };
        cell nTECSInfo::tVarDeclInfo tGyroSensor_portVarDeclInfo {
            name            = "port";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_tGyroSensor_port" );
            cTypeInfo       = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tCelltypeInfo tMotorCelltypeInfo {
            name            = "tMotor";
            b_singleton     = false;
            b_IDX_is_ID_act = C_EXP( "tMotor__IDX_is_ID_act" );
            b_hasCB         = C_EXP( "tMotor__hasCB" );
            b_hasINIB       = C_EXP( "tMotor__hasINIB" );
            n_cellInLinUnit = C_EXP( "tMotor__NCELLINLINKUNIT" );
            n_cellInSystem  = 4;
            cEntryInfo[]    = tMotor_eMotorEntryInfo.eEntryInfo;
            cAttrInfo[]     = tMotor_portVarDeclInfo.eVarDeclInfo;
        };
        cell nTECSInfo::tEntryInfo tMotor_eMotorEntryInfo{
            name            = "eMotor";
            cSignatureInfo  = sMotorSignatureInfo.eSignatureInfo;
            b_inline        = false;
        };
        cell nTECSInfo::tVarDeclInfo tMotor_portVarDeclInfo {
            name            = "port";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_tMotor_port" );
            cTypeInfo       = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tCelltypeInfo tButtonCelltypeInfo {
            name            = "tButton";
            b_singleton     = false;
            b_IDX_is_ID_act = C_EXP( "tButton__IDX_is_ID_act" );
            b_hasCB         = C_EXP( "tButton__hasCB" );
            b_hasINIB       = C_EXP( "tButton__hasINIB" );
            n_cellInLinUnit = C_EXP( "tButton__NCELLINLINKUNIT" );
            n_cellInSystem  = 1;
            cEntryInfo[]    = tButton_eButtonEntryInfo.eEntryInfo;
        };
        cell nTECSInfo::tEntryInfo tButton_eButtonEntryInfo{
            name            = "eButton";
            cSignatureInfo  = sButtonSignatureInfo.eSignatureInfo;
            b_inline        = false;
        };
        cell nTECSInfo::tCelltypeInfo tLCDCelltypeInfo {
            name            = "tLCD";
            b_singleton     = false;
            b_IDX_is_ID_act = C_EXP( "tLCD__IDX_is_ID_act" );
            b_hasCB         = C_EXP( "tLCD__hasCB" );
            b_hasINIB       = C_EXP( "tLCD__hasINIB" );
            n_cellInLinUnit = C_EXP( "tLCD__NCELLINLINKUNIT" );
            n_cellInSystem  = 1;
            cEntryInfo[]    = tLCD_eLCDEntryInfo.eEntryInfo;
            cCallInfo[]     = tLCD_cButtonCallInfo.eCallInfo;
            cVarInfo[]      = tLCD_currentFontVarDeclInfo.eVarDeclInfo;
        };
        cell nTECSInfo::tEntryInfo tLCD_eLCDEntryInfo{
            name            = "eLCD";
            cSignatureInfo  = sLCDSignatureInfo.eSignatureInfo;
            b_inline        = false;
        };
        cell nTECSInfo::tCallInfo tLCD_cButtonCallInfo{
            name            = "cButton";
            cSignatureInfo  = sButtonSignatureInfo.eSignatureInfo;
            offset            = C_EXP( "tLCD_cButton__offset" );
            b_optional        = false;
            b_omit            = false;
            b_dynamic         = false;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "tLCD_cButton__place" );
            b_VMT_useless     = C_EXP( "tLCD_cButton__b_VMT_useless" );
            b_skelton_useless = C_EXP( "tLCD_cButton__b_skelton_useless" );
            b_cell_unique     = C_EXP( "tLCD_cButton__b_cell_unique" );

        };
        cell nTECSInfo::tVarDeclInfo tLCD_currentFontVarDeclInfo {
            name            = "currentFont";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_tLCD_currentFont" );
            cTypeInfo       = lcdfont_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tCelltypeInfo tLEDCelltypeInfo {
            name            = "tLED";
            b_singleton     = false;
            b_IDX_is_ID_act = C_EXP( "tLED__IDX_is_ID_act" );
            b_hasCB         = C_EXP( "tLED__hasCB" );
            b_hasINIB       = C_EXP( "tLED__hasINIB" );
            n_cellInLinUnit = C_EXP( "tLED__NCELLINLINKUNIT" );
            n_cellInSystem  = 1;
            cEntryInfo[]    = tLED_eLEDEntryInfo.eEntryInfo;
        };
        cell nTECSInfo::tEntryInfo tLED_eLEDEntryInfo{
            name            = "eLED";
            cSignatureInfo  = sLEDSignatureInfo.eSignatureInfo;
            b_inline        = false;
        };
        cell nTECSInfo::tCelltypeInfo tBatteryCelltypeInfo {
            name            = "tBattery";
            b_singleton     = false;
            b_IDX_is_ID_act = C_EXP( "tBattery__IDX_is_ID_act" );
            b_hasCB         = C_EXP( "tBattery__hasCB" );
            b_hasINIB       = C_EXP( "tBattery__hasINIB" );
            n_cellInLinUnit = C_EXP( "tBattery__NCELLINLINKUNIT" );
            n_cellInSystem  = 1;
            cEntryInfo[]    = tBattery_eBatteryEntryInfo.eEntryInfo;
        };
        cell nTECSInfo::tEntryInfo tBattery_eBatteryEntryInfo{
            name            = "eBattery";
            cSignatureInfo  = sBatterySignatureInfo.eSignatureInfo;
            b_inline        = false;
        };
        cell nTECSInfo::tCelltypeInfo tSpeakerCelltypeInfo {
            name            = "tSpeaker";
            b_singleton     = true;
            b_IDX_is_ID_act = C_EXP( "tSpeaker__IDX_is_ID_act" );
            b_hasCB         = C_EXP( "tSpeaker__hasCB" );
            b_hasINIB       = C_EXP( "tSpeaker__hasINIB" );
            n_cellInLinUnit = C_EXP( "tSpeaker__NCELLINLINKUNIT" );
            n_cellInSystem  = 1;
            cEntryInfo[]    = tSpeaker_eSpeakerEntryInfo.eEntryInfo;
        };
        cell nTECSInfo::tEntryInfo tSpeaker_eSpeakerEntryInfo{
            name            = "eSpeaker";
            cSignatureInfo  = sSpeakerSignatureInfo.eSignatureInfo;
            b_inline        = false;
        };
        cell nTECSInfo::tCelltypeInfo tEV3PlatformCelltypeInfo {
            name            = "tEV3Platform";
            b_singleton     = false;
            b_IDX_is_ID_act = C_EXP( "tEV3Platform__IDX_is_ID_act" );
            b_hasCB         = C_EXP( "tEV3Platform__hasCB" );
            b_hasINIB       = C_EXP( "tEV3Platform__hasINIB" );
            n_cellInLinUnit = C_EXP( "tEV3Platform__NCELLINLINKUNIT" );
            n_cellInSystem  = 1;
            cEntryInfo[]    = tEV3Platform_eTaskBodyEntryInfo.eEntryInfo;
            cCallInfo[]     = tEV3Platform_cRiteVMCallInfo.eCallInfo;
            cCallInfo[]     = tEV3Platform_cTaskCallInfo.eCallInfo;
        };
        cell nTECSInfo::tEntryInfo tEV3Platform_eTaskBodyEntryInfo{
            name            = "eTaskBody";
            cSignatureInfo  = sTaskBodySignatureInfo.eSignatureInfo;
            b_inline        = false;
        };
        cell nTECSInfo::tCallInfo tEV3Platform_cRiteVMCallInfo{
            name            = "cRiteVM";
            cSignatureInfo  = sRiteVMSignatureInfo.eSignatureInfo;
            offset            = C_EXP( "tEV3Platform_cRiteVM__offset" );
            b_optional        = true;
            b_omit            = false;
            b_dynamic         = false;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "tEV3Platform_cRiteVM__place" );
            b_VMT_useless     = C_EXP( "tEV3Platform_cRiteVM__b_VMT_useless" );
            b_skelton_useless = C_EXP( "tEV3Platform_cRiteVM__b_skelton_useless" );
            b_cell_unique     = C_EXP( "tEV3Platform_cRiteVM__b_cell_unique" );

        };
        cell nTECSInfo::tCallInfo tEV3Platform_cTaskCallInfo{
            name            = "cTask";
            cSignatureInfo  = sTaskSignatureInfo.eSignatureInfo;
            offset            = C_EXP( "tEV3Platform_cTask__offset" );
            b_optional        = true;
            b_omit            = false;
            b_dynamic         = false;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "tEV3Platform_cTask__place" );
            b_VMT_useless     = C_EXP( "tEV3Platform_cTask__b_VMT_useless" );
            b_skelton_useless = C_EXP( "tEV3Platform_cTask__b_skelton_useless" );
            b_cell_unique     = C_EXP( "tEV3Platform_cTask__b_cell_unique" );

        };
        cell nTECSInfo::tCelltypeInfo tBalancerCelltypeInfo {
            name            = "tBalancer";
            b_singleton     = true;
            b_IDX_is_ID_act = C_EXP( "tBalancer__IDX_is_ID_act" );
            b_hasCB         = C_EXP( "tBalancer__hasCB" );
            b_hasINIB       = C_EXP( "tBalancer__hasINIB" );
            n_cellInLinUnit = C_EXP( "tBalancer__NCELLINLINKUNIT" );
            n_cellInSystem  = 1;
            cEntryInfo[]    = tBalancer_eBalancerEntryInfo.eEntryInfo;
        };
        cell nTECSInfo::tEntryInfo tBalancer_eBalancerEntryInfo{
            name            = "eBalancer";
            cSignatureInfo  = sBalancerSignatureInfo.eSignatureInfo;
            b_inline        = false;
        };
        cell nTECSInfo::tCelltypeInfo tSharedMemoryCelltypeInfo {
            name            = "tSharedMemory";
            b_singleton     = false;
            b_IDX_is_ID_act = C_EXP( "tSharedMemory__IDX_is_ID_act" );
            b_hasCB         = C_EXP( "tSharedMemory__hasCB" );
            b_hasINIB       = C_EXP( "tSharedMemory__hasINIB" );
            n_cellInLinUnit = C_EXP( "tSharedMemory__NCELLINLINKUNIT" );
            n_cellInSystem  = 1;
            cEntryInfo[]    = tSharedMemory_eSharedMemoryEntryInfo.eEntryInfo;
            cAttrInfo[]     = tSharedMemory_sizeVarDeclInfo.eVarDeclInfo;
            cVarInfo[]      = tSharedMemory_dataVarDeclInfo.eVarDeclInfo;
        };
        cell nTECSInfo::tEntryInfo tSharedMemory_eSharedMemoryEntryInfo{
            name            = "eSharedMemory";
            cSignatureInfo  = sSharedMemorySignatureInfo.eSignatureInfo;
            b_inline        = false;
        };
        cell nTECSInfo::tVarDeclInfo tSharedMemory_sizeVarDeclInfo {
            name            = "size";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_tSharedMemory_size" );
            cTypeInfo       = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo tSharedMemory_dataVarDeclInfo {
            name            = "data";
            sizeIsExpr      = "mikan";
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_tSharedMemory_data" );
            cTypeInfo       = int32_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tCelltypeInfo tTaskMainCelltypeInfo {
            name            = "tTaskMain";
            b_singleton     = false;
            b_IDX_is_ID_act = C_EXP( "tTaskMain__IDX_is_ID_act" );
            b_hasCB         = C_EXP( "tTaskMain__hasCB" );
            b_hasINIB       = C_EXP( "tTaskMain__hasINIB" );
            n_cellInLinUnit = C_EXP( "tTaskMain__NCELLINLINKUNIT" );
            n_cellInSystem  = 1;
            cEntryInfo[]    = tTaskMain_eBodyEntryInfo.eEntryInfo;
            cCallInfo[]     = tTaskMain_cLCDCallInfo.eCallInfo;
            cCallInfo[]     = tTaskMain_cButtonCallInfo.eCallInfo;
            cCallInfo[]     = tTaskMain_cTECSInfoCallInfo.eCallInfo;
            cCallInfo[]     = tTaskMain_cNSInfoCallInfo.eCallInfo;
            cCallInfo[]     = tTaskMain_cRegionInfoCallInfo.eCallInfo;
            cCallInfo[]     = tTaskMain_cCellInfoCallInfo.eCallInfo;
            cCallInfo[]     = tTaskMain_cSignatureInfoCallInfo.eCallInfo;
            cCallInfo[]     = tTaskMain_cCelltypeInfoCallInfo.eCallInfo;
            cCallInfo[]     = tTaskMain_cVarDeclInfoCallInfo.eCallInfo;
            cCallInfo[]     = tTaskMain_cTypeInfoCallInfo.eCallInfo;
            cCallInfo[]     = tTaskMain_cFunctionInfoCallInfo.eCallInfo;
            cCallInfo[]     = tTaskMain_cParamInfoCallInfo.eCallInfo;
            cCallInfo[]     = tTaskMain_cEntryInfoCallInfo.eCallInfo;
            cAttrInfo[]     = tTaskMain_NAME_LENVarDeclInfo.eVarDeclInfo;
            cAttrInfo[]     = tTaskMain_ARG_NAME_LENVarDeclInfo.eVarDeclInfo;
            cAttrInfo[]     = tTaskMain_ARG_DIMVarDeclInfo.eVarDeclInfo;
            cAttrInfo[]     = tTaskMain_TARGET_NUMVarDeclInfo.eVarDeclInfo;
            cVarInfo[]      = tTaskMain_cell_pathVarDeclInfo.eVarDeclInfo;
            cVarInfo[]      = tTaskMain_celltype_pathVarDeclInfo.eVarDeclInfo;
            cVarInfo[]      = tTaskMain_entry_pathVarDeclInfo.eVarDeclInfo;
            cVarInfo[]      = tTaskMain_entry_path_tmpVarDeclInfo.eVarDeclInfo;
            cVarInfo[]      = tTaskMain_signature_pathVarDeclInfo.eVarDeclInfo;
            cVarInfo[]      = tTaskMain_function_pathVarDeclInfo.eVarDeclInfo;
            cVarInfo[]      = tTaskMain_function_path_tmpVarDeclInfo.eVarDeclInfo;
            cVarInfo[]      = tTaskMain_arg_numVarDeclInfo.eVarDeclInfo;
            cVarInfo[]      = tTaskMain_exp_typeVarDeclInfo.eVarDeclInfo;
            cVarInfo[]      = tTaskMain_argVarDeclInfo.eVarDeclInfo;
            cVarInfo[]      = tTaskMain_arg_typeVarDeclInfo.eVarDeclInfo;
            cVarInfo[]      = tTaskMain_find_entryVarDeclInfo.eVarDeclInfo;
            cVarInfo[]      = tTaskMain_find_funcVarDeclInfo.eVarDeclInfo;
        };
        cell nTECSInfo::tEntryInfo tTaskMain_eBodyEntryInfo{
            name            = "eBody";
            cSignatureInfo  = sTaskBodySignatureInfo.eSignatureInfo;
            b_inline        = false;
        };
        cell nTECSInfo::tCallInfo tTaskMain_cLCDCallInfo{
            name            = "cLCD";
            cSignatureInfo  = sLCDSignatureInfo.eSignatureInfo;
            offset            = C_EXP( "tTaskMain_cLCD__offset" );
            b_optional        = false;
            b_omit            = false;
            b_dynamic         = false;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "tTaskMain_cLCD__place" );
            b_VMT_useless     = C_EXP( "tTaskMain_cLCD__b_VMT_useless" );
            b_skelton_useless = C_EXP( "tTaskMain_cLCD__b_skelton_useless" );
            b_cell_unique     = C_EXP( "tTaskMain_cLCD__b_cell_unique" );

        };
        cell nTECSInfo::tCallInfo tTaskMain_cButtonCallInfo{
            name            = "cButton";
            cSignatureInfo  = sButtonSignatureInfo.eSignatureInfo;
            offset            = C_EXP( "tTaskMain_cButton__offset" );
            b_optional        = false;
            b_omit            = false;
            b_dynamic         = false;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "tTaskMain_cButton__place" );
            b_VMT_useless     = C_EXP( "tTaskMain_cButton__b_VMT_useless" );
            b_skelton_useless = C_EXP( "tTaskMain_cButton__b_skelton_useless" );
            b_cell_unique     = C_EXP( "tTaskMain_cButton__b_cell_unique" );

        };
        cell nTECSInfo::tCallInfo tTaskMain_cTECSInfoCallInfo{
            name            = "cTECSInfo";
            cSignatureInfo  = nTECSInfo_sTECSInfoSignatureInfo.eSignatureInfo;
            offset            = C_EXP( "tTaskMain_cTECSInfo__offset" );
            b_optional        = false;
            b_omit            = false;
            b_dynamic         = false;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "tTaskMain_cTECSInfo__place" );
            b_VMT_useless     = C_EXP( "tTaskMain_cTECSInfo__b_VMT_useless" );
            b_skelton_useless = C_EXP( "tTaskMain_cTECSInfo__b_skelton_useless" );
            b_cell_unique     = C_EXP( "tTaskMain_cTECSInfo__b_cell_unique" );

        };
        cell nTECSInfo::tCallInfo tTaskMain_cNSInfoCallInfo{
            name            = "cNSInfo";
            cSignatureInfo  = nTECSInfo_sNamespaceInfoSignatureInfo.eSignatureInfo;
            offset            = C_EXP( "tTaskMain_cNSInfo__offset" );
            b_optional        = true;
            b_omit            = false;
            b_dynamic         = true;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "tTaskMain_cNSInfo__place" );
            b_VMT_useless     = C_EXP( "tTaskMain_cNSInfo__b_VMT_useless" );
            b_skelton_useless = C_EXP( "tTaskMain_cNSInfo__b_skelton_useless" );
            b_cell_unique     = C_EXP( "tTaskMain_cNSInfo__b_cell_unique" );

        };
        cell nTECSInfo::tCallInfo tTaskMain_cRegionInfoCallInfo{
            name            = "cRegionInfo";
            cSignatureInfo  = nTECSInfo_sRegionInfoSignatureInfo.eSignatureInfo;
            offset            = C_EXP( "tTaskMain_cRegionInfo__offset" );
            b_optional        = true;
            b_omit            = false;
            b_dynamic         = true;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "tTaskMain_cRegionInfo__place" );
            b_VMT_useless     = C_EXP( "tTaskMain_cRegionInfo__b_VMT_useless" );
            b_skelton_useless = C_EXP( "tTaskMain_cRegionInfo__b_skelton_useless" );
            b_cell_unique     = C_EXP( "tTaskMain_cRegionInfo__b_cell_unique" );

        };
        cell nTECSInfo::tCallInfo tTaskMain_cCellInfoCallInfo{
            name            = "cCellInfo";
            cSignatureInfo  = nTECSInfo_sCellInfoSignatureInfo.eSignatureInfo;
            offset            = C_EXP( "tTaskMain_cCellInfo__offset" );
            b_optional        = true;
            b_omit            = false;
            b_dynamic         = true;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "tTaskMain_cCellInfo__place" );
            b_VMT_useless     = C_EXP( "tTaskMain_cCellInfo__b_VMT_useless" );
            b_skelton_useless = C_EXP( "tTaskMain_cCellInfo__b_skelton_useless" );
            b_cell_unique     = C_EXP( "tTaskMain_cCellInfo__b_cell_unique" );

        };
        cell nTECSInfo::tCallInfo tTaskMain_cSignatureInfoCallInfo{
            name            = "cSignatureInfo";
            cSignatureInfo  = nTECSInfo_sSignatureInfoSignatureInfo.eSignatureInfo;
            offset            = C_EXP( "tTaskMain_cSignatureInfo__offset" );
            b_optional        = true;
            b_omit            = false;
            b_dynamic         = true;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "tTaskMain_cSignatureInfo__place" );
            b_VMT_useless     = C_EXP( "tTaskMain_cSignatureInfo__b_VMT_useless" );
            b_skelton_useless = C_EXP( "tTaskMain_cSignatureInfo__b_skelton_useless" );
            b_cell_unique     = C_EXP( "tTaskMain_cSignatureInfo__b_cell_unique" );

        };
        cell nTECSInfo::tCallInfo tTaskMain_cCelltypeInfoCallInfo{
            name            = "cCelltypeInfo";
            cSignatureInfo  = nTECSInfo_sCelltypeInfoSignatureInfo.eSignatureInfo;
            offset            = C_EXP( "tTaskMain_cCelltypeInfo__offset" );
            b_optional        = true;
            b_omit            = false;
            b_dynamic         = true;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "tTaskMain_cCelltypeInfo__place" );
            b_VMT_useless     = C_EXP( "tTaskMain_cCelltypeInfo__b_VMT_useless" );
            b_skelton_useless = C_EXP( "tTaskMain_cCelltypeInfo__b_skelton_useless" );
            b_cell_unique     = C_EXP( "tTaskMain_cCelltypeInfo__b_cell_unique" );

        };
        cell nTECSInfo::tCallInfo tTaskMain_cVarDeclInfoCallInfo{
            name            = "cVarDeclInfo";
            cSignatureInfo  = nTECSInfo_sVarDeclInfoSignatureInfo.eSignatureInfo;
            offset            = C_EXP( "tTaskMain_cVarDeclInfo__offset" );
            b_optional        = true;
            b_omit            = false;
            b_dynamic         = true;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "tTaskMain_cVarDeclInfo__place" );
            b_VMT_useless     = C_EXP( "tTaskMain_cVarDeclInfo__b_VMT_useless" );
            b_skelton_useless = C_EXP( "tTaskMain_cVarDeclInfo__b_skelton_useless" );
            b_cell_unique     = C_EXP( "tTaskMain_cVarDeclInfo__b_cell_unique" );

        };
        cell nTECSInfo::tCallInfo tTaskMain_cTypeInfoCallInfo{
            name            = "cTypeInfo";
            cSignatureInfo  = nTECSInfo_sTypeInfoSignatureInfo.eSignatureInfo;
            offset            = C_EXP( "tTaskMain_cTypeInfo__offset" );
            b_optional        = true;
            b_omit            = false;
            b_dynamic         = true;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "tTaskMain_cTypeInfo__place" );
            b_VMT_useless     = C_EXP( "tTaskMain_cTypeInfo__b_VMT_useless" );
            b_skelton_useless = C_EXP( "tTaskMain_cTypeInfo__b_skelton_useless" );
            b_cell_unique     = C_EXP( "tTaskMain_cTypeInfo__b_cell_unique" );

        };
        cell nTECSInfo::tCallInfo tTaskMain_cFunctionInfoCallInfo{
            name            = "cFunctionInfo";
            cSignatureInfo  = nTECSInfo_sFunctionInfoSignatureInfo.eSignatureInfo;
            offset            = C_EXP( "tTaskMain_cFunctionInfo__offset" );
            b_optional        = true;
            b_omit            = false;
            b_dynamic         = true;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "tTaskMain_cFunctionInfo__place" );
            b_VMT_useless     = C_EXP( "tTaskMain_cFunctionInfo__b_VMT_useless" );
            b_skelton_useless = C_EXP( "tTaskMain_cFunctionInfo__b_skelton_useless" );
            b_cell_unique     = C_EXP( "tTaskMain_cFunctionInfo__b_cell_unique" );

        };
        cell nTECSInfo::tCallInfo tTaskMain_cParamInfoCallInfo{
            name            = "cParamInfo";
            cSignatureInfo  = nTECSInfo_sParamInfoSignatureInfo.eSignatureInfo;
            offset            = C_EXP( "tTaskMain_cParamInfo__offset" );
            b_optional        = true;
            b_omit            = false;
            b_dynamic         = true;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "tTaskMain_cParamInfo__place" );
            b_VMT_useless     = C_EXP( "tTaskMain_cParamInfo__b_VMT_useless" );
            b_skelton_useless = C_EXP( "tTaskMain_cParamInfo__b_skelton_useless" );
            b_cell_unique     = C_EXP( "tTaskMain_cParamInfo__b_cell_unique" );

        };
        cell nTECSInfo::tCallInfo tTaskMain_cEntryInfoCallInfo{
            name            = "cEntryInfo";
            cSignatureInfo  = nTECSInfo_sEntryInfoSignatureInfo.eSignatureInfo;
            offset            = C_EXP( "tTaskMain_cEntryInfo__offset" );
            b_optional        = true;
            b_omit            = false;
            b_dynamic         = true;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "tTaskMain_cEntryInfo__place" );
            b_VMT_useless     = C_EXP( "tTaskMain_cEntryInfo__b_VMT_useless" );
            b_skelton_useless = C_EXP( "tTaskMain_cEntryInfo__b_skelton_useless" );
            b_cell_unique     = C_EXP( "tTaskMain_cEntryInfo__b_cell_unique" );

        };
        cell nTECSInfo::tVarDeclInfo tTaskMain_NAME_LENVarDeclInfo {
            name            = "NAME_LEN";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_tTaskMain_NAME_LEN" );
            cTypeInfo       = int16_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo tTaskMain_ARG_NAME_LENVarDeclInfo {
            name            = "ARG_NAME_LEN";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_tTaskMain_ARG_NAME_LEN" );
            cTypeInfo       = int16_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo tTaskMain_ARG_DIMVarDeclInfo {
            name            = "ARG_DIM";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_tTaskMain_ARG_DIM" );
            cTypeInfo       = int16_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo tTaskMain_TARGET_NUMVarDeclInfo {
            name            = "TARGET_NUM";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_tTaskMain_TARGET_NUM" );
            cTypeInfo       = int16_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo tTaskMain_cell_pathVarDeclInfo {
            name            = "cell_path";
            sizeIsExpr      = "mikan";
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_tTaskMain_cell_path" );
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo tTaskMain_celltype_pathVarDeclInfo {
            name            = "celltype_path";
            sizeIsExpr      = "mikan";
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_tTaskMain_celltype_path" );
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo tTaskMain_entry_pathVarDeclInfo {
            name            = "entry_path";
            sizeIsExpr      = "mikan";
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_tTaskMain_entry_path" );
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo tTaskMain_entry_path_tmpVarDeclInfo {
            name            = "entry_path_tmp";
            sizeIsExpr      = "mikan";
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_tTaskMain_entry_path_tmp" );
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo tTaskMain_signature_pathVarDeclInfo {
            name            = "signature_path";
            sizeIsExpr      = "mikan";
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_tTaskMain_signature_path" );
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo tTaskMain_function_pathVarDeclInfo {
            name            = "function_path";
            sizeIsExpr      = "mikan";
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_tTaskMain_function_path" );
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo tTaskMain_function_path_tmpVarDeclInfo {
            name            = "function_path_tmp";
            sizeIsExpr      = "mikan";
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_tTaskMain_function_path_tmp" );
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo tTaskMain_arg_numVarDeclInfo {
            name            = "arg_num";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_tTaskMain_arg_num" );
            cTypeInfo       = int8_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo tTaskMain_exp_typeVarDeclInfo {
            name            = "exp_type";
            sizeIsExpr      = "mikan";
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_tTaskMain_exp_type" );
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo tTaskMain_argVarDeclInfo {
            name            = "arg";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_tTaskMain_arg" );
            cTypeInfo       = char_t_Array128__Array32_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo tTaskMain_arg_typeVarDeclInfo {
            name            = "arg_type";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_tTaskMain_arg_type" );
            cTypeInfo       = char_t_Array128__Array32_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo tTaskMain_find_entryVarDeclInfo {
            name            = "find_entry";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_tTaskMain_find_entry" );
            cTypeInfo       = int8_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo tTaskMain_find_funcVarDeclInfo {
            name            = "find_func";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_tTaskMain_find_func" );
            cTypeInfo       = int8_tTypeInfo.eTypeInfo;
        };

        /*** ::nMruby namespace information cell ***/
        cell nTECSInfo::tNamespaceInfo nMrubyNamespaceInfo{
            name = "nMruby";

            /* SIGNATURE info */
            cSignatureInfo[] = nMruby_sInitializeBridgeSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = nMruby_sInitializeTECSBridgeSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = nMruby_sMrubyVMSignatureInfo.eSignatureInfo;

            /* CELLTYPE info */
            cCelltypeInfo[] = nMruby_tsKernelCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = nMruby_tsMotorCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = nMruby_tsLCDCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = nMruby_tsLEDCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = nMruby_tsButtonCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = nMruby_tsBatteryCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = nMruby_tsSpeakerCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = nMruby_tsUltrasonicSensorCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = nMruby_tsGyroSensorCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = nMruby_tsColorSensorCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = nMruby_tsTouchSensorCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = nMruby_tsBalancerCelltypeInfo.eCelltypeInfo;
            cCelltypeInfo[] = nMruby_tsSharedMemoryCelltypeInfo.eCelltypeInfo;
        };   /* cell nTECSInfo::tNamespaceInfo nMrubyNamespaceInfo */

        /*** nMruby_sInitializeBridge signature information ****/
        cell nTECSInfo::tSignatureInfo nMruby_sInitializeBridgeSignatureInfo {
            name            = "sInitializeBridge";
            cFunctionInfo[] = nMruby_sInitializeBridge_initializeBridgeFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo nMruby_sInitializeBridge_initializeBridgeFunctionInfo {
            name            = "nMruby_sInitializeBridge_";
            bOneway         = false;
            cParamInfo[]    = nMruby_sInitializeBridge_initializeBridge_mrbParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nMruby_sInitializeBridge_initializeBridge_mrbParamInfo {
            name            = "mrb";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = const__mrb_state_Ptr_TypeInfo.eTypeInfo;
        };

        /*** nMruby_sInitializeTECSBridge signature information ****/
        cell nTECSInfo::tSignatureInfo nMruby_sInitializeTECSBridgeSignatureInfo {
            name            = "sInitializeTECSBridge";
            cFunctionInfo[] = nMruby_sInitializeTECSBridge_initializeBridgeFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo nMruby_sInitializeTECSBridge_initializeBridgeFunctionInfo {
            name            = "nMruby_sInitializeTECSBridge_";
            bOneway         = false;
            cParamInfo[]    = nMruby_sInitializeTECSBridge_initializeBridge_mrbParamInfo.eParamInfo;
            cParamInfo[]    = nMruby_sInitializeTECSBridge_initializeBridge_TECSParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nMruby_sInitializeTECSBridge_initializeBridge_mrbParamInfo {
            name            = "mrb";
            dir             = PARAM_DIR_INOUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = mrb_state_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nMruby_sInitializeTECSBridge_initializeBridge_TECSParamInfo {
            name            = "TECS";
            dir             = PARAM_DIR_INOUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = struct__RClass_Ptr_TypeInfo.eTypeInfo;
        };

        /*** nMruby_sMrubyVM signature information ****/
        cell nTECSInfo::tSignatureInfo nMruby_sMrubyVMSignatureInfo {
            name            = "sMrubyVM";
            cFunctionInfo[] = nMruby_sMrubyVM_initializeFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nMruby_sMrubyVM_runFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nMruby_sMrubyVM_funcallFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nMruby_sMrubyVM_finalizeFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo nMruby_sMrubyVM_initializeFunctionInfo {
            name            = "nMruby_sMrubyVM_";
            bOneway         = false;
            cReturnTypeInfo = bool_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nMruby_sMrubyVM_runFunctionInfo {
            name            = "nMruby_sMrubyVM_";
            bOneway         = false;
            cReturnTypeInfo = bool_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nMruby_sMrubyVM_funcallFunctionInfo {
            name            = "nMruby_sMrubyVM_";
            bOneway         = false;
            cParamInfo[]    = nMruby_sMrubyVM_funcall_nameParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nMruby_sMrubyVM_funcall_nameParamInfo {
            name            = "name";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = "";
            cTypeInfo       = const__char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nMruby_sMrubyVM_finalizeFunctionInfo {
            name            = "nMruby_sMrubyVM_";
            bOneway         = false;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tCelltypeInfo nMruby_tsKernelCelltypeInfo {
            name            = "tsKernel";
            b_singleton     = false;
            b_IDX_is_ID_act = C_EXP( "nMruby_tsKernel__IDX_is_ID_act" );
            b_hasCB         = C_EXP( "nMruby_tsKernel__hasCB" );
            b_hasINIB       = C_EXP( "nMruby_tsKernel__hasINIB" );
            n_cellInLinUnit = C_EXP( "nMruby_tsKernel__NCELLINLINKUNIT" );
            n_cellInSystem  = 1;
            cCallInfo[]     = nMruby_tsKernel_cTECSCallInfo.eCallInfo;
            cAttrInfo[]     = nMruby_tsKernel_VMnameVarDeclInfo.eVarDeclInfo;
            cAttrInfo[]     = nMruby_tsKernel_bridgeNameVarDeclInfo.eVarDeclInfo;
        };
        cell nTECSInfo::tCallInfo nMruby_tsKernel_cTECSCallInfo{
            name            = "cTECS";
            cSignatureInfo  = sKernelSignatureInfo.eSignatureInfo;
            offset            = C_EXP( "nMruby_tsKernel_cTECS__offset" );
            b_optional        = false;
            b_omit            = false;
            b_dynamic         = false;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "nMruby_tsKernel_cTECS__place" );
            b_VMT_useless     = C_EXP( "nMruby_tsKernel_cTECS__b_VMT_useless" );
            b_skelton_useless = C_EXP( "nMruby_tsKernel_cTECS__b_skelton_useless" );
            b_cell_unique     = C_EXP( "nMruby_tsKernel_cTECS__b_cell_unique" );

        };
        cell nTECSInfo::tVarDeclInfo nMruby_tsKernel_VMnameVarDeclInfo {
            name            = "VMname";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_nMruby_tsKernel_VMname" );
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo nMruby_tsKernel_bridgeNameVarDeclInfo {
            name            = "bridgeName";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_nMruby_tsKernel_bridgeName" );
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tCelltypeInfo nMruby_tsMotorCelltypeInfo {
            name            = "tsMotor";
            b_singleton     = false;
            b_IDX_is_ID_act = C_EXP( "nMruby_tsMotor__IDX_is_ID_act" );
            b_hasCB         = C_EXP( "nMruby_tsMotor__hasCB" );
            b_hasINIB       = C_EXP( "nMruby_tsMotor__hasINIB" );
            n_cellInLinUnit = C_EXP( "nMruby_tsMotor__NCELLINLINKUNIT" );
            n_cellInSystem  = 4;
            cCallInfo[]     = nMruby_tsMotor_cTECSCallInfo.eCallInfo;
            cAttrInfo[]     = nMruby_tsMotor_VMnameVarDeclInfo.eVarDeclInfo;
            cAttrInfo[]     = nMruby_tsMotor_bridgeNameVarDeclInfo.eVarDeclInfo;
        };
        cell nTECSInfo::tCallInfo nMruby_tsMotor_cTECSCallInfo{
            name            = "cTECS";
            cSignatureInfo  = sMotorSignatureInfo.eSignatureInfo;
            offset            = C_EXP( "nMruby_tsMotor_cTECS__offset" );
            b_optional        = false;
            b_omit            = false;
            b_dynamic         = false;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "nMruby_tsMotor_cTECS__place" );
            b_VMT_useless     = C_EXP( "nMruby_tsMotor_cTECS__b_VMT_useless" );
            b_skelton_useless = C_EXP( "nMruby_tsMotor_cTECS__b_skelton_useless" );
            b_cell_unique     = C_EXP( "nMruby_tsMotor_cTECS__b_cell_unique" );

        };
        cell nTECSInfo::tVarDeclInfo nMruby_tsMotor_VMnameVarDeclInfo {
            name            = "VMname";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_nMruby_tsMotor_VMname" );
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo nMruby_tsMotor_bridgeNameVarDeclInfo {
            name            = "bridgeName";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_nMruby_tsMotor_bridgeName" );
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tCelltypeInfo nMruby_tsLCDCelltypeInfo {
            name            = "tsLCD";
            b_singleton     = false;
            b_IDX_is_ID_act = C_EXP( "nMruby_tsLCD__IDX_is_ID_act" );
            b_hasCB         = C_EXP( "nMruby_tsLCD__hasCB" );
            b_hasINIB       = C_EXP( "nMruby_tsLCD__hasINIB" );
            n_cellInLinUnit = C_EXP( "nMruby_tsLCD__NCELLINLINKUNIT" );
            n_cellInSystem  = 1;
            cCallInfo[]     = nMruby_tsLCD_cTECSCallInfo.eCallInfo;
            cAttrInfo[]     = nMruby_tsLCD_VMnameVarDeclInfo.eVarDeclInfo;
            cAttrInfo[]     = nMruby_tsLCD_bridgeNameVarDeclInfo.eVarDeclInfo;
        };
        cell nTECSInfo::tCallInfo nMruby_tsLCD_cTECSCallInfo{
            name            = "cTECS";
            cSignatureInfo  = sLCDSignatureInfo.eSignatureInfo;
            offset            = C_EXP( "nMruby_tsLCD_cTECS__offset" );
            b_optional        = false;
            b_omit            = false;
            b_dynamic         = false;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "nMruby_tsLCD_cTECS__place" );
            b_VMT_useless     = C_EXP( "nMruby_tsLCD_cTECS__b_VMT_useless" );
            b_skelton_useless = C_EXP( "nMruby_tsLCD_cTECS__b_skelton_useless" );
            b_cell_unique     = C_EXP( "nMruby_tsLCD_cTECS__b_cell_unique" );

        };
        cell nTECSInfo::tVarDeclInfo nMruby_tsLCD_VMnameVarDeclInfo {
            name            = "VMname";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_nMruby_tsLCD_VMname" );
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo nMruby_tsLCD_bridgeNameVarDeclInfo {
            name            = "bridgeName";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_nMruby_tsLCD_bridgeName" );
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tCelltypeInfo nMruby_tsLEDCelltypeInfo {
            name            = "tsLED";
            b_singleton     = false;
            b_IDX_is_ID_act = C_EXP( "nMruby_tsLED__IDX_is_ID_act" );
            b_hasCB         = C_EXP( "nMruby_tsLED__hasCB" );
            b_hasINIB       = C_EXP( "nMruby_tsLED__hasINIB" );
            n_cellInLinUnit = C_EXP( "nMruby_tsLED__NCELLINLINKUNIT" );
            n_cellInSystem  = 1;
            cCallInfo[]     = nMruby_tsLED_cTECSCallInfo.eCallInfo;
            cAttrInfo[]     = nMruby_tsLED_VMnameVarDeclInfo.eVarDeclInfo;
            cAttrInfo[]     = nMruby_tsLED_bridgeNameVarDeclInfo.eVarDeclInfo;
        };
        cell nTECSInfo::tCallInfo nMruby_tsLED_cTECSCallInfo{
            name            = "cTECS";
            cSignatureInfo  = sLEDSignatureInfo.eSignatureInfo;
            offset            = C_EXP( "nMruby_tsLED_cTECS__offset" );
            b_optional        = false;
            b_omit            = false;
            b_dynamic         = false;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "nMruby_tsLED_cTECS__place" );
            b_VMT_useless     = C_EXP( "nMruby_tsLED_cTECS__b_VMT_useless" );
            b_skelton_useless = C_EXP( "nMruby_tsLED_cTECS__b_skelton_useless" );
            b_cell_unique     = C_EXP( "nMruby_tsLED_cTECS__b_cell_unique" );

        };
        cell nTECSInfo::tVarDeclInfo nMruby_tsLED_VMnameVarDeclInfo {
            name            = "VMname";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_nMruby_tsLED_VMname" );
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo nMruby_tsLED_bridgeNameVarDeclInfo {
            name            = "bridgeName";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_nMruby_tsLED_bridgeName" );
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tCelltypeInfo nMruby_tsButtonCelltypeInfo {
            name            = "tsButton";
            b_singleton     = false;
            b_IDX_is_ID_act = C_EXP( "nMruby_tsButton__IDX_is_ID_act" );
            b_hasCB         = C_EXP( "nMruby_tsButton__hasCB" );
            b_hasINIB       = C_EXP( "nMruby_tsButton__hasINIB" );
            n_cellInLinUnit = C_EXP( "nMruby_tsButton__NCELLINLINKUNIT" );
            n_cellInSystem  = 1;
            cCallInfo[]     = nMruby_tsButton_cTECSCallInfo.eCallInfo;
            cAttrInfo[]     = nMruby_tsButton_VMnameVarDeclInfo.eVarDeclInfo;
            cAttrInfo[]     = nMruby_tsButton_bridgeNameVarDeclInfo.eVarDeclInfo;
        };
        cell nTECSInfo::tCallInfo nMruby_tsButton_cTECSCallInfo{
            name            = "cTECS";
            cSignatureInfo  = sButtonSignatureInfo.eSignatureInfo;
            offset            = C_EXP( "nMruby_tsButton_cTECS__offset" );
            b_optional        = false;
            b_omit            = false;
            b_dynamic         = false;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "nMruby_tsButton_cTECS__place" );
            b_VMT_useless     = C_EXP( "nMruby_tsButton_cTECS__b_VMT_useless" );
            b_skelton_useless = C_EXP( "nMruby_tsButton_cTECS__b_skelton_useless" );
            b_cell_unique     = C_EXP( "nMruby_tsButton_cTECS__b_cell_unique" );

        };
        cell nTECSInfo::tVarDeclInfo nMruby_tsButton_VMnameVarDeclInfo {
            name            = "VMname";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_nMruby_tsButton_VMname" );
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo nMruby_tsButton_bridgeNameVarDeclInfo {
            name            = "bridgeName";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_nMruby_tsButton_bridgeName" );
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tCelltypeInfo nMruby_tsBatteryCelltypeInfo {
            name            = "tsBattery";
            b_singleton     = false;
            b_IDX_is_ID_act = C_EXP( "nMruby_tsBattery__IDX_is_ID_act" );
            b_hasCB         = C_EXP( "nMruby_tsBattery__hasCB" );
            b_hasINIB       = C_EXP( "nMruby_tsBattery__hasINIB" );
            n_cellInLinUnit = C_EXP( "nMruby_tsBattery__NCELLINLINKUNIT" );
            n_cellInSystem  = 1;
            cCallInfo[]     = nMruby_tsBattery_cTECSCallInfo.eCallInfo;
            cAttrInfo[]     = nMruby_tsBattery_VMnameVarDeclInfo.eVarDeclInfo;
            cAttrInfo[]     = nMruby_tsBattery_bridgeNameVarDeclInfo.eVarDeclInfo;
        };
        cell nTECSInfo::tCallInfo nMruby_tsBattery_cTECSCallInfo{
            name            = "cTECS";
            cSignatureInfo  = sBatterySignatureInfo.eSignatureInfo;
            offset            = C_EXP( "nMruby_tsBattery_cTECS__offset" );
            b_optional        = false;
            b_omit            = false;
            b_dynamic         = false;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "nMruby_tsBattery_cTECS__place" );
            b_VMT_useless     = C_EXP( "nMruby_tsBattery_cTECS__b_VMT_useless" );
            b_skelton_useless = C_EXP( "nMruby_tsBattery_cTECS__b_skelton_useless" );
            b_cell_unique     = C_EXP( "nMruby_tsBattery_cTECS__b_cell_unique" );

        };
        cell nTECSInfo::tVarDeclInfo nMruby_tsBattery_VMnameVarDeclInfo {
            name            = "VMname";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_nMruby_tsBattery_VMname" );
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo nMruby_tsBattery_bridgeNameVarDeclInfo {
            name            = "bridgeName";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_nMruby_tsBattery_bridgeName" );
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tCelltypeInfo nMruby_tsSpeakerCelltypeInfo {
            name            = "tsSpeaker";
            b_singleton     = false;
            b_IDX_is_ID_act = C_EXP( "nMruby_tsSpeaker__IDX_is_ID_act" );
            b_hasCB         = C_EXP( "nMruby_tsSpeaker__hasCB" );
            b_hasINIB       = C_EXP( "nMruby_tsSpeaker__hasINIB" );
            n_cellInLinUnit = C_EXP( "nMruby_tsSpeaker__NCELLINLINKUNIT" );
            n_cellInSystem  = 1;
            cCallInfo[]     = nMruby_tsSpeaker_cTECSCallInfo.eCallInfo;
            cAttrInfo[]     = nMruby_tsSpeaker_VMnameVarDeclInfo.eVarDeclInfo;
            cAttrInfo[]     = nMruby_tsSpeaker_bridgeNameVarDeclInfo.eVarDeclInfo;
        };
        cell nTECSInfo::tCallInfo nMruby_tsSpeaker_cTECSCallInfo{
            name            = "cTECS";
            cSignatureInfo  = sSpeakerSignatureInfo.eSignatureInfo;
            offset            = C_EXP( "nMruby_tsSpeaker_cTECS__offset" );
            b_optional        = false;
            b_omit            = false;
            b_dynamic         = false;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "nMruby_tsSpeaker_cTECS__place" );
            b_VMT_useless     = C_EXP( "nMruby_tsSpeaker_cTECS__b_VMT_useless" );
            b_skelton_useless = C_EXP( "nMruby_tsSpeaker_cTECS__b_skelton_useless" );
            b_cell_unique     = C_EXP( "nMruby_tsSpeaker_cTECS__b_cell_unique" );

        };
        cell nTECSInfo::tVarDeclInfo nMruby_tsSpeaker_VMnameVarDeclInfo {
            name            = "VMname";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_nMruby_tsSpeaker_VMname" );
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo nMruby_tsSpeaker_bridgeNameVarDeclInfo {
            name            = "bridgeName";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_nMruby_tsSpeaker_bridgeName" );
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tCelltypeInfo nMruby_tsUltrasonicSensorCelltypeInfo {
            name            = "tsUltrasonicSensor";
            b_singleton     = false;
            b_IDX_is_ID_act = C_EXP( "nMruby_tsUltrasonicSensor__IDX_is_ID_act" );
            b_hasCB         = C_EXP( "nMruby_tsUltrasonicSensor__hasCB" );
            b_hasINIB       = C_EXP( "nMruby_tsUltrasonicSensor__hasINIB" );
            n_cellInLinUnit = C_EXP( "nMruby_tsUltrasonicSensor__NCELLINLINKUNIT" );
            n_cellInSystem  = 4;
            cCallInfo[]     = nMruby_tsUltrasonicSensor_cTECSCallInfo.eCallInfo;
            cAttrInfo[]     = nMruby_tsUltrasonicSensor_VMnameVarDeclInfo.eVarDeclInfo;
            cAttrInfo[]     = nMruby_tsUltrasonicSensor_bridgeNameVarDeclInfo.eVarDeclInfo;
        };
        cell nTECSInfo::tCallInfo nMruby_tsUltrasonicSensor_cTECSCallInfo{
            name            = "cTECS";
            cSignatureInfo  = sUltrasonicSensorSignatureInfo.eSignatureInfo;
            offset            = C_EXP( "nMruby_tsUltrasonicSensor_cTECS__offset" );
            b_optional        = false;
            b_omit            = false;
            b_dynamic         = false;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "nMruby_tsUltrasonicSensor_cTECS__place" );
            b_VMT_useless     = C_EXP( "nMruby_tsUltrasonicSensor_cTECS__b_VMT_useless" );
            b_skelton_useless = C_EXP( "nMruby_tsUltrasonicSensor_cTECS__b_skelton_useless" );
            b_cell_unique     = C_EXP( "nMruby_tsUltrasonicSensor_cTECS__b_cell_unique" );

        };
        cell nTECSInfo::tVarDeclInfo nMruby_tsUltrasonicSensor_VMnameVarDeclInfo {
            name            = "VMname";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_nMruby_tsUltrasonicSensor_VMname" );
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo nMruby_tsUltrasonicSensor_bridgeNameVarDeclInfo {
            name            = "bridgeName";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_nMruby_tsUltrasonicSensor_bridgeName" );
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tCelltypeInfo nMruby_tsGyroSensorCelltypeInfo {
            name            = "tsGyroSensor";
            b_singleton     = false;
            b_IDX_is_ID_act = C_EXP( "nMruby_tsGyroSensor__IDX_is_ID_act" );
            b_hasCB         = C_EXP( "nMruby_tsGyroSensor__hasCB" );
            b_hasINIB       = C_EXP( "nMruby_tsGyroSensor__hasINIB" );
            n_cellInLinUnit = C_EXP( "nMruby_tsGyroSensor__NCELLINLINKUNIT" );
            n_cellInSystem  = 4;
            cCallInfo[]     = nMruby_tsGyroSensor_cTECSCallInfo.eCallInfo;
            cAttrInfo[]     = nMruby_tsGyroSensor_VMnameVarDeclInfo.eVarDeclInfo;
            cAttrInfo[]     = nMruby_tsGyroSensor_bridgeNameVarDeclInfo.eVarDeclInfo;
        };
        cell nTECSInfo::tCallInfo nMruby_tsGyroSensor_cTECSCallInfo{
            name            = "cTECS";
            cSignatureInfo  = sGyroSensorSignatureInfo.eSignatureInfo;
            offset            = C_EXP( "nMruby_tsGyroSensor_cTECS__offset" );
            b_optional        = false;
            b_omit            = false;
            b_dynamic         = false;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "nMruby_tsGyroSensor_cTECS__place" );
            b_VMT_useless     = C_EXP( "nMruby_tsGyroSensor_cTECS__b_VMT_useless" );
            b_skelton_useless = C_EXP( "nMruby_tsGyroSensor_cTECS__b_skelton_useless" );
            b_cell_unique     = C_EXP( "nMruby_tsGyroSensor_cTECS__b_cell_unique" );

        };
        cell nTECSInfo::tVarDeclInfo nMruby_tsGyroSensor_VMnameVarDeclInfo {
            name            = "VMname";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_nMruby_tsGyroSensor_VMname" );
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo nMruby_tsGyroSensor_bridgeNameVarDeclInfo {
            name            = "bridgeName";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_nMruby_tsGyroSensor_bridgeName" );
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tCelltypeInfo nMruby_tsColorSensorCelltypeInfo {
            name            = "tsColorSensor";
            b_singleton     = false;
            b_IDX_is_ID_act = C_EXP( "nMruby_tsColorSensor__IDX_is_ID_act" );
            b_hasCB         = C_EXP( "nMruby_tsColorSensor__hasCB" );
            b_hasINIB       = C_EXP( "nMruby_tsColorSensor__hasINIB" );
            n_cellInLinUnit = C_EXP( "nMruby_tsColorSensor__NCELLINLINKUNIT" );
            n_cellInSystem  = 4;
            cCallInfo[]     = nMruby_tsColorSensor_cTECSCallInfo.eCallInfo;
            cAttrInfo[]     = nMruby_tsColorSensor_VMnameVarDeclInfo.eVarDeclInfo;
            cAttrInfo[]     = nMruby_tsColorSensor_bridgeNameVarDeclInfo.eVarDeclInfo;
        };
        cell nTECSInfo::tCallInfo nMruby_tsColorSensor_cTECSCallInfo{
            name            = "cTECS";
            cSignatureInfo  = sColorSensorSignatureInfo.eSignatureInfo;
            offset            = C_EXP( "nMruby_tsColorSensor_cTECS__offset" );
            b_optional        = false;
            b_omit            = false;
            b_dynamic         = false;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "nMruby_tsColorSensor_cTECS__place" );
            b_VMT_useless     = C_EXP( "nMruby_tsColorSensor_cTECS__b_VMT_useless" );
            b_skelton_useless = C_EXP( "nMruby_tsColorSensor_cTECS__b_skelton_useless" );
            b_cell_unique     = C_EXP( "nMruby_tsColorSensor_cTECS__b_cell_unique" );

        };
        cell nTECSInfo::tVarDeclInfo nMruby_tsColorSensor_VMnameVarDeclInfo {
            name            = "VMname";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_nMruby_tsColorSensor_VMname" );
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo nMruby_tsColorSensor_bridgeNameVarDeclInfo {
            name            = "bridgeName";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_nMruby_tsColorSensor_bridgeName" );
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tCelltypeInfo nMruby_tsTouchSensorCelltypeInfo {
            name            = "tsTouchSensor";
            b_singleton     = false;
            b_IDX_is_ID_act = C_EXP( "nMruby_tsTouchSensor__IDX_is_ID_act" );
            b_hasCB         = C_EXP( "nMruby_tsTouchSensor__hasCB" );
            b_hasINIB       = C_EXP( "nMruby_tsTouchSensor__hasINIB" );
            n_cellInLinUnit = C_EXP( "nMruby_tsTouchSensor__NCELLINLINKUNIT" );
            n_cellInSystem  = 4;
            cCallInfo[]     = nMruby_tsTouchSensor_cTECSCallInfo.eCallInfo;
            cAttrInfo[]     = nMruby_tsTouchSensor_VMnameVarDeclInfo.eVarDeclInfo;
            cAttrInfo[]     = nMruby_tsTouchSensor_bridgeNameVarDeclInfo.eVarDeclInfo;
        };
        cell nTECSInfo::tCallInfo nMruby_tsTouchSensor_cTECSCallInfo{
            name            = "cTECS";
            cSignatureInfo  = sTouchSensorSignatureInfo.eSignatureInfo;
            offset            = C_EXP( "nMruby_tsTouchSensor_cTECS__offset" );
            b_optional        = false;
            b_omit            = false;
            b_dynamic         = false;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "nMruby_tsTouchSensor_cTECS__place" );
            b_VMT_useless     = C_EXP( "nMruby_tsTouchSensor_cTECS__b_VMT_useless" );
            b_skelton_useless = C_EXP( "nMruby_tsTouchSensor_cTECS__b_skelton_useless" );
            b_cell_unique     = C_EXP( "nMruby_tsTouchSensor_cTECS__b_cell_unique" );

        };
        cell nTECSInfo::tVarDeclInfo nMruby_tsTouchSensor_VMnameVarDeclInfo {
            name            = "VMname";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_nMruby_tsTouchSensor_VMname" );
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo nMruby_tsTouchSensor_bridgeNameVarDeclInfo {
            name            = "bridgeName";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_nMruby_tsTouchSensor_bridgeName" );
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tCelltypeInfo nMruby_tsBalancerCelltypeInfo {
            name            = "tsBalancer";
            b_singleton     = false;
            b_IDX_is_ID_act = C_EXP( "nMruby_tsBalancer__IDX_is_ID_act" );
            b_hasCB         = C_EXP( "nMruby_tsBalancer__hasCB" );
            b_hasINIB       = C_EXP( "nMruby_tsBalancer__hasINIB" );
            n_cellInLinUnit = C_EXP( "nMruby_tsBalancer__NCELLINLINKUNIT" );
            n_cellInSystem  = 1;
            cCallInfo[]     = nMruby_tsBalancer_cTECSCallInfo.eCallInfo;
            cAttrInfo[]     = nMruby_tsBalancer_VMnameVarDeclInfo.eVarDeclInfo;
            cAttrInfo[]     = nMruby_tsBalancer_bridgeNameVarDeclInfo.eVarDeclInfo;
        };
        cell nTECSInfo::tCallInfo nMruby_tsBalancer_cTECSCallInfo{
            name            = "cTECS";
            cSignatureInfo  = sBalancerSignatureInfo.eSignatureInfo;
            offset            = C_EXP( "nMruby_tsBalancer_cTECS__offset" );
            b_optional        = false;
            b_omit            = false;
            b_dynamic         = false;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "nMruby_tsBalancer_cTECS__place" );
            b_VMT_useless     = C_EXP( "nMruby_tsBalancer_cTECS__b_VMT_useless" );
            b_skelton_useless = C_EXP( "nMruby_tsBalancer_cTECS__b_skelton_useless" );
            b_cell_unique     = C_EXP( "nMruby_tsBalancer_cTECS__b_cell_unique" );

        };
        cell nTECSInfo::tVarDeclInfo nMruby_tsBalancer_VMnameVarDeclInfo {
            name            = "VMname";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_nMruby_tsBalancer_VMname" );
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo nMruby_tsBalancer_bridgeNameVarDeclInfo {
            name            = "bridgeName";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_nMruby_tsBalancer_bridgeName" );
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tCelltypeInfo nMruby_tsSharedMemoryCelltypeInfo {
            name            = "tsSharedMemory";
            b_singleton     = false;
            b_IDX_is_ID_act = C_EXP( "nMruby_tsSharedMemory__IDX_is_ID_act" );
            b_hasCB         = C_EXP( "nMruby_tsSharedMemory__hasCB" );
            b_hasINIB       = C_EXP( "nMruby_tsSharedMemory__hasINIB" );
            n_cellInLinUnit = C_EXP( "nMruby_tsSharedMemory__NCELLINLINKUNIT" );
            n_cellInSystem  = 1;
            cCallInfo[]     = nMruby_tsSharedMemory_cTECSCallInfo.eCallInfo;
            cAttrInfo[]     = nMruby_tsSharedMemory_VMnameVarDeclInfo.eVarDeclInfo;
            cAttrInfo[]     = nMruby_tsSharedMemory_bridgeNameVarDeclInfo.eVarDeclInfo;
        };
        cell nTECSInfo::tCallInfo nMruby_tsSharedMemory_cTECSCallInfo{
            name            = "cTECS";
            cSignatureInfo  = sSharedMemorySignatureInfo.eSignatureInfo;
            offset            = C_EXP( "nMruby_tsSharedMemory_cTECS__offset" );
            b_optional        = false;
            b_omit            = false;
            b_dynamic         = false;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "nMruby_tsSharedMemory_cTECS__place" );
            b_VMT_useless     = C_EXP( "nMruby_tsSharedMemory_cTECS__b_VMT_useless" );
            b_skelton_useless = C_EXP( "nMruby_tsSharedMemory_cTECS__b_skelton_useless" );
            b_cell_unique     = C_EXP( "nMruby_tsSharedMemory_cTECS__b_cell_unique" );

        };
        cell nTECSInfo::tVarDeclInfo nMruby_tsSharedMemory_VMnameVarDeclInfo {
            name            = "VMname";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_nMruby_tsSharedMemory_VMname" );
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVarDeclInfo nMruby_tsSharedMemory_bridgeNameVarDeclInfo {
            name            = "bridgeName";
            sizeIsExpr      = (char_t*)0;
            declType        = DECLTYPE_STMEMBER;
            offset          = C_EXP( "OFFSET_OF_nMruby_tsSharedMemory_bridgeName" );
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };

        /*** ::nPosix namespace information cell ***/
        cell nTECSInfo::tNamespaceInfo nPosixNamespaceInfo{
            name = "nPosix";

            /* SIGNATURE info */
            cSignatureInfo[] = nPosix_sMainSignatureInfo.eSignatureInfo;
        };   /* cell nTECSInfo::tNamespaceInfo nPosixNamespaceInfo */

        /*** nPosix_sMain signature information ****/
        cell nTECSInfo::tSignatureInfo nPosix_sMainSignatureInfo {
            name            = "sMain";
            cFunctionInfo[] = nPosix_sMain_mainFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo nPosix_sMain_mainFunctionInfo {
            name            = "nPosix_sMain_";
            bOneway         = false;
            cParamInfo[]    = nPosix_sMain_main_argcParamInfo.eParamInfo;
            cParamInfo[]    = nPosix_sMain_main_argvParamInfo.eParamInfo;
            cReturnTypeInfo = intTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nPosix_sMain_main_argcParamInfo {
            name            = "argc";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = intTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nPosix_sMain_main_argvParamInfo {
            name            = "argv";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = " $0";
            countIsExpr     = (char_t*)0;
            stringExpr      = "";
            cTypeInfo       = const__char_Ptr__Ptr_TypeInfo.eTypeInfo;
        };

        /*** ::nTECSInfo namespace information cell ***/
        cell nTECSInfo::tNamespaceInfo nTECSInfoNamespaceInfo{
            name = "nTECSInfo";

            /* SIGNATURE info */
            cSignatureInfo[] = nTECSInfo_sTypeInfoSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = nTECSInfo_sVarDeclInfoSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = nTECSInfo_sParamInfoSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = nTECSInfo_sFunctionInfoSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = nTECSInfo_sSignatureInfoSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = nTECSInfo_sCallInfoSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = nTECSInfo_sEntryInfoSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = nTECSInfo_sCelltypeInfoSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = nTECSInfo_sCellInfoSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = nTECSInfo_sNamespaceInfoSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = nTECSInfo_sRegionInfoSignatureInfo.eSignatureInfo;
            cSignatureInfo[] = nTECSInfo_sTECSInfoSignatureInfo.eSignatureInfo;

            /* CELLTYPE info */
            cCelltypeInfo[] = nTECSInfo_tTECSInfoCelltypeInfo.eCelltypeInfo;
        };   /* cell nTECSInfo::tNamespaceInfo nTECSInfoNamespaceInfo */

        /*** nTECSInfo_sTypeInfo signature information ****/
        cell nTECSInfo::tSignatureInfo nTECSInfo_sTypeInfoSignatureInfo {
            name            = "sTypeInfo";
            cFunctionInfo[] = nTECSInfo_sTypeInfo_getNameFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sTypeInfo_getNameLengthFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sTypeInfo_getSizeFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sTypeInfo_getKindFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sTypeInfo_getNTypeFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sTypeInfo_getTypeInfoFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sTypeInfo_getNameFunctionInfo {
            name            = "nTECSInfo_sTypeInfo_";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sTypeInfo_getName_nameParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sTypeInfo_getName_max_lenParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sTypeInfo_getName_nameParamInfo {
            name            = "name";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = " $1";
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sTypeInfo_getName_max_lenParamInfo {
            name            = "max_len";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sTypeInfo_getNameLengthFunctionInfo {
            name            = "nTECSInfo_sTypeInfo_";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sTypeInfo_getNameLength_lenParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sTypeInfo_getNameLength_lenParamInfo {
            name            = "len";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = uint16_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sTypeInfo_getSizeFunctionInfo {
            name            = "nTECSInfo_sTypeInfo_";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sTypeInfo_getSize_sizeParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sTypeInfo_getSize_sizeParamInfo {
            name            = "size";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = uint32_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sTypeInfo_getKindFunctionInfo {
            name            = "nTECSInfo_sTypeInfo_";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sTypeInfo_getKind_kindParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sTypeInfo_getKind_kindParamInfo {
            name            = "kind";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int8_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sTypeInfo_getNTypeFunctionInfo {
            name            = "nTECSInfo_sTypeInfo_";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sTypeInfo_getNType_numParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sTypeInfo_getNType_numParamInfo {
            name            = "num";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int32_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sTypeInfo_getTypeInfoFunctionInfo {
            name            = "nTECSInfo_sTypeInfo_";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sTypeInfo_getTypeInfo_ithParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sTypeInfo_getTypeInfo_descParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sTypeInfo_getTypeInfo_ithParamInfo {
            name            = "ith";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sTypeInfo_getTypeInfo_descParamInfo {
            name            = "desc";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = Descriptor_of_nTECSInfo_sTypeInfo_Ptr_TypeInfo.eTypeInfo;
        };

        /*** nTECSInfo_sVarDeclInfo signature information ****/
        cell nTECSInfo::tSignatureInfo nTECSInfo_sVarDeclInfoSignatureInfo {
            name            = "sVarDeclInfo";
            cFunctionInfo[] = nTECSInfo_sVarDeclInfo_getNameFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sVarDeclInfo_getOffsetFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sVarDeclInfo_getTypeInfoFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sVarDeclInfo_getSizeIsExprFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sVarDeclInfo_getSizeIsFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sVarDeclInfo_getNameFunctionInfo {
            name            = "nTECSInfo_sVarDeclInfo_";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sVarDeclInfo_getName_nameParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sVarDeclInfo_getName_max_lenParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sVarDeclInfo_getName_nameParamInfo {
            name            = "name";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = " $1";
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sVarDeclInfo_getName_max_lenParamInfo {
            name            = "max_len";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sVarDeclInfo_getOffsetFunctionInfo {
            name            = "nTECSInfo_sVarDeclInfo_";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sVarDeclInfo_getOffset_offsetParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sVarDeclInfo_getOffset_offsetParamInfo {
            name            = "offset";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = uint32_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sVarDeclInfo_getTypeInfoFunctionInfo {
            name            = "nTECSInfo_sVarDeclInfo_";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sVarDeclInfo_getTypeInfo_descParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sVarDeclInfo_getTypeInfo_descParamInfo {
            name            = "desc";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = Descriptor_of_nTECSInfo_sTypeInfo_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sVarDeclInfo_getSizeIsExprFunctionInfo {
            name            = "nTECSInfo_sVarDeclInfo_";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sVarDeclInfo_getSizeIsExpr_expr_strParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sVarDeclInfo_getSizeIsExpr_max_lenParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sVarDeclInfo_getSizeIsExpr_expr_strParamInfo {
            name            = "expr_str";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = " $1";
            cTypeInfo       = uint32_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sVarDeclInfo_getSizeIsExpr_max_lenParamInfo {
            name            = "max_len";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sVarDeclInfo_getSizeIsFunctionInfo {
            name            = "nTECSInfo_sVarDeclInfo_";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sVarDeclInfo_getSizeIs_sizeParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sVarDeclInfo_getSizeIs_p_cbParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sVarDeclInfo_getSizeIs_sizeParamInfo {
            name            = "size";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = uint32_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sVarDeclInfo_getSizeIs_p_cbParamInfo {
            name            = "p_cb";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = const__void_Ptr_TypeInfo.eTypeInfo;
        };

        /*** nTECSInfo_sParamInfo signature information ****/
        cell nTECSInfo::tSignatureInfo nTECSInfo_sParamInfoSignatureInfo {
            name            = "sParamInfo";
            cFunctionInfo[] = nTECSInfo_sParamInfo_getNameFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sParamInfo_getNameLengthFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sParamInfo_getTypeInfoFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sParamInfo_getNameFunctionInfo {
            name            = "nTECSInfo_sParamInfo_";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sParamInfo_getName_nameParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sParamInfo_getName_max_lenParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sParamInfo_getName_nameParamInfo {
            name            = "name";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = " $1";
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sParamInfo_getName_max_lenParamInfo {
            name            = "max_len";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sParamInfo_getNameLengthFunctionInfo {
            name            = "nTECSInfo_sParamInfo_";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sParamInfo_getNameLength_lenParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sParamInfo_getNameLength_lenParamInfo {
            name            = "len";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = uint16_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sParamInfo_getTypeInfoFunctionInfo {
            name            = "nTECSInfo_sParamInfo_";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sParamInfo_getTypeInfo_descParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sParamInfo_getTypeInfo_descParamInfo {
            name            = "desc";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = Descriptor_of_nTECSInfo_sTypeInfo_Ptr_TypeInfo.eTypeInfo;
        };

        /*** nTECSInfo_sFunctionInfo signature information ****/
        cell nTECSInfo::tSignatureInfo nTECSInfo_sFunctionInfoSignatureInfo {
            name            = "sFunctionInfo";
            cFunctionInfo[] = nTECSInfo_sFunctionInfo_getNameFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sFunctionInfo_getNameLengthFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sFunctionInfo_getReturnTypeInfoFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sFunctionInfo_getNParamFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sFunctionInfo_getParamInfoFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sFunctionInfo_getNameFunctionInfo {
            name            = "nTECSInfo_sFunctionInfo_";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sFunctionInfo_getName_nameParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sFunctionInfo_getName_max_lenParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sFunctionInfo_getName_nameParamInfo {
            name            = "name";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = " $1";
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sFunctionInfo_getName_max_lenParamInfo {
            name            = "max_len";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sFunctionInfo_getNameLengthFunctionInfo {
            name            = "nTECSInfo_sFunctionInfo_";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sFunctionInfo_getNameLength_lenParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sFunctionInfo_getNameLength_lenParamInfo {
            name            = "len";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = uint16_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sFunctionInfo_getReturnTypeInfoFunctionInfo {
            name            = "nTECSInfo_sFunctionInfo_";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sFunctionInfo_getReturnTypeInfo_descParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sFunctionInfo_getReturnTypeInfo_descParamInfo {
            name            = "desc";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = Descriptor_of_nTECSInfo_sTypeInfo_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sFunctionInfo_getNParamFunctionInfo {
            name            = "nTECSInfo_sFunctionInfo_";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sFunctionInfo_getNParam_numParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sFunctionInfo_getNParam_numParamInfo {
            name            = "num";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int32_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sFunctionInfo_getParamInfoFunctionInfo {
            name            = "nTECSInfo_sFunctionInfo_";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sFunctionInfo_getParamInfo_ithParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sFunctionInfo_getParamInfo_paramParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sFunctionInfo_getParamInfo_ithParamInfo {
            name            = "ith";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sFunctionInfo_getParamInfo_paramParamInfo {
            name            = "param";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = Descriptor_of_nTECSInfo_sParamInfo_Ptr_TypeInfo.eTypeInfo;
        };

        /*** nTECSInfo_sSignatureInfo signature information ****/
        cell nTECSInfo::tSignatureInfo nTECSInfo_sSignatureInfoSignatureInfo {
            name            = "sSignatureInfo";
            cFunctionInfo[] = nTECSInfo_sSignatureInfo_getNameFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sSignatureInfo_getNameLengthFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sSignatureInfo_getNFunctionFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sSignatureInfo_getFunctionInfoFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sSignatureInfo_getNameFunctionInfo {
            name            = "nTECSInfo_sSignatureInfo_";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sSignatureInfo_getName_nameParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sSignatureInfo_getName_max_lenParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sSignatureInfo_getName_nameParamInfo {
            name            = "name";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = " $1";
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sSignatureInfo_getName_max_lenParamInfo {
            name            = "max_len";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sSignatureInfo_getNameLengthFunctionInfo {
            name            = "nTECSInfo_sSignatureInfo_";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sSignatureInfo_getNameLength_lenParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sSignatureInfo_getNameLength_lenParamInfo {
            name            = "len";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = uint16_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sSignatureInfo_getNFunctionFunctionInfo {
            name            = "nTECSInfo_sSignatureInfo_";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sSignatureInfo_getNFunction_numParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sSignatureInfo_getNFunction_numParamInfo {
            name            = "num";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int32_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sSignatureInfo_getFunctionInfoFunctionInfo {
            name            = "nTECSInfo_sSignatureInfo_";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sSignatureInfo_getFunctionInfo_ithParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sSignatureInfo_getFunctionInfo_descParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sSignatureInfo_getFunctionInfo_ithParamInfo {
            name            = "ith";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sSignatureInfo_getFunctionInfo_descParamInfo {
            name            = "desc";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = Descriptor_of_nTECSInfo_sFunctionInfo_Ptr_TypeInfo.eTypeInfo;
        };

        /*** nTECSInfo_sCallInfo signature information ****/
        cell nTECSInfo::tSignatureInfo nTECSInfo_sCallInfoSignatureInfo {
            name            = "sCallInfo";
            cFunctionInfo[] = nTECSInfo_sCallInfo_getNameFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sCallInfo_getNameLengthFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sCallInfo_getSignatureInfoFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sCallInfo_getArraySizeFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sCallInfo_getSpecifierInfoFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sCallInfo_getInternalInfoFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sCallInfo_getLocationInfoFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sCallInfo_getOptimizeInfoFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sCallInfo_getNameFunctionInfo {
            name            = "nTECSInfo_sCallInfo_";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sCallInfo_getName_nameParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sCallInfo_getName_max_lenParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sCallInfo_getName_nameParamInfo {
            name            = "name";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = " $1";
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sCallInfo_getName_max_lenParamInfo {
            name            = "max_len";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sCallInfo_getNameLengthFunctionInfo {
            name            = "nTECSInfo_sCallInfo_";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sCallInfo_getNameLength_lenParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sCallInfo_getNameLength_lenParamInfo {
            name            = "len";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = uint16_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sCallInfo_getSignatureInfoFunctionInfo {
            name            = "nTECSInfo_sCallInfo_";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sCallInfo_getSignatureInfo_descParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sCallInfo_getSignatureInfo_descParamInfo {
            name            = "desc";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = Descriptor_of_nTECSInfo_sSignatureInfo_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sCallInfo_getArraySizeFunctionInfo {
            name            = "nTECSInfo_sCallInfo_";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sCallInfo_getArraySize_array_sizeParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sCallInfo_getArraySize_array_sizeParamInfo {
            name            = "array_size";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = uint32_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sCallInfo_getSpecifierInfoFunctionInfo {
            name            = "nTECSInfo_sCallInfo_";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sCallInfo_getSpecifierInfo_b_optionalParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sCallInfo_getSpecifierInfo_b_dynamicParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sCallInfo_getSpecifierInfo_b_ref_descParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sCallInfo_getSpecifierInfo_b_omitParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sCallInfo_getSpecifierInfo_b_optionalParamInfo {
            name            = "b_optional";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = bool_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sCallInfo_getSpecifierInfo_b_dynamicParamInfo {
            name            = "b_dynamic";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = bool_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sCallInfo_getSpecifierInfo_b_ref_descParamInfo {
            name            = "b_ref_desc";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = bool_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sCallInfo_getSpecifierInfo_b_omitParamInfo {
            name            = "b_omit";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = bool_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sCallInfo_getInternalInfoFunctionInfo {
            name            = "nTECSInfo_sCallInfo_";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sCallInfo_getInternalInfo_b_allocator_portParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sCallInfo_getInternalInfo_b_require_portParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sCallInfo_getInternalInfo_b_allocator_portParamInfo {
            name            = "b_allocator_port";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = bool_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sCallInfo_getInternalInfo_b_require_portParamInfo {
            name            = "b_require_port";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = bool_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sCallInfo_getLocationInfoFunctionInfo {
            name            = "nTECSInfo_sCallInfo_";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sCallInfo_getLocationInfo_offsetParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sCallInfo_getLocationInfo_placeParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sCallInfo_getLocationInfo_offsetParamInfo {
            name            = "offset";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = uint32_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sCallInfo_getLocationInfo_placeParamInfo {
            name            = "place";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = uint8_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sCallInfo_getOptimizeInfoFunctionInfo {
            name            = "nTECSInfo_sCallInfo_";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sCallInfo_getOptimizeInfo_b_VMT_uselessParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sCallInfo_getOptimizeInfo_b_skelton_uselessParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sCallInfo_getOptimizeInfo_b_cell_uniqueParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sCallInfo_getOptimizeInfo_b_VMT_uselessParamInfo {
            name            = "b_VMT_useless";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = bool_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sCallInfo_getOptimizeInfo_b_skelton_uselessParamInfo {
            name            = "b_skelton_useless";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = bool_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sCallInfo_getOptimizeInfo_b_cell_uniqueParamInfo {
            name            = "b_cell_unique";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = bool_t_Ptr_TypeInfo.eTypeInfo;
        };

        /*** nTECSInfo_sEntryInfo signature information ****/
        cell nTECSInfo::tSignatureInfo nTECSInfo_sEntryInfoSignatureInfo {
            name            = "sEntryInfo";
            cFunctionInfo[] = nTECSInfo_sEntryInfo_getNameFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sEntryInfo_getNameLengthFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sEntryInfo_getSignatureInfoFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sEntryInfo_getArraySizeFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sEntryInfo_isInlineFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sEntryInfo_getNameFunctionInfo {
            name            = "nTECSInfo_sEntryInfo_";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sEntryInfo_getName_nameParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sEntryInfo_getName_max_lenParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sEntryInfo_getName_nameParamInfo {
            name            = "name";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = " $1";
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sEntryInfo_getName_max_lenParamInfo {
            name            = "max_len";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sEntryInfo_getNameLengthFunctionInfo {
            name            = "nTECSInfo_sEntryInfo_";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sEntryInfo_getNameLength_lenParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sEntryInfo_getNameLength_lenParamInfo {
            name            = "len";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = uint16_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sEntryInfo_getSignatureInfoFunctionInfo {
            name            = "nTECSInfo_sEntryInfo_";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sEntryInfo_getSignatureInfo_descParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sEntryInfo_getSignatureInfo_descParamInfo {
            name            = "desc";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = Descriptor_of_nTECSInfo_sSignatureInfo_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sEntryInfo_getArraySizeFunctionInfo {
            name            = "nTECSInfo_sEntryInfo_";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sEntryInfo_getArraySize_array_sizeParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sEntryInfo_getArraySize_array_sizeParamInfo {
            name            = "array_size";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = uint32_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sEntryInfo_isInlineFunctionInfo {
            name            = "nTECSInfo_sEntryInfo_";
            bOneway         = false;
            cReturnTypeInfo = bool_tTypeInfo.eTypeInfo;
        };

        /*** nTECSInfo_sCelltypeInfo signature information ****/
        cell nTECSInfo::tSignatureInfo nTECSInfo_sCelltypeInfoSignatureInfo {
            name            = "sCelltypeInfo";
            cFunctionInfo[] = nTECSInfo_sCelltypeInfo_getNameFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sCelltypeInfo_getNameLengthFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sCelltypeInfo_getNAttrFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sCelltypeInfo_getAttrInfoFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sCelltypeInfo_getNVarFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sCelltypeInfo_getVarInfoFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sCelltypeInfo_getNCallFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sCelltypeInfo_getCallInfoFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sCelltypeInfo_getNEntryFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sCelltypeInfo_getEntryInfoFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sCelltypeInfo_isSingletonFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sCelltypeInfo_isIDX_is_IDFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sCelltypeInfo_hasCBFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sCelltypeInfo_hasINIBFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sCelltypeInfo_getNameFunctionInfo {
            name            = "nTECSInfo_sCelltypeInfo_";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sCelltypeInfo_getName_nameParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sCelltypeInfo_getName_max_lenParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sCelltypeInfo_getName_nameParamInfo {
            name            = "name";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = " $1";
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sCelltypeInfo_getName_max_lenParamInfo {
            name            = "max_len";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sCelltypeInfo_getNameLengthFunctionInfo {
            name            = "nTECSInfo_sCelltypeInfo_";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sCelltypeInfo_getNameLength_lenParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sCelltypeInfo_getNameLength_lenParamInfo {
            name            = "len";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = uint16_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sCelltypeInfo_getNAttrFunctionInfo {
            name            = "nTECSInfo_sCelltypeInfo_";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sCelltypeInfo_getNAttr_nAttrParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sCelltypeInfo_getNAttr_nAttrParamInfo {
            name            = "nAttr";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int32_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sCelltypeInfo_getAttrInfoFunctionInfo {
            name            = "nTECSInfo_sCelltypeInfo_";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sCelltypeInfo_getAttrInfo_ithParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sCelltypeInfo_getAttrInfo_descParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sCelltypeInfo_getAttrInfo_ithParamInfo {
            name            = "ith";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sCelltypeInfo_getAttrInfo_descParamInfo {
            name            = "desc";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = Descriptor_of_nTECSInfo_sVarDeclInfo_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sCelltypeInfo_getNVarFunctionInfo {
            name            = "nTECSInfo_sCelltypeInfo_";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sCelltypeInfo_getNVar_nVarParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sCelltypeInfo_getNVar_nVarParamInfo {
            name            = "nVar";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int32_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sCelltypeInfo_getVarInfoFunctionInfo {
            name            = "nTECSInfo_sCelltypeInfo_";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sCelltypeInfo_getVarInfo_ithParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sCelltypeInfo_getVarInfo_descParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sCelltypeInfo_getVarInfo_ithParamInfo {
            name            = "ith";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sCelltypeInfo_getVarInfo_descParamInfo {
            name            = "desc";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = Descriptor_of_nTECSInfo_sVarDeclInfo_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sCelltypeInfo_getNCallFunctionInfo {
            name            = "nTECSInfo_sCelltypeInfo_";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sCelltypeInfo_getNCall_nCallParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sCelltypeInfo_getNCall_nCallParamInfo {
            name            = "nCall";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int32_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sCelltypeInfo_getCallInfoFunctionInfo {
            name            = "nTECSInfo_sCelltypeInfo_";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sCelltypeInfo_getCallInfo_ithParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sCelltypeInfo_getCallInfo_descParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sCelltypeInfo_getCallInfo_ithParamInfo {
            name            = "ith";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sCelltypeInfo_getCallInfo_descParamInfo {
            name            = "desc";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = Descriptor_of_nTECSInfo_sCallInfo_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sCelltypeInfo_getNEntryFunctionInfo {
            name            = "nTECSInfo_sCelltypeInfo_";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sCelltypeInfo_getNEntry_nEntryParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sCelltypeInfo_getNEntry_nEntryParamInfo {
            name            = "nEntry";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int32_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sCelltypeInfo_getEntryInfoFunctionInfo {
            name            = "nTECSInfo_sCelltypeInfo_";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sCelltypeInfo_getEntryInfo_ithParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sCelltypeInfo_getEntryInfo_descParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sCelltypeInfo_getEntryInfo_ithParamInfo {
            name            = "ith";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sCelltypeInfo_getEntryInfo_descParamInfo {
            name            = "desc";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = Descriptor_of_nTECSInfo_sEntryInfo_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sCelltypeInfo_isSingletonFunctionInfo {
            name            = "nTECSInfo_sCelltypeInfo_";
            bOneway         = false;
            cReturnTypeInfo = bool_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sCelltypeInfo_isIDX_is_IDFunctionInfo {
            name            = "nTECSInfo_sCelltypeInfo_";
            bOneway         = false;
            cReturnTypeInfo = bool_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sCelltypeInfo_hasCBFunctionInfo {
            name            = "nTECSInfo_sCelltypeInfo_";
            bOneway         = false;
            cReturnTypeInfo = bool_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sCelltypeInfo_hasINIBFunctionInfo {
            name            = "nTECSInfo_sCelltypeInfo_";
            bOneway         = false;
            cReturnTypeInfo = bool_tTypeInfo.eTypeInfo;
        };

        /*** nTECSInfo_sCellInfo signature information ****/
        cell nTECSInfo::tSignatureInfo nTECSInfo_sCellInfoSignatureInfo {
            name            = "sCellInfo";
            cFunctionInfo[] = nTECSInfo_sCellInfo_getNameFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sCellInfo_getCelltypeInfoFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sCellInfo_getCBPFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sCellInfo_getINIBPFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sCellInfo_getNameFunctionInfo {
            name            = "nTECSInfo_sCellInfo_";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sCellInfo_getName_nameParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sCellInfo_getName_max_lenParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sCellInfo_getName_nameParamInfo {
            name            = "name";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = " $1";
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sCellInfo_getName_max_lenParamInfo {
            name            = "max_len";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sCellInfo_getCelltypeInfoFunctionInfo {
            name            = "nTECSInfo_sCellInfo_";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sCellInfo_getCelltypeInfo_descParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sCellInfo_getCelltypeInfo_descParamInfo {
            name            = "desc";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = Descriptor_of_nTECSInfo_sCelltypeInfo_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sCellInfo_getCBPFunctionInfo {
            name            = "nTECSInfo_sCellInfo_";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sCellInfo_getCBP_cbpParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sCellInfo_getCBP_cbpParamInfo {
            name            = "cbp";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = void_Ptr__Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sCellInfo_getINIBPFunctionInfo {
            name            = "nTECSInfo_sCellInfo_";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sCellInfo_getINIBP_inibpParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sCellInfo_getINIBP_inibpParamInfo {
            name            = "inibp";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = void_Ptr__Ptr_TypeInfo.eTypeInfo;
        };

        /*** nTECSInfo_sNamespaceInfo signature information ****/
        cell nTECSInfo::tSignatureInfo nTECSInfo_sNamespaceInfoSignatureInfo {
            name            = "sNamespaceInfo";
            cFunctionInfo[] = nTECSInfo_sNamespaceInfo_getNameFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sNamespaceInfo_getNameLengthFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sNamespaceInfo_getNNamespaceFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sNamespaceInfo_getNamespaceInfoFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sNamespaceInfo_getNSignatureFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sNamespaceInfo_getSignatureInfoFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sNamespaceInfo_getNCelltypeFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sNamespaceInfo_getCelltypeInfoFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sNamespaceInfo_getNameFunctionInfo {
            name            = "nTECSInfo_sNamespaceInfo_";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sNamespaceInfo_getName_nameParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sNamespaceInfo_getName_max_lenParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sNamespaceInfo_getName_nameParamInfo {
            name            = "name";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = " $1";
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sNamespaceInfo_getName_max_lenParamInfo {
            name            = "max_len";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sNamespaceInfo_getNameLengthFunctionInfo {
            name            = "nTECSInfo_sNamespaceInfo_";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sNamespaceInfo_getNameLength_lenParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sNamespaceInfo_getNameLength_lenParamInfo {
            name            = "len";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = uint16_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sNamespaceInfo_getNNamespaceFunctionInfo {
            name            = "nTECSInfo_sNamespaceInfo_";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sNamespaceInfo_getNNamespace_numParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sNamespaceInfo_getNNamespace_numParamInfo {
            name            = "num";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int32_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sNamespaceInfo_getNamespaceInfoFunctionInfo {
            name            = "nTECSInfo_sNamespaceInfo_";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sNamespaceInfo_getNamespaceInfo_ithParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sNamespaceInfo_getNamespaceInfo_desParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sNamespaceInfo_getNamespaceInfo_ithParamInfo {
            name            = "ith";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sNamespaceInfo_getNamespaceInfo_desParamInfo {
            name            = "des";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = Descriptor_of_nTECSInfo_sNamespaceInfo_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sNamespaceInfo_getNSignatureFunctionInfo {
            name            = "nTECSInfo_sNamespaceInfo_";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sNamespaceInfo_getNSignature_numParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sNamespaceInfo_getNSignature_numParamInfo {
            name            = "num";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int32_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sNamespaceInfo_getSignatureInfoFunctionInfo {
            name            = "nTECSInfo_sNamespaceInfo_";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sNamespaceInfo_getSignatureInfo_ithParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sNamespaceInfo_getSignatureInfo_desParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sNamespaceInfo_getSignatureInfo_ithParamInfo {
            name            = "ith";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sNamespaceInfo_getSignatureInfo_desParamInfo {
            name            = "des";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = Descriptor_of_nTECSInfo_sSignatureInfo_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sNamespaceInfo_getNCelltypeFunctionInfo {
            name            = "nTECSInfo_sNamespaceInfo_";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sNamespaceInfo_getNCelltype_numParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sNamespaceInfo_getNCelltype_numParamInfo {
            name            = "num";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int32_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sNamespaceInfo_getCelltypeInfoFunctionInfo {
            name            = "nTECSInfo_sNamespaceInfo_";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sNamespaceInfo_getCelltypeInfo_ithParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sNamespaceInfo_getCelltypeInfo_desParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sNamespaceInfo_getCelltypeInfo_ithParamInfo {
            name            = "ith";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sNamespaceInfo_getCelltypeInfo_desParamInfo {
            name            = "des";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = Descriptor_of_nTECSInfo_sCelltypeInfo_Ptr_TypeInfo.eTypeInfo;
        };

        /*** nTECSInfo_sRegionInfo signature information ****/
        cell nTECSInfo::tSignatureInfo nTECSInfo_sRegionInfoSignatureInfo {
            name            = "sRegionInfo";
            cFunctionInfo[] = nTECSInfo_sRegionInfo_getNameFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sRegionInfo_getNameLengthFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sRegionInfo_getNCellFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sRegionInfo_getCellInfoFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sRegionInfo_getNRegionFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sRegionInfo_getRegionInfoFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sRegionInfo_getNameFunctionInfo {
            name            = "nTECSInfo_sRegionInfo_";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sRegionInfo_getName_nameParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sRegionInfo_getName_max_lenParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sRegionInfo_getName_nameParamInfo {
            name            = "name";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = " $1";
            cTypeInfo       = char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sRegionInfo_getName_max_lenParamInfo {
            name            = "max_len";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sRegionInfo_getNameLengthFunctionInfo {
            name            = "nTECSInfo_sRegionInfo_";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sRegionInfo_getNameLength_lenParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sRegionInfo_getNameLength_lenParamInfo {
            name            = "len";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = uint16_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sRegionInfo_getNCellFunctionInfo {
            name            = "nTECSInfo_sRegionInfo_";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sRegionInfo_getNCell_numParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sRegionInfo_getNCell_numParamInfo {
            name            = "num";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int32_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sRegionInfo_getCellInfoFunctionInfo {
            name            = "nTECSInfo_sRegionInfo_";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sRegionInfo_getCellInfo_ithParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sRegionInfo_getCellInfo_desParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sRegionInfo_getCellInfo_ithParamInfo {
            name            = "ith";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sRegionInfo_getCellInfo_desParamInfo {
            name            = "des";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = Descriptor_of_nTECSInfo_sCellInfo_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sRegionInfo_getNRegionFunctionInfo {
            name            = "nTECSInfo_sRegionInfo_";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sRegionInfo_getNRegion_numParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sRegionInfo_getNRegion_numParamInfo {
            name            = "num";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int32_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sRegionInfo_getRegionInfoFunctionInfo {
            name            = "nTECSInfo_sRegionInfo_";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sRegionInfo_getRegionInfo_ithParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sRegionInfo_getRegionInfo_desParamInfo.eParamInfo;
            cReturnTypeInfo = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sRegionInfo_getRegionInfo_ithParamInfo {
            name            = "ith";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sRegionInfo_getRegionInfo_desParamInfo {
            name            = "des";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = Descriptor_of_nTECSInfo_sRegionInfo_Ptr_TypeInfo.eTypeInfo;
        };

        /*** nTECSInfo_sTECSInfo signature information ****/
        cell nTECSInfo::tSignatureInfo nTECSInfo_sTECSInfoSignatureInfo {
            name            = "sTECSInfo";
            cFunctionInfo[] = nTECSInfo_sTECSInfo_findNamespaceFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sTECSInfo_findRegionFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sTECSInfo_findSignatureFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sTECSInfo_findCelltypeFunctionInfo.eFunctionInfo;
            cFunctionInfo[] = nTECSInfo_sTECSInfo_findCellFunctionInfo.eFunctionInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sTECSInfo_findNamespaceFunctionInfo {
            name            = "nTECSInfo_sTECSInfo_";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sTECSInfo_findNamespace_namespace_pathParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sTECSInfo_findNamespace_NSdescParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sTECSInfo_findNamespace_namespace_pathParamInfo {
            name            = "namespace_path";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = "";
            cTypeInfo       = const__char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sTECSInfo_findNamespace_NSdescParamInfo {
            name            = "NSdesc";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = Descriptor_of_nTECSInfo_sNamespaceInfo_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sTECSInfo_findRegionFunctionInfo {
            name            = "nTECSInfo_sTECSInfo_";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sTECSInfo_findRegion_namespace_pathParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sTECSInfo_findRegion_RGNdescParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sTECSInfo_findRegion_namespace_pathParamInfo {
            name            = "namespace_path";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = "";
            cTypeInfo       = const__char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sTECSInfo_findRegion_RGNdescParamInfo {
            name            = "RGNdesc";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = Descriptor_of_nTECSInfo_sRegionInfo_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sTECSInfo_findSignatureFunctionInfo {
            name            = "nTECSInfo_sTECSInfo_";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sTECSInfo_findSignature_namespace_pathParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sTECSInfo_findSignature_SIGdescParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sTECSInfo_findSignature_namespace_pathParamInfo {
            name            = "namespace_path";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = "";
            cTypeInfo       = const__char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sTECSInfo_findSignature_SIGdescParamInfo {
            name            = "SIGdesc";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = Descriptor_of_nTECSInfo_sSignatureInfo_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sTECSInfo_findCelltypeFunctionInfo {
            name            = "nTECSInfo_sTECSInfo_";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sTECSInfo_findCelltype_namespace_pathParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sTECSInfo_findCelltype_CTdescParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sTECSInfo_findCelltype_namespace_pathParamInfo {
            name            = "namespace_path";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = "";
            cTypeInfo       = const__char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sTECSInfo_findCelltype_CTdescParamInfo {
            name            = "CTdesc";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = Descriptor_of_nTECSInfo_sCelltypeInfo_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tFunctionInfo nTECSInfo_sTECSInfo_findCellFunctionInfo {
            name            = "nTECSInfo_sTECSInfo_";
            bOneway         = false;
            cParamInfo[]    = nTECSInfo_sTECSInfo_findCell_namespace_pathParamInfo.eParamInfo;
            cParamInfo[]    = nTECSInfo_sTECSInfo_findCell_CELLdescParamInfo.eParamInfo;
            cReturnTypeInfo = ERTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sTECSInfo_findCell_namespace_pathParamInfo {
            name            = "namespace_path";
            dir             = PARAM_DIR_IN;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = "";
            cTypeInfo       = const__char_t_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tParamInfo nTECSInfo_sTECSInfo_findCell_CELLdescParamInfo {
            name            = "CELLdesc";
            dir             = PARAM_DIR_OUT;
            sizeIsExpr      = (char_t*)0;
            countIsExpr     = (char_t*)0;
            stringExpr      = (char_t*)0;
            cTypeInfo       = Descriptor_of_nTECSInfo_sCellInfo_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tCelltypeInfo nTECSInfo_tTECSInfoCelltypeInfo {
            name            = "tTECSInfo";
            b_singleton     = true;
            b_IDX_is_ID_act = C_EXP( "nTECSInfo_tTECSInfo__IDX_is_ID_act" );
            b_hasCB         = C_EXP( "nTECSInfo_tTECSInfo__hasCB" );
            b_hasINIB       = C_EXP( "nTECSInfo_tTECSInfo__hasINIB" );
            n_cellInLinUnit = C_EXP( "nTECSInfo_tTECSInfo__NCELLINLINKUNIT" );
            n_cellInSystem  = 1;
            cEntryInfo[]    = nTECSInfo_tTECSInfo_eTECSInfoEntryInfo.eEntryInfo;
            cCallInfo[]     = nTECSInfo_tTECSInfo_cTECSInfoCallInfo.eCallInfo;
        };
        cell nTECSInfo::tEntryInfo nTECSInfo_tTECSInfo_eTECSInfoEntryInfo{
            name            = "eTECSInfo";
            cSignatureInfo  = nTECSInfo_sTECSInfoSignatureInfo.eSignatureInfo;
            b_inline        = true;
        };
        cell nTECSInfo::tCallInfo nTECSInfo_tTECSInfo_cTECSInfoCallInfo{
            name            = "cTECSInfo";
            cSignatureInfo  = nTECSInfo_sTECSInfoSignatureInfo.eSignatureInfo;
            offset            = C_EXP( "nTECSInfo_tTECSInfo_cTECSInfo__offset" );
            b_optional        = false;
            b_omit            = false;
            b_dynamic         = false;
            b_ref_desc        = false;
            b_allocator_port  = false;
            b_require_port    = false;
            place             = C_EXP( "nTECSInfo_tTECSInfo_cTECSInfo__place" );
            b_VMT_useless     = C_EXP( "nTECSInfo_tTECSInfo_cTECSInfo__b_VMT_useless" );
            b_skelton_useless = C_EXP( "nTECSInfo_tTECSInfo_cTECSInfo__b_skelton_useless" );
            b_cell_unique     = C_EXP( "nTECSInfo_tTECSInfo_cTECSInfo__b_cell_unique" );

        };

        /*** :: region information cell ***/
        cell nTECSInfo::tRegionInfo _LinkRootRegionInfo{
            name = "::";
        };

        /*** ::rDomainEV3 region information cell ***/
        cell nTECSInfo::tRegionInfo rDomainEV3RegionInfo{
            name = "rDomainEV3";
        };

        /*** ::rDomainEV3::rTECSInfo region information cell ***/
        cell nTECSInfo::tRegionInfo rDomainEV3_rTECSInfoRegionInfo{
            name = "rTECSInfo";
        };

        /*** TYPE information cell ***/
        cell nTECSInfo::tVoidTypeInfo voidTypeInfo{
            name           = "void";
            typeKind       = TECSTypeKind_VoidType;
            bitSize        = C_EXP( "sizeof(void)" );
            b_const        = false;
            b_volatile     = false;
        };
        cell nTECSInfo::tDefinedTypeInfo TEXPTNTypeInfo{
            name           = "TEXPTN";
            typeKind       = TECSTypeKind_DefinedType;
            bitSize        = C_EXP( "sizeof(TEXPTN)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = uint_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo uint_tTypeInfo{
            name           = "uint_t";
            typeKind       = TECSTypeKind_DefinedType;
            bitSize        = C_EXP( "sizeof(uint_t)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = unsigned__intTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tIntTypeInfo unsigned__intTypeInfo{
            name           = "unsigned int";
            typeKind       = TECSTypeKind_IntType;
            bitSize        = -3;
            b_const        = false;
            b_volatile     = false;
        };
        cell nTECSInfo::tDefinedTypeInfo ERTypeInfo{
            name           = "ER";
            typeKind       = TECSTypeKind_DefinedType;
            bitSize        = C_EXP( "sizeof(ER)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = int_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo int_tTypeInfo{
            name           = "int_t";
            typeKind       = TECSTypeKind_DefinedType;
            bitSize        = C_EXP( "sizeof(int_t)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = signed__intTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tIntTypeInfo signed__intTypeInfo{
            name           = "signed int";
            typeKind       = TECSTypeKind_IntType;
            bitSize        = -3;
            b_const        = false;
            b_volatile     = false;
        };
        cell nTECSInfo::tDefinedTypeInfo ER_UINTTypeInfo{
            name           = "ER_UINT";
            typeKind       = TECSTypeKind_DefinedType;
            bitSize        = C_EXP( "sizeof(ER_UINT)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = int_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo PRITypeInfo{
            name           = "PRI";
            typeKind       = TECSTypeKind_DefinedType;
            bitSize        = C_EXP( "sizeof(PRI)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = int_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tPtrTypeInfo PRI_Ptr_TypeInfo{
            name           = "PRI*";
            typeKind       = TECSTypeKind_PtrType;
            bitSize        = C_EXP( "sizeof(PRI*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = PRITypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tPtrTypeInfo T_RTSK_Ptr_TypeInfo{
            name           = "T_RTSK*";
            typeKind       = TECSTypeKind_PtrType;
            bitSize        = C_EXP( "sizeof(T_RTSK*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = T_RTSKTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo T_RTSKTypeInfo{
            name           = "T_RTSK";
            typeKind       = TECSTypeKind_DefinedType;
            bitSize        = C_EXP( "sizeof(T_RTSK)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = struct__t_rtskTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tStructTypeInfo struct__t_rtskTypeInfo{
            name           = "struct t_rtsk";
            typeKind       = TECSTypeKind_StructType;
            bitSize        = C_EXP( "sizeof(struct t_rtsk)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo[]    = STATTypeInfo.eTypeInfo;
            cTypeInfo[]    = PRITypeInfo.eTypeInfo;
            cTypeInfo[]    = PRITypeInfo.eTypeInfo;
            cTypeInfo[]    = STATTypeInfo.eTypeInfo;
            cTypeInfo[]    = IDTypeInfo.eTypeInfo;
            cTypeInfo[]    = TMOTypeInfo.eTypeInfo;
            cTypeInfo[]    = uint_tTypeInfo.eTypeInfo;
            cTypeInfo[]    = uint_tTypeInfo.eTypeInfo;
            cTypeInfo[]    = bool_tTypeInfo.eTypeInfo;
            cTypeInfo[]    = bool_tTypeInfo.eTypeInfo;
            cTypeInfo[]    = uint_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo STATTypeInfo{
            name           = "STAT";
            typeKind       = TECSTypeKind_DefinedType;
            bitSize        = C_EXP( "sizeof(STAT)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = uint_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo IDTypeInfo{
            name           = "ID";
            typeKind       = TECSTypeKind_DefinedType;
            bitSize        = C_EXP( "sizeof(ID)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = int_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo TMOTypeInfo{
            name           = "TMO";
            typeKind       = TECSTypeKind_DefinedType;
            bitSize        = C_EXP( "sizeof(TMO)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = int_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo bool_tTypeInfo{
            name           = "bool_t";
            typeKind       = TECSTypeKind_DefinedType;
            bitSize        = C_EXP( "sizeof(bool_t)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = intTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tIntTypeInfo intTypeInfo{
            name           = "int";
            typeKind       = TECSTypeKind_IntType;
            bitSize        = -3;
            b_const        = false;
            b_volatile     = false;
        };
        cell nTECSInfo::tPtrTypeInfo T_RTEX_Ptr_TypeInfo{
            name           = "T_RTEX*";
            typeKind       = TECSTypeKind_PtrType;
            bitSize        = C_EXP( "sizeof(T_RTEX*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = T_RTEXTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo T_RTEXTypeInfo{
            name           = "T_RTEX";
            typeKind       = TECSTypeKind_DefinedType;
            bitSize        = C_EXP( "sizeof(T_RTEX)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = struct__t_rtexTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tStructTypeInfo struct__t_rtexTypeInfo{
            name           = "struct t_rtex";
            typeKind       = TECSTypeKind_StructType;
            bitSize        = C_EXP( "sizeof(struct t_rtex)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo[]    = STATTypeInfo.eTypeInfo;
            cTypeInfo[]    = TEXPTNTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo OVRTIMTypeInfo{
            name           = "OVRTIM";
            typeKind       = TECSTypeKind_DefinedType;
            bitSize        = C_EXP( "sizeof(OVRTIM)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = ulong_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo ulong_tTypeInfo{
            name           = "ulong_t";
            typeKind       = TECSTypeKind_DefinedType;
            bitSize        = C_EXP( "sizeof(ulong_t)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = unsigned__longTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tIntTypeInfo unsigned__longTypeInfo{
            name           = "unsigned long";
            typeKind       = TECSTypeKind_IntType;
            bitSize        = -4;
            b_const        = false;
            b_volatile     = false;
        };
        cell nTECSInfo::tPtrTypeInfo T_ROVR_Ptr_TypeInfo{
            name           = "T_ROVR*";
            typeKind       = TECSTypeKind_PtrType;
            bitSize        = C_EXP( "sizeof(T_ROVR*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = T_ROVRTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo T_ROVRTypeInfo{
            name           = "T_ROVR";
            typeKind       = TECSTypeKind_DefinedType;
            bitSize        = C_EXP( "sizeof(T_ROVR)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = struct__t_rovrTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tStructTypeInfo struct__t_rovrTypeInfo{
            name           = "struct t_rovr";
            typeKind       = TECSTypeKind_StructType;
            bitSize        = C_EXP( "sizeof(struct t_rovr)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo[]    = STATTypeInfo.eTypeInfo;
            cTypeInfo[]    = OVRTIMTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tPtrTypeInfo T_RCYC_Ptr_TypeInfo{
            name           = "T_RCYC*";
            typeKind       = TECSTypeKind_PtrType;
            bitSize        = C_EXP( "sizeof(T_RCYC*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = T_RCYCTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo T_RCYCTypeInfo{
            name           = "T_RCYC";
            typeKind       = TECSTypeKind_DefinedType;
            bitSize        = C_EXP( "sizeof(T_RCYC)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = struct__t_rcycTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tStructTypeInfo struct__t_rcycTypeInfo{
            name           = "struct t_rcyc";
            typeKind       = TECSTypeKind_StructType;
            bitSize        = C_EXP( "sizeof(struct t_rcyc)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo[]    = STATTypeInfo.eTypeInfo;
            cTypeInfo[]    = RELTIMTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo RELTIMTypeInfo{
            name           = "RELTIM";
            typeKind       = TECSTypeKind_DefinedType;
            bitSize        = C_EXP( "sizeof(RELTIM)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = uint_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tPtrTypeInfo T_RALM_Ptr_TypeInfo{
            name           = "T_RALM*";
            typeKind       = TECSTypeKind_PtrType;
            bitSize        = C_EXP( "sizeof(T_RALM*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = T_RALMTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo T_RALMTypeInfo{
            name           = "T_RALM";
            typeKind       = TECSTypeKind_DefinedType;
            bitSize        = C_EXP( "sizeof(T_RALM)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = struct__t_ralmTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tStructTypeInfo struct__t_ralmTypeInfo{
            name           = "struct t_ralm";
            typeKind       = TECSTypeKind_StructType;
            bitSize        = C_EXP( "sizeof(struct t_ralm)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo[]    = STATTypeInfo.eTypeInfo;
            cTypeInfo[]    = RELTIMTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tPtrTypeInfo T_RSEM_Ptr_TypeInfo{
            name           = "T_RSEM*";
            typeKind       = TECSTypeKind_PtrType;
            bitSize        = C_EXP( "sizeof(T_RSEM*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = T_RSEMTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo T_RSEMTypeInfo{
            name           = "T_RSEM";
            typeKind       = TECSTypeKind_DefinedType;
            bitSize        = C_EXP( "sizeof(T_RSEM)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = struct__t_rsemTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tStructTypeInfo struct__t_rsemTypeInfo{
            name           = "struct t_rsem";
            typeKind       = TECSTypeKind_StructType;
            bitSize        = C_EXP( "sizeof(struct t_rsem)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo[]    = IDTypeInfo.eTypeInfo;
            cTypeInfo[]    = uint_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo FLGPTNTypeInfo{
            name           = "FLGPTN";
            typeKind       = TECSTypeKind_DefinedType;
            bitSize        = C_EXP( "sizeof(FLGPTN)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = uint_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo MODETypeInfo{
            name           = "MODE";
            typeKind       = TECSTypeKind_DefinedType;
            bitSize        = C_EXP( "sizeof(MODE)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = uint_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tPtrTypeInfo FLGPTN_Ptr_TypeInfo{
            name           = "FLGPTN*";
            typeKind       = TECSTypeKind_PtrType;
            bitSize        = C_EXP( "sizeof(FLGPTN*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = FLGPTNTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tPtrTypeInfo T_RFLG_Ptr_TypeInfo{
            name           = "T_RFLG*";
            typeKind       = TECSTypeKind_PtrType;
            bitSize        = C_EXP( "sizeof(T_RFLG*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = T_RFLGTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo T_RFLGTypeInfo{
            name           = "T_RFLG";
            typeKind       = TECSTypeKind_DefinedType;
            bitSize        = C_EXP( "sizeof(T_RFLG)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = struct__t_rflgTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tStructTypeInfo struct__t_rflgTypeInfo{
            name           = "struct t_rflg";
            typeKind       = TECSTypeKind_StructType;
            bitSize        = C_EXP( "sizeof(struct t_rflg)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo[]    = IDTypeInfo.eTypeInfo;
            cTypeInfo[]    = FLGPTNTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo intptr_tTypeInfo{
            name           = "intptr_t";
            typeKind       = TECSTypeKind_DefinedType;
            bitSize        = C_EXP( "sizeof(intptr_t)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = __intptr_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo __intptr_tTypeInfo{
            name           = "__intptr_t";
            typeKind       = TECSTypeKind_DefinedType;
            bitSize        = C_EXP( "sizeof(__intptr_t)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = intTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tPtrTypeInfo intptr_t_Ptr_TypeInfo{
            name           = "intptr_t*";
            typeKind       = TECSTypeKind_PtrType;
            bitSize        = C_EXP( "sizeof(intptr_t*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = intptr_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tPtrTypeInfo T_RDTQ_Ptr_TypeInfo{
            name           = "T_RDTQ*";
            typeKind       = TECSTypeKind_PtrType;
            bitSize        = C_EXP( "sizeof(T_RDTQ*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = T_RDTQTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo T_RDTQTypeInfo{
            name           = "T_RDTQ";
            typeKind       = TECSTypeKind_DefinedType;
            bitSize        = C_EXP( "sizeof(T_RDTQ)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = struct__t_rdtqTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tStructTypeInfo struct__t_rdtqTypeInfo{
            name           = "struct t_rdtq";
            typeKind       = TECSTypeKind_StructType;
            bitSize        = C_EXP( "sizeof(struct t_rdtq)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo[]    = IDTypeInfo.eTypeInfo;
            cTypeInfo[]    = IDTypeInfo.eTypeInfo;
            cTypeInfo[]    = uint_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tPtrTypeInfo T_RPDQ_Ptr_TypeInfo{
            name           = "T_RPDQ*";
            typeKind       = TECSTypeKind_PtrType;
            bitSize        = C_EXP( "sizeof(T_RPDQ*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = T_RPDQTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo T_RPDQTypeInfo{
            name           = "T_RPDQ";
            typeKind       = TECSTypeKind_DefinedType;
            bitSize        = C_EXP( "sizeof(T_RPDQ)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = struct__t_rpdqTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tStructTypeInfo struct__t_rpdqTypeInfo{
            name           = "struct t_rpdq";
            typeKind       = TECSTypeKind_StructType;
            bitSize        = C_EXP( "sizeof(struct t_rpdq)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo[]    = IDTypeInfo.eTypeInfo;
            cTypeInfo[]    = IDTypeInfo.eTypeInfo;
            cTypeInfo[]    = uint_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tPtrTypeInfo void_Ptr__Ptr_TypeInfo{
            name           = "void**";
            typeKind       = TECSTypeKind_PtrType;
            bitSize        = C_EXP( "sizeof(void**)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = void_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tPtrTypeInfo void_Ptr_TypeInfo{
            name           = "void*";
            typeKind       = TECSTypeKind_PtrType;
            bitSize        = C_EXP( "sizeof(void*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tPtrTypeInfo const__void_Ptr_TypeInfo{
            name           = "const void*";
            typeKind       = TECSTypeKind_PtrType;
            bitSize        = C_EXP( "sizeof(const void*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = const__voidTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tVoidTypeInfo const__voidTypeInfo{
            name           = "const void";
            typeKind       = TECSTypeKind_VoidType;
            bitSize        = C_EXP( "sizeof(const void)" );
            b_const        = true;
            b_volatile     = false;
        };
        cell nTECSInfo::tPtrTypeInfo T_RMPF_Ptr_TypeInfo{
            name           = "T_RMPF*";
            typeKind       = TECSTypeKind_PtrType;
            bitSize        = C_EXP( "sizeof(T_RMPF*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = T_RMPFTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo T_RMPFTypeInfo{
            name           = "T_RMPF";
            typeKind       = TECSTypeKind_DefinedType;
            bitSize        = C_EXP( "sizeof(T_RMPF)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = struct__t_rmpfTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tStructTypeInfo struct__t_rmpfTypeInfo{
            name           = "struct t_rmpf";
            typeKind       = TECSTypeKind_StructType;
            bitSize        = C_EXP( "sizeof(struct t_rmpf)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo[]    = IDTypeInfo.eTypeInfo;
            cTypeInfo[]    = uint_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tPtrTypeInfo ID_Ptr_TypeInfo{
            name           = "ID*";
            typeKind       = TECSTypeKind_PtrType;
            bitSize        = C_EXP( "sizeof(ID*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = IDTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tPtrTypeInfo SYSTIM_Ptr_TypeInfo{
            name           = "SYSTIM*";
            typeKind       = TECSTypeKind_PtrType;
            bitSize        = C_EXP( "sizeof(SYSTIM*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = SYSTIMTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo SYSTIMTypeInfo{
            name           = "SYSTIM";
            typeKind       = TECSTypeKind_DefinedType;
            bitSize        = C_EXP( "sizeof(SYSTIM)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = ulong_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tPtrTypeInfo SYSUTM_Ptr_TypeInfo{
            name           = "SYSUTM*";
            typeKind       = TECSTypeKind_PtrType;
            bitSize        = C_EXP( "sizeof(SYSUTM*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = SYSUTMTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo SYSUTMTypeInfo{
            name           = "SYSUTM";
            typeKind       = TECSTypeKind_DefinedType;
            bitSize        = C_EXP( "sizeof(SYSUTM)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = ulong_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tPtrTypeInfo const__uint8_t_Ptr_TypeInfo{
            name           = "const uint8_t*";
            typeKind       = TECSTypeKind_PtrType;
            bitSize        = C_EXP( "sizeof(const uint8_t*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = const__uint8_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tIntTypeInfo const__uint8_tTypeInfo{
            name           = "const uint8_t";
            typeKind       = TECSTypeKind_IntType;
            bitSize        = 8;
            b_const        = true;
            b_volatile     = false;
        };
        cell nTECSInfo::tIntTypeInfo uint32_tTypeInfo{
            name           = "uint32_t";
            typeKind       = TECSTypeKind_IntType;
            bitSize        = 32;
            b_const        = false;
            b_volatile     = false;
        };
        cell nTECSInfo::tPtrTypeInfo uint8_t_Ptr_TypeInfo{
            name           = "uint8_t*";
            typeKind       = TECSTypeKind_PtrType;
            bitSize        = C_EXP( "sizeof(uint8_t*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = uint8_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tIntTypeInfo uint8_tTypeInfo{
            name           = "uint8_t";
            typeKind       = TECSTypeKind_IntType;
            bitSize        = 8;
            b_const        = false;
            b_volatile     = false;
        };
        cell nTECSInfo::tPtrTypeInfo T_RMBF_Ptr_TypeInfo{
            name           = "T_RMBF*";
            typeKind       = TECSTypeKind_PtrType;
            bitSize        = C_EXP( "sizeof(T_RMBF*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = T_RMBFTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo T_RMBFTypeInfo{
            name           = "T_RMBF";
            typeKind       = TECSTypeKind_DefinedType;
            bitSize        = C_EXP( "sizeof(T_RMBF)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = struct__t_rmbfTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tStructTypeInfo struct__t_rmbfTypeInfo{
            name           = "struct t_rmbf";
            typeKind       = TECSTypeKind_StructType;
            bitSize        = C_EXP( "sizeof(struct t_rmbf)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo[]    = IDTypeInfo.eTypeInfo;
            cTypeInfo[]    = IDTypeInfo.eTypeInfo;
            cTypeInfo[]    = uint_tTypeInfo.eTypeInfo;
            cTypeInfo[]    = SIZETypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo SIZETypeInfo{
            name           = "SIZE";
            typeKind       = TECSTypeKind_DefinedType;
            bitSize        = C_EXP( "sizeof(SIZE)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = uintptr_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo uintptr_tTypeInfo{
            name           = "uintptr_t";
            typeKind       = TECSTypeKind_DefinedType;
            bitSize        = C_EXP( "sizeof(uintptr_t)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = __uintptr_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo __uintptr_tTypeInfo{
            name           = "__uintptr_t";
            typeKind       = TECSTypeKind_DefinedType;
            bitSize        = C_EXP( "sizeof(__uintptr_t)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = unsigned__intTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo size_tTypeInfo{
            name           = "size_t";
            typeKind       = TECSTypeKind_DefinedType;
            bitSize        = C_EXP( "sizeof(size_t)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = unsigned__intTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tIntTypeInfo int16_tTypeInfo{
            name           = "int16_t";
            typeKind       = TECSTypeKind_IntType;
            bitSize        = 16;
            b_const        = false;
            b_volatile     = false;
        };
        cell nTECSInfo::tDefinedTypeInfo colorid_tTypeInfo{
            name           = "colorid_t";
            typeKind       = TECSTypeKind_DefinedType;
            bitSize        = C_EXP( "sizeof(colorid_t)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo int32_tTypeInfo{
            name           = "int32_t";
            typeKind       = TECSTypeKind_DefinedType;
            bitSize        = C_EXP( "sizeof(int32_t)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = __int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo __int32_tTypeInfo{
            name           = "__int32_t";
            typeKind       = TECSTypeKind_DefinedType;
            bitSize        = C_EXP( "sizeof(__int32_t)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = longTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tIntTypeInfo longTypeInfo{
            name           = "long";
            typeKind       = TECSTypeKind_IntType;
            bitSize        = -4;
            b_const        = false;
            b_volatile     = false;
        };
        cell nTECSInfo::tPtrTypeInfo uint16_t_Ptr_TypeInfo{
            name           = "uint16_t*";
            typeKind       = TECSTypeKind_PtrType;
            bitSize        = C_EXP( "sizeof(uint16_t*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = uint16_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tIntTypeInfo uint16_tTypeInfo{
            name           = "uint16_t";
            typeKind       = TECSTypeKind_IntType;
            bitSize        = 16;
            b_const        = false;
            b_volatile     = false;
        };
        cell nTECSInfo::tFloatTypeInfo float32_tTypeInfo{
            name           = "float32_t";
            typeKind       = TECSTypeKind_FloatType;
            bitSize        = 32;
            b_const        = false;
            b_volatile     = false;
        };
        cell nTECSInfo::tDefinedTypeInfo button_tTypeInfo{
            name           = "button_t";
            typeKind       = TECSTypeKind_DefinedType;
            bitSize        = C_EXP( "sizeof(button_t)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo lcdfont_tTypeInfo{
            name           = "lcdfont_t";
            typeKind       = TECSTypeKind_DefinedType;
            bitSize        = C_EXP( "sizeof(lcdfont_t)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tPtrTypeInfo int32_t_Ptr_TypeInfo{
            name           = "int32_t*";
            typeKind       = TECSTypeKind_PtrType;
            bitSize        = C_EXP( "sizeof(int32_t*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tPtrTypeInfo const__char_Ptr_TypeInfo{
            name           = "const char*";
            typeKind       = TECSTypeKind_PtrType;
            bitSize        = C_EXP( "sizeof(const char*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = const__charTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tIntTypeInfo const__charTypeInfo{
            name           = "const char";
            typeKind       = TECSTypeKind_IntType;
            bitSize        = -11;
            b_const        = true;
            b_volatile     = false;
        };
        cell nTECSInfo::tDefinedTypeInfo lcdcolor_tTypeInfo{
            name           = "lcdcolor_t";
            typeKind       = TECSTypeKind_DefinedType;
            bitSize        = C_EXP( "sizeof(lcdcolor_t)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo ledcolor_tTypeInfo{
            name           = "ledcolor_t";
            typeKind       = TECSTypeKind_DefinedType;
            bitSize        = C_EXP( "sizeof(ledcolor_t)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = int32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tPtrTypeInfo int8_t_Ptr_TypeInfo{
            name           = "int8_t*";
            typeKind       = TECSTypeKind_PtrType;
            bitSize        = C_EXP( "sizeof(int8_t*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = int8_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tIntTypeInfo int8_tTypeInfo{
            name           = "int8_t";
            typeKind       = TECSTypeKind_IntType;
            bitSize        = 8;
            b_const        = false;
            b_volatile     = false;
        };
        cell nTECSInfo::tDefinedTypeInfo ATRTypeInfo{
            name           = "ATR";
            typeKind       = TECSTypeKind_DefinedType;
            bitSize        = C_EXP( "sizeof(ATR)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = uint_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tArrayTypeInfo ACPTN_Array4_TypeInfo{
            name           = "ACPTN[4]";
            typeKind       = TECSTypeKind_ArrayType;
            bitSize        = C_EXP( "sizeof(ACPTN[4])" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = ACPTNTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo ACPTNTypeInfo{
            name           = "ACPTN";
            typeKind       = TECSTypeKind_DefinedType;
            bitSize        = C_EXP( "sizeof(ACPTN)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = uint32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tPtrTypeInfo char_t_Ptr_TypeInfo{
            name           = "char_t*";
            typeKind       = TECSTypeKind_PtrType;
            bitSize        = C_EXP( "sizeof(char_t*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = char_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tIntTypeInfo char_tTypeInfo{
            name           = "char_t";
            typeKind       = TECSTypeKind_IntType;
            bitSize        = -1;
            b_const        = false;
            b_volatile     = false;
        };
        cell nTECSInfo::tArrayTypeInfo char_t_Array128__Array32_TypeInfo{
            name           = "char_t[32][128]";
            typeKind       = TECSTypeKind_ArrayType;
            bitSize        = C_EXP( "sizeof(char_t[32][128])" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = char_t_Array128_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tArrayTypeInfo char_t_Array128_TypeInfo{
            name           = "char_t[128]";
            typeKind       = TECSTypeKind_ArrayType;
            bitSize        = C_EXP( "sizeof(char_t[128])" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = char_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tPtrTypeInfo const__mrb_state_Ptr_TypeInfo{
            name           = "const mrb_state*";
            typeKind       = TECSTypeKind_PtrType;
            bitSize        = C_EXP( "sizeof(const mrb_state*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = const__mrb_stateTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo const__mrb_stateTypeInfo{
            name           = "const mrb_state";
            typeKind       = TECSTypeKind_DefinedType;
            bitSize        = C_EXP( "sizeof(const mrb_state)" );
            b_const        = true;
            b_volatile     = false;
            cTypeInfo      = const__intTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tIntTypeInfo const__intTypeInfo{
            name           = "const int";
            typeKind       = TECSTypeKind_IntType;
            bitSize        = -3;
            b_const        = true;
            b_volatile     = false;
        };
        cell nTECSInfo::tPtrTypeInfo mrb_state_Ptr_TypeInfo{
            name           = "mrb_state*";
            typeKind       = TECSTypeKind_PtrType;
            bitSize        = C_EXP( "sizeof(mrb_state*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = mrb_stateTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDefinedTypeInfo mrb_stateTypeInfo{
            name           = "mrb_state";
            typeKind       = TECSTypeKind_DefinedType;
            bitSize        = C_EXP( "sizeof(mrb_state)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = intTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tPtrTypeInfo struct__RClass_Ptr_TypeInfo{
            name           = "struct RClass*";
            typeKind       = TECSTypeKind_PtrType;
            bitSize        = C_EXP( "sizeof(struct RClass*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = struct__RClassTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tStructTypeInfo struct__RClassTypeInfo{
            name           = "struct RClass";
            typeKind       = TECSTypeKind_StructType;
            bitSize        = C_EXP( "sizeof(struct RClass)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo[]    = intTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tPtrTypeInfo const__char_t_Ptr_TypeInfo{
            name           = "const char_t*";
            typeKind       = TECSTypeKind_PtrType;
            bitSize        = C_EXP( "sizeof(const char_t*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = const__char_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tIntTypeInfo const__char_tTypeInfo{
            name           = "const char_t";
            typeKind       = TECSTypeKind_IntType;
            bitSize        = -1;
            b_const        = true;
            b_volatile     = false;
        };
        cell nTECSInfo::tPtrTypeInfo const__char_Ptr__Ptr_TypeInfo{
            name           = "const char**";
            typeKind       = TECSTypeKind_PtrType;
            bitSize        = C_EXP( "sizeof(const char**)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = const__char_Ptr_TypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tPtrTypeInfo uint32_t_Ptr_TypeInfo{
            name           = "uint32_t*";
            typeKind       = TECSTypeKind_PtrType;
            bitSize        = C_EXP( "sizeof(uint32_t*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = uint32_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tPtrTypeInfo Descriptor_of_nTECSInfo_sTypeInfo_Ptr_TypeInfo{
            name           = "Descriptor( nTECSInfo_sTypeInfo )*";
            typeKind       = TECSTypeKind_PtrType;
            bitSize        = C_EXP( "sizeof(Descriptor( nTECSInfo_sTypeInfo )*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = Descriptor_of_nTECSInfo_sTypeInfoTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDescriptorTypeInfo Descriptor_of_nTECSInfo_sTypeInfoTypeInfo{
            name           = "Descriptor( nTECSInfo_sTypeInfo )";
            typeKind       = TECSTypeKind_DescriptorType;
            bitSize        = C_EXP( "sizeof(Descriptor( nTECSInfo_sTypeInfo ))" );
            b_const        = false;
            b_volatile     = false;
            cSignatureInfo   = nTECSInfo_sTypeInfoSignatureInfo.eSignatureInfo;
        };
        cell nTECSInfo::tPtrTypeInfo Descriptor_of_nTECSInfo_sParamInfo_Ptr_TypeInfo{
            name           = "Descriptor( nTECSInfo_sParamInfo )*";
            typeKind       = TECSTypeKind_PtrType;
            bitSize        = C_EXP( "sizeof(Descriptor( nTECSInfo_sParamInfo )*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = Descriptor_of_nTECSInfo_sParamInfoTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDescriptorTypeInfo Descriptor_of_nTECSInfo_sParamInfoTypeInfo{
            name           = "Descriptor( nTECSInfo_sParamInfo )";
            typeKind       = TECSTypeKind_DescriptorType;
            bitSize        = C_EXP( "sizeof(Descriptor( nTECSInfo_sParamInfo ))" );
            b_const        = false;
            b_volatile     = false;
            cSignatureInfo   = nTECSInfo_sParamInfoSignatureInfo.eSignatureInfo;
        };
        cell nTECSInfo::tPtrTypeInfo Descriptor_of_nTECSInfo_sFunctionInfo_Ptr_TypeInfo{
            name           = "Descriptor( nTECSInfo_sFunctionInfo )*";
            typeKind       = TECSTypeKind_PtrType;
            bitSize        = C_EXP( "sizeof(Descriptor( nTECSInfo_sFunctionInfo )*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = Descriptor_of_nTECSInfo_sFunctionInfoTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDescriptorTypeInfo Descriptor_of_nTECSInfo_sFunctionInfoTypeInfo{
            name           = "Descriptor( nTECSInfo_sFunctionInfo )";
            typeKind       = TECSTypeKind_DescriptorType;
            bitSize        = C_EXP( "sizeof(Descriptor( nTECSInfo_sFunctionInfo ))" );
            b_const        = false;
            b_volatile     = false;
            cSignatureInfo   = nTECSInfo_sFunctionInfoSignatureInfo.eSignatureInfo;
        };
        cell nTECSInfo::tPtrTypeInfo Descriptor_of_nTECSInfo_sSignatureInfo_Ptr_TypeInfo{
            name           = "Descriptor( nTECSInfo_sSignatureInfo )*";
            typeKind       = TECSTypeKind_PtrType;
            bitSize        = C_EXP( "sizeof(Descriptor( nTECSInfo_sSignatureInfo )*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = Descriptor_of_nTECSInfo_sSignatureInfoTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDescriptorTypeInfo Descriptor_of_nTECSInfo_sSignatureInfoTypeInfo{
            name           = "Descriptor( nTECSInfo_sSignatureInfo )";
            typeKind       = TECSTypeKind_DescriptorType;
            bitSize        = C_EXP( "sizeof(Descriptor( nTECSInfo_sSignatureInfo ))" );
            b_const        = false;
            b_volatile     = false;
            cSignatureInfo   = nTECSInfo_sSignatureInfoSignatureInfo.eSignatureInfo;
        };
        cell nTECSInfo::tPtrTypeInfo bool_t_Ptr_TypeInfo{
            name           = "bool_t*";
            typeKind       = TECSTypeKind_PtrType;
            bitSize        = C_EXP( "sizeof(bool_t*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = bool_tTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tPtrTypeInfo Descriptor_of_nTECSInfo_sVarDeclInfo_Ptr_TypeInfo{
            name           = "Descriptor( nTECSInfo_sVarDeclInfo )*";
            typeKind       = TECSTypeKind_PtrType;
            bitSize        = C_EXP( "sizeof(Descriptor( nTECSInfo_sVarDeclInfo )*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = Descriptor_of_nTECSInfo_sVarDeclInfoTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDescriptorTypeInfo Descriptor_of_nTECSInfo_sVarDeclInfoTypeInfo{
            name           = "Descriptor( nTECSInfo_sVarDeclInfo )";
            typeKind       = TECSTypeKind_DescriptorType;
            bitSize        = C_EXP( "sizeof(Descriptor( nTECSInfo_sVarDeclInfo ))" );
            b_const        = false;
            b_volatile     = false;
            cSignatureInfo   = nTECSInfo_sVarDeclInfoSignatureInfo.eSignatureInfo;
        };
        cell nTECSInfo::tPtrTypeInfo Descriptor_of_nTECSInfo_sCallInfo_Ptr_TypeInfo{
            name           = "Descriptor( nTECSInfo_sCallInfo )*";
            typeKind       = TECSTypeKind_PtrType;
            bitSize        = C_EXP( "sizeof(Descriptor( nTECSInfo_sCallInfo )*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = Descriptor_of_nTECSInfo_sCallInfoTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDescriptorTypeInfo Descriptor_of_nTECSInfo_sCallInfoTypeInfo{
            name           = "Descriptor( nTECSInfo_sCallInfo )";
            typeKind       = TECSTypeKind_DescriptorType;
            bitSize        = C_EXP( "sizeof(Descriptor( nTECSInfo_sCallInfo ))" );
            b_const        = false;
            b_volatile     = false;
            cSignatureInfo   = nTECSInfo_sCallInfoSignatureInfo.eSignatureInfo;
        };
        cell nTECSInfo::tPtrTypeInfo Descriptor_of_nTECSInfo_sEntryInfo_Ptr_TypeInfo{
            name           = "Descriptor( nTECSInfo_sEntryInfo )*";
            typeKind       = TECSTypeKind_PtrType;
            bitSize        = C_EXP( "sizeof(Descriptor( nTECSInfo_sEntryInfo )*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = Descriptor_of_nTECSInfo_sEntryInfoTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDescriptorTypeInfo Descriptor_of_nTECSInfo_sEntryInfoTypeInfo{
            name           = "Descriptor( nTECSInfo_sEntryInfo )";
            typeKind       = TECSTypeKind_DescriptorType;
            bitSize        = C_EXP( "sizeof(Descriptor( nTECSInfo_sEntryInfo ))" );
            b_const        = false;
            b_volatile     = false;
            cSignatureInfo   = nTECSInfo_sEntryInfoSignatureInfo.eSignatureInfo;
        };
        cell nTECSInfo::tPtrTypeInfo Descriptor_of_nTECSInfo_sCelltypeInfo_Ptr_TypeInfo{
            name           = "Descriptor( nTECSInfo_sCelltypeInfo )*";
            typeKind       = TECSTypeKind_PtrType;
            bitSize        = C_EXP( "sizeof(Descriptor( nTECSInfo_sCelltypeInfo )*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = Descriptor_of_nTECSInfo_sCelltypeInfoTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDescriptorTypeInfo Descriptor_of_nTECSInfo_sCelltypeInfoTypeInfo{
            name           = "Descriptor( nTECSInfo_sCelltypeInfo )";
            typeKind       = TECSTypeKind_DescriptorType;
            bitSize        = C_EXP( "sizeof(Descriptor( nTECSInfo_sCelltypeInfo ))" );
            b_const        = false;
            b_volatile     = false;
            cSignatureInfo   = nTECSInfo_sCelltypeInfoSignatureInfo.eSignatureInfo;
        };
        cell nTECSInfo::tPtrTypeInfo Descriptor_of_nTECSInfo_sNamespaceInfo_Ptr_TypeInfo{
            name           = "Descriptor( nTECSInfo_sNamespaceInfo )*";
            typeKind       = TECSTypeKind_PtrType;
            bitSize        = C_EXP( "sizeof(Descriptor( nTECSInfo_sNamespaceInfo )*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = Descriptor_of_nTECSInfo_sNamespaceInfoTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDescriptorTypeInfo Descriptor_of_nTECSInfo_sNamespaceInfoTypeInfo{
            name           = "Descriptor( nTECSInfo_sNamespaceInfo )";
            typeKind       = TECSTypeKind_DescriptorType;
            bitSize        = C_EXP( "sizeof(Descriptor( nTECSInfo_sNamespaceInfo ))" );
            b_const        = false;
            b_volatile     = false;
            cSignatureInfo   = nTECSInfo_sNamespaceInfoSignatureInfo.eSignatureInfo;
        };
        cell nTECSInfo::tPtrTypeInfo Descriptor_of_nTECSInfo_sCellInfo_Ptr_TypeInfo{
            name           = "Descriptor( nTECSInfo_sCellInfo )*";
            typeKind       = TECSTypeKind_PtrType;
            bitSize        = C_EXP( "sizeof(Descriptor( nTECSInfo_sCellInfo )*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = Descriptor_of_nTECSInfo_sCellInfoTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDescriptorTypeInfo Descriptor_of_nTECSInfo_sCellInfoTypeInfo{
            name           = "Descriptor( nTECSInfo_sCellInfo )";
            typeKind       = TECSTypeKind_DescriptorType;
            bitSize        = C_EXP( "sizeof(Descriptor( nTECSInfo_sCellInfo ))" );
            b_const        = false;
            b_volatile     = false;
            cSignatureInfo   = nTECSInfo_sCellInfoSignatureInfo.eSignatureInfo;
        };
        cell nTECSInfo::tPtrTypeInfo Descriptor_of_nTECSInfo_sRegionInfo_Ptr_TypeInfo{
            name           = "Descriptor( nTECSInfo_sRegionInfo )*";
            typeKind       = TECSTypeKind_PtrType;
            bitSize        = C_EXP( "sizeof(Descriptor( nTECSInfo_sRegionInfo )*)" );
            b_const        = false;
            b_volatile     = false;
            cTypeInfo      = Descriptor_of_nTECSInfo_sRegionInfoTypeInfo.eTypeInfo;
        };
        cell nTECSInfo::tDescriptorTypeInfo Descriptor_of_nTECSInfo_sRegionInfoTypeInfo{
            name           = "Descriptor( nTECSInfo_sRegionInfo )";
            typeKind       = TECSTypeKind_DescriptorType;
            bitSize        = C_EXP( "sizeof(Descriptor( nTECSInfo_sRegionInfo ))" );
            b_const        = false;
            b_volatile     = false;
            cSignatureInfo   = nTECSInfo_sRegionInfoSignatureInfo.eSignatureInfo;
        };

        /*** TECS information cell ***/
        cell nTECSInfo::tTECSInfoSub TECSInfoSub {
            cNamespaceInfo = _RootNamespaceInfo.eNamespaceInfo;
            cRegionInfo    = _LinkRootRegionInfo.eRegionInfo;
        } /* TECSInfoSub */;
    }; /* rTECSInfo */
};
